@model BT_KimMex.Models.RegisterViewModel
@{
    ViewBag.Title = "Create New User";
}
<style type="text/css">
    table tr td:first-child{
        text-align:left !important;
    }
</style>
<div class="panel panel-default">
    <div class="panel-heading" style="font-size:20px !important;font-weight:bold !important;">
        @ViewBag.Title
    </div>
    <div class="panel-body">

        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*<div class="form-group">
            <label class="col-md-2">Date:</label>
            <label class="col-md-10" id="user_current_date"></label>
        </div>*@
            <div class="col-md-12 col-lg-12 col-12 col-sm-12 col-xs-12">
                <div class="col-md-8 col-lg-8 col-8 col-sm-8 col-xs-8">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-4">Login Name <strong style="color:red;">*</strong>:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-4">Password <strong style="color:red;">*</strong>:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-4">Confirm Password <strong style="color:red;">*</strong>:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-4">Position:</label>
                        <div class="col-md-8">
                            @Html.DropDownList("Position", @ViewBag.PositionID as SelectList, "Select Position", new { @class = "form-control", id = "Position" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-4">User Group <strong style="color:red;">*</strong>:</label>
                        <div class="col-md-8">
                            <table>
                                @{
                                    foreach (var item in ViewBag.GroupID)
                                    {
                                        <tr><td><input type="checkbox" id="@item.Role" name="Role" value="@item.Role" />@item.Role</td></tr>
                                    }
                                }
                            </table>

                            @*@Html.DropDownList("UserRoles", @ViewBag.GroupID as SelectList, "Select User Group", new { @class = "form-control", id = "UserRoles" })*@
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-lg-4 col-4 col-sm-12 col-xs-12">
                    <div class="form-group row">
                        <input type="file" id="signature_file" class="form-control imageBrowes" accept="image/*" />
                        <input type="hidden" class="form-control" name="user_signature" id="file-path">
                        <div id="imgPreview" class="thumbnail">
                            <img src="@Url.Content("~/Assets/img/profile-picture.jpg")" style=" background-color:white; width: 100%;height: auto;" class="img-responsive" id="targetImg" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" class="btn btn-success" value="Register" />
                        <a href="@Url.Action("Index","User")" class="btn btn-danger">Back</a>
                    </div>
                </div>
            </div>
            </div>

            
            

        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $('#user_current_date').text(getFormattedDateMMDDYYYY(new Date()));
            initial_position_dropdownlist();
            initial_user_group_dropdownlist();

            $("#signature_file").change(function (e) {
                e.preventDefault();
                readURL(this);
            });

        });
    </script>
    <script type="text/javascript">

        function initial_position_dropdownlist() {
                $.ajax({
                    url:"@Url.Action("GetPositionDropdownList", "User")",
                    type: "get",
                    dataType: "json",
                    success: function (data) {
                        $('#postion').empty();
                        $('#postion').append("" +
                            "<option selected disabled>Select Position</option>"
                        );
                        $.each(data, function (index, item) {
                            $.each(item, function (index1, item1) {
                                $('#postion').append("" +
                                        "<option value='" + item1.position_id + "'>" + item1.position_name + "</option>"
                                    );
                            });
                        });
                    },
                    error: function (err) {
                        alert("Position:" + err.statusText);
                    }
                });
            }

        function initial_user_group_dropdownlist() {
                $.ajax({
                    url:"@Url.Action("GetUserGroupDropdownList", "User")",
                    type: "get",
                    dataType: "json",
                    success: function (data) {
                        $('#UserRoles').empty();
                        $('#UserRoles').append("" +
                            "<option selected disabled>Select User Group</option>"
                        );
                        $.each(data, function (index, item) {
                            $.each(item, function (index1, item1) {
                                $('#UserRoles').append("" +
                                        "<option value='" + item1.Role + "'>" + item1.Role + "</option>"
                                    );
                            });
                        });
                    },
                    error: function (err) {
                        alert("User Group:"+err.statusText);
                    }
                });
        }

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#targetImg').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]); // convert to base64 string

                var data = new FormData;
                data.append("ImageFile", input.files[0]);
                
                $.ajax({
                    type: "Post",
                    url: "/Account/UploadUserSignature",
                    data: data,
                    contentType: false,
                    processData: false,
                    success: function (imgID) {
                        console.log(imgID);
                        if (imgID != null) {
                            $('#file-path').val(imgID.SignaturePath);
                        }                       
                    }

                })
            }
        }

        function ClearPreview() {
            $(".imageBrowes").val('');
            $("#description").text('');
            $("#imgPreview").hide();
        }

        function ReadImage(file) {
            var reader = new FileReader;
            var image = new Image;

            reader.readAsDataURL(file);
            reader.onload = function (_file) {
                image.src = _file.target.result;
                image.onload = function () {

                    var height = this.height;
                    var width = this.width;
                    var type = file.type;
                    var size = ~~(file.size / 1048576) + " MB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#descriptionimage").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                    $("#imgPreview").show();
                }
            }
        }
    </script>
}
