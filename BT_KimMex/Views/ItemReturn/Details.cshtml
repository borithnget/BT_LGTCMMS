@model BT_KimMex.Models.ItemReturnViewModel
@using BT_KimMex.Class;
@{
    ViewBag.Title = "Details";
    bool isCFO = false;
    bool isMSC = false;
    bool isAdmin = false;
    if (User.IsInRole(BT_KimMex.Class.Role.SystemAdmin))
    {
        isAdmin = true;
    }
    if (User.IsInRole(BT_KimMex.Class.Role.SiteStockKeeper))
    {
        isMSC = true;
    }
    if(User.IsInRole("Chief of Finance Officer"))
    {
        isCFO = true;
    }
}
<style type="text/css">
    #returnItemTable tr td{
        vertical-align:middle !important;
    }
    #returnItemTable tr td:nth-child(6){
        text-align:center !important;
    }
</style>
<div class="w3-container">
    <h3 class="">View Stock Return to Supplier Detail</h3>
</div>


<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.created_date, new { @class="col-md-2"})
        @Html.Label(BT_KimMex.Class.CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd-MMM-yyyy"), new { @class="col-md-10"})
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.itemReturnNumber, new { @class = "col-md-2" })
        @Html.Label(Model.itemReturnNumber, new { @class = "col-md-10" })
    </div>
    <div class="row" style="margin:0 !important;">
        <table class="table table-bordered table-responsive" id="returnItemTable">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Item Code</th>
                    <th>Item Name</th>
                    <th>To Supplier</th>
                    <th>From Warehouse</th>
                    @*<th>Stock Balance</th>*@
                    <th>Return Qty</th>
                    <th>Unit</th>
                    <th>Invoice No.</th>
                    <th>Invoice Date</th>
                    <th>Remark</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @{ 
                    int count = 1;
                    foreach(var item in Model.inventoryDetails)
                    {
                        <tr>
                            <td>@count</td>
                            <td>@item.itemCode</td>
                            <td>@item.itemName</td>
                            <td>@item.supplier_name</td>
                            <td>@item.warehouseName</td>
                            @*<td>@string.Format("{0:G29}",Double.Parse(item.stock_balance.ToString())) @item.itemUnit</td>*@
                            <td>@string.Format("{0:N2}",Double.Parse(item.quantity.ToString()))</td>
                            <td>@item.unitName</td>
                            <td>@item.invoice_number</td>
                            <td>@Convert.ToDateTime(item.invoice_date).ToString("dd/MM/yyyy")</td>
                            <td>@item.remark</td>
                            <td>
                                @if (string.Compare(item.item_status, "pending") == 0)
                                {
                                    <label style="color:orange !important">@item.item_status</label>
                                }
                                else if (string.Compare(item.item_status, "approved") == 0)
                                {
                                    <label style="color:blue !important">@item.item_status</label>
                                }
                                else if (string.Compare(item.item_status, "feedbacked") == 0)
                                {
                                    <label style="color:grey !important">@item.item_status</label>
                                }                           
                            </td>
                        </tr>
                        count++;
                    }
                }
            </tbody>
        </table>
    </div>
    @if (Model.rejects.Count() > 0)
    {
        <div class="form-group">
            <label class="control-label col-md-2">Reject Command:</label>
            <div class="col-md-10">
                <ul>
                    @foreach (var reject in Model.rejects)
                    {
                        <li>@reject.comment <b>By @reject.rejected_by</b></li>
                    }
                </ul>
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @{
                if ((isAdmin || isMSC))
                {
                    if (string.Compare(Model.itemReturnStatus, BT_KimMex.Class.Status.Pending) == 0)
                    {
                        @*@Html.ActionLink("Edit", "Edit", new { id = Model.itemReturnId }, new { @class = "btn btn-default" })*@
                        <button class="w3-button w3-tiny w3-deep-orange" id="btn-cancel">Request Cancel</button>
                    }
                    else if (string.Compare(Model.itemReturnStatus, BT_KimMex.Class.Status.PendingFeedback) == 0)
                    {
                        @Html.ActionLink("Prepare Feedback", "PrepareFeedback", new { id = Model.itemReturnId }, new { @class = "w3-button w3-tiny w3-green" })
                    }
                }
                if ((isAdmin || User.IsInRole(Role.QAQCOfficer)) && (Model.itemReturnStatus == BT_KimMex.Class.Status.Pending||string.Compare(Model.itemReturnStatus,BT_KimMex.Class.Status.Feedbacked)==0))
                {
                    @*<a href="javascript:void(0)" id="@Model.itemReturnId" class="btn btn-default approve-promp">Approve</a>
                    <a href="javascript:void(0)" id="@Model.itemReturnId" class="btn btn-default reject-promp">Reject</a>*@
                    @Html.ActionLink("Approve/ Feedback", "ApproveFeedback", new { id = Model.itemReturnId }, new { @class = "w3-button w3-tiny w3-teal" })
                }
                if ((User.IsInRole(BT_KimMex.Class.Role.SystemAdmin) || User.IsInRole(BT_KimMex.Class.Role.SiteManager)) && string.Compare(Model.itemReturnStatus, BT_KimMex.Class.Status.Approved) == 0)
                {
                    <a href="javascript:void(0)" id="@Model.itemReturnId" class="w3-button w3-tiny w3-teal approve-promp">Approve</a>
                        <a href="javascript:void(0)" id="@Model.itemReturnId" class="w3-button w3-tiny w3-deep-orange reject-promp">Reject</a>
                }
            }
            <a href="javascript:history.back()" class="w3-button w3-tiny w3-red">Back</a>
             
        </div>
    </div>
</div>

<!-- approve project modal popup-->
<div class="modal fade" id="approveModal" tabindex="=-1" role="dialog" aria-labelledby="approveModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-warning">
                <h4 class="modal-title" id="myModalLabel">Comfirmation</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure to <strong>Approve</strong> this item?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default approve-confirm">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>

            </div>
        </div>
    </div>
</div>

<!-- reject project modal popup-->
<div class="modal fade" id="rejectModal" tabindex="=-1" role="dialog" aria-labelledby="rejectModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-danger">
                <h4 class="modal-title" id="myModalLabel">Comfirmation</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <p class="success-message col-md-12">Are you sure to <strong>Reject</strong> this item?</p>
                    <label class="col-md-2">Comment:</label>
                    <div class="col-md-10">
                        <textarea class="form-control" rows="5" id="reject-comment"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default reject-confirm">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>

            </div>
        </div>
    </div>
</div>

@section Scripts{
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            var returnId;

            $('#btn-cancel').click(function (e) {
                e.preventDefault();
                swal({
                    title: "Cancellation",
                    text: "Please input your cancel comment:",
                    icon: "warning",
                    content: "input",
                })
                .then((value) => {
                    $.ajax({
                        url: "/ItemReturn/CancelRequest",
                        data: {
                            'id': '@Model.itemReturnId',
                            'comment': value,
                        },
                        type: 'GET',
                        success: function (da) {
                            swal("Request has been cancelled successfully.", {
                                icon: "success",
                            });
                            window.location.href = '@Url.Action("Index", "ItemReturn")';
                        },
                        error: function (err) {
                            swal("Poof! " + err, {
                                icon: "error",
                            });
                        }
                    });
                });
            });

            $('.approve-promp').click(function () {
                returnId = $(this).attr('id');
                $('#approveModal').modal('show');
            });

            $('.approve-confirm').click(function () {
                if (returnId != '') {
                    $.ajax({
                        url: "/ItemReturn/Approve",
                        data: {
                            'id': returnId,
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('#approveModal').modal('hide');
                            if (da.result == "success") {
                                $.notify('Your data has been approved!', { className: 'success' });
                                window.location.href = '@Url.Action("Index", "ItemReturn")';
                            }
                            else if (da.result == "fail")
                                $.notify('Your data has been error while approving!', { className: 'error' });
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                            $.notify('Your data has been error while approving!', { className: 'error' });
                        }
                    });
                }
            });

            $('.reject-promp').click(function () {
                returnId = $(this).attr('id');
                $('#rejectModal').modal('show');
            });

            $('.reject-confirm').click(function () {
                if (returnId != '') {
                    var comment = $("#reject-comment").val();
                    $.ajax({
                        url: "/ItemReturn/Reject",
                        data: {
                            'id': returnId,
                            'comment': comment
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.reject-confirm').css('display', 'none');
                            }
                            $('#rejectModal').modal('hide');
                            if (da.result == "success") {
                                //$.notify('Your data has been rejected!', { className: 'success' });
                                alert("Your data has been rejected successfule.");
                                window.location.href = '@Url.Action("Index", "ItemReturn")';
                            }
                            //else if (da.result == "fail")
                                //$.notify('Your data has been error while rejecting!', { className: 'error' });
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                            $.notify('Your data has been error while rejecting!', { className: 'error' });
                        }
                    });
                }
            });

        });
    </script>
    }