@model BT_KimMex.Models.ProductClassViewModel


@{
    ViewBag.Title = "Create";

}
<h3>Create New Product Class</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Class Type <strong style="color:red;"></strong> :</label>
            <div class="col-md-10">
                <select class="form-control" id="class_type_id" name="class_type_id">
                    <option value="">Select Class Type</option>
                    @{
                        BT_KimMex.Entities.kim_mexEntities db = new BT_KimMex.Entities.kim_mexEntities();
                        var classtypes = db.tb_class_type.OrderBy(o => o.class_type_name).Where(w => w.active == true).ToList();
                        foreach (var item in classtypes)
                        {
                            <option value="@item.class_type_id">@item.class_type_name</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.class_type_id, "", new { @class = "text-danger", style = "display:block !important;" })
            </div>
        </div>
    </div>

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group row">
                <label class="control-label col-md-2">Product Class <strong style="color:red;"></strong> :</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product_class_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.product_class_name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <a href="@Url.Action("Index","ProductClass")" class="btn btn-default">Cancel</a>
                </div>
            </div>
        </div>

                        }
@section Scripts{
    <script>
    $(function () {
            initialProductClassDataTable();
        });
    function InitialSiteDropDownList(site_id) {
                $.ajax({
                    url: "@Url.Action("SiteDropDown", "Site")",
                    type: "get",
                    dataType: "json",
                    success: function (data) {

                        $('#productclass_site_id').empty();
                        $('#productclass_site_id').append("" +
                            "<option value>Select Site Name</option>"
                        );
                        $.each(data, function (index, item) {
                            $.each(item, function (index1, item1) {

                                $('#productclass_site_id').append("" +
                                        "<option value='" + item1.site_id + "'>" + item1.site_name + "</option>"
                                    );
                            });
                        });
                        $('#productclass_site_id').val(site_id);
                    },
                    error: function (data) {

                    }
        });

    }




    </script>
}






@*$("#class_type_id").change(function () {
    $("#product_class").val($("#class_type_id  option:selected").text());
      });*@

@*<div class="form-horizontal">
    <div class="form-group " >
        <div class="col-md-10" style="float:right; margin-right:-2px;">
            @Html.Label("Product Class", new { @class = "control-label" })
            <input class="form-control inp-site" type="text" readonly id="product_class"
                   name="Product Class" onfocus="class_type_id()" value=" " />
            </div>
        </div>
    </div>*@