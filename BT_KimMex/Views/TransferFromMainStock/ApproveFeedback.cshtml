@model BT_KimMex.Models.TransferFromMainStockViewModel
@using BT_KimMex.Class
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "ApproveFeedback";
    BT_KimMex.Entities.kim_mexEntities db = new BT_KimMex.Entities.kim_mexEntities();
    string userid = User.Identity.GetUserId().ToString();
}
<style type="text/css">
    #stockTransferTable tr td {
        vertical-align: middle !important;
    }

        #stockTransferTable tr td:nth-child(4), 
        #stockTransferTable tr td:nth-child(6) {
            text-align: center !important;
        }
</style>

<div class="form-horizontal">
    <h3 class="title">Approve/ Feedback Transfer From WorkShop</h3>
    @Html.HiddenFor(model => model.stock_transfer_id)
    <div class="form-group">
        <label class="control-label col-md-2">Date: </label>
        <label class="col-md-10"> @CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd/MM/yyyy")</label>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Transfer Number: </label>
        <label class="col-md-10">@Model.stock_transfer_no</label>
    </div>
    <div class="form-group">
        @*@Html.LabelFor(model => model.item_request_no, new { @class = "control-label col-md-2" })*@
        <label class="control-label col-md-2">Material Request Ref.: </label>
        <label class="col-md-10">@Model.item_request_no</label>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Warehouse:</label>
        <div class="col-md-10">
            <label id="warehouse">@CommonClass.ConvertWarehouseName(Model.item_request_id)</label>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered" id="stockTransferTable">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Item Code</th>
                    <th>Item Name</th>
                    <th>Requested QTY</th>
                    @*<th>From Warehouse</th>*@
                    <th>Transfer QTY</th>
                    <th>Invoice No.</th>
                    <th>Invoice Date</th>
                    <th>Approve</th>
                    <th>Feedback</th>
                    <th>Comment</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int count = 1;
                    int cc = 1;
                    foreach (var item in Model.itemTransfers)
                    {
                        foreach (var stitem in Model.inventoryDetails)
                        {
                            if (item.itemID == stitem.product_id)
                            {

                                if (string.Compare(stitem.item_status, "completed") == 0)
                                {
                                    <tr>
                                        <td>@count</td>
                                        <td>@item.itemCode</td>
                                        <td>@item.itemName</td>
                                        <td>@string.Format("{0:G29}", Double.Parse(item.requestQty.ToString())) @item.requestUnitName</td>
                                        @*<td>@item.warehouseName</td>*@
                                        <td>@string.Format("{0:G29}", Double.Parse(stitem.out_quantity.ToString())) @db.tb_unit.Find(stitem.unit).Name</td>
                                        <td>@stitem.invoice_number</td>
                                        <td>
                                            @if (stitem.invoice_date != null)
                                            {
                                                <p>@Convert.ToDateTime(stitem.invoice_date).ToString("dd/MM/yyyy")</p>
                                            }
                                        </td>
                                        <td></td>
                                        <td></td>
                                        <td>@stitem.remark</td>
                                    </tr>
                                }
                                else
                                {
                                    var issm = item.projectSiteManagers.Where(s => string.Compare(s, userid) == 0).FirstOrDefault();
                                    string name = "item" + cc;
                                    <tr>
                                        <td>@count</td>
                                        <td>
                                            @if (User.IsInRole("Admin") || issm != null || User.IsInRole(Role.WorkshopController))
                                            {
                                                name = "item" + cc;
                                                <input type="hidden" value="@stitem.inventory_id" class="transfer_detail" />
                                                cc++;
                                            }

                                            @item.itemCode
                                        </td>
                                        <td>@item.itemName</td>
                                        <td>@string.Format("{0:G29}", Double.Parse(item.requestQty.ToString())) @item.requestUnitName</td>
                                        @*<td>@item.warehouseName</td>*@
                                        <td>@string.Format("{0:G29}", Double.Parse(stitem.out_quantity.ToString())) @db.tb_unit.Find(stitem.unit).Name</td>
                                        <td>@stitem.invoice_number</td>
                                        <td>
                                            @if (stitem.invoice_date != null)
                                            {
                                                <p>@Convert.ToDateTime(stitem.invoice_date).ToString("dd/MM/yyyy")</p>
                                            }
                                        </td>
                                        <td>
                                            <label><input type="radio" class="approval" name="@name" value="approved"> Approve</label>

                                        </td>
                                        <td>
                                            <label><input type="radio" class="approval" name="@name" value="feedbacked"> Feedback</label>
                                        </td>
                                        <td>
                                            <textarea class="form-control feedback_comment">@item.remark</textarea>
                                        </td>
                                    </tr>

                                }

                                count++;
                            }

                        }
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Submit" class="btn btn-success" id="btnSubmit" onclick="approveFeedbackTransferFromMainStock()" />
            <a href="javascript:history.back()" class="btn btn-danger">Back</a>
        </div>
    </div>
</div>

<script type="text/javascript">
    function enable_submit_button(is_submit) {
        if (is_submit) {
            $('#btnSubmit').text("Submitting...");
            $('#btnSubmit').attr('disabled', true);
        } else {
            $('#btnSubmit').text("Submit");
            $('#btnSubmit').attr('disabled', false);
        }
    }
    function approveFeedbackTransferFromMainStock() {
        enable_submit_button(true);
        var models = [];
        var item_element = {};
        var countInvalidStatus = 0;
        var transferFromMainStockId = $('#stock_transfer_id').val();
        var transferDetails = $('.transfer_detail');
        var feedbackComments = $('.feedback_comment');
        for (var i = 1; i <= transferDetails.length; i++) {
            var item_status = $('input[name=item' + i + ']:checked').val();
            if (!item_status) countInvalidStatus++;
            var idx = Number(i - 1);
            item_element = {};
            item_element.inventory_id = transferDetails[idx].value;
            item_element.item_status = item_status;
            item_element.remark = feedbackComments[idx].value;
            models.push(item_element);
        }
        if (countInvalidStatus > 0) {
            alert("Please select Approve or Feedback option for each item.");
            return;
        }
        $.ajax({
            url: "@Url.Action("ApproveFeedback", "TransferFromMainStock")",
            type: "post",
            dataType: "json",
            async: false,
            data: { id: transferFromMainStockId, models: models },
            success: function (da) {
                if (da.result == "success") {
                    alert('Your data has been sumitted successfully.');
                    window.location.href = '@Url.Action("Index")';
                } else {
                    alert('Your data is error while sumiting.');
                }
            },
            error: function (err) {
                alert('Your data is error while sumiting.');
            }
        });
    }
</script>