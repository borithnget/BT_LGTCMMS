@model BT_KimMex.Models.WorkorderReturnedViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    #issueReturnTable tr td {
        /*text-align: center !important;*/
        vertical-align: middle !important;
    }
</style>

<h3 class="title">Create New Work Order Returned Request</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            <label class="col-md-2">Date:</label>
            <label class="col-md-10">@BT_KimMex.Class.CommonClass.ToLocalTime(Convert.ToDateTime(DateTime.Now)).ToString("dd/MM/yyyy")</label>
        </div>
        <div class="form-group">
            <label class="col-md-2">Work Order Returned No.:</label>
            <label class="col-md-10">@ViewBag.WorkorderReturnedNumber</label>
        </div>
        <div class="form-group">
            <label class="col-md-2">Work Order Issued Ref. <strong class="text-danger">*</strong>:</label>
            <div class="col-md-10">
                @Html.DropDownList("workorder_issued_id",new SelectList(ViewBag.WorkorderIssuedListItems, "stock_issue_id", "stock_issue_number"), "Select Workorder issued Number", new { @class = "form-control", id = "workorder_issued_id" })
                @Html.ValidationMessageFor(model => model.workorder_issued_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2">Project:</label>
            <label class="col-md-10" id="project_name"></label>
        </div>
        <div class="form-group">
            <label class="col-md-2">Warehouse:</label>
            <label class="col-md-10" id="warehouse_name"></label>
            <input type="hidden" id="warehouse_id"/>
        </div>
        <div class="row" style="margin:0 !important;">
            <table class="table table-bordered table-responsive" id="issueReturnTable">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Item Code</th>
                        <th>Item Name</th>
                        <th>Issued Qty</th>
                        <th>Return Qty</th>
                        <th>Unit</th>
                        <th>Invoice No.</th>
                        <th>Invoice Date</th>
                        <th>Remark</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="10">No data available in table</td>
                    </tr>
                </tbody>
            </table>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Submit" class="btn btn-success" onclick="submitRequest()" />
                @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section scripts{
    <script type="text/javascript">

        $(function () {

            $('#workorder_issued_id').change(function (e) {
                e.preventDefault();
                $('#project_name').text('');
                $('#warehouse_id').val('');
                $('#warehouse_name').text('');
                $('#issueReturnTable tbody').empty();
                var workorderIssuedId = $(this).val();
                if (workorderIssuedId == null || workorderIssuedId == '' || workorderIssuedId == undefined)
                    return;

                $.ajax({
                    url: '@Url.Action("GetWorkOrderIssuedDetailJson", "StockIssue")',
                    type: "get",
                    dataType: "json",
                    data: { id: workorderIssuedId },
                    async: false,
                    success: function (da) {
                        //console.log(da);
                        var model = da.data;
                        var str = "";
                        $('#project_name').text(model.project_name);
                        $('#warehouse_id').val(model.warehouse.warehouse_id);
                        $('#warehouse_name').text(model.warehouse.warehouse_name);
                        $.each(model.inventoryDetails, function (index, item) {
                            console.log(item);
                            if (index == model.inventoryDetails.length - 1)
                                str = "<a href='javascript:void(0)' class='btn-sm btn-default' onclick='appendItemRow(this)'><i class='fa fa-plus-circle'></i></a>";
                            var mou = "<option value='" + item.itemUnit + "'>" + item.itemunitname + "</option>";
                            if (item.uom) {
                                if (item.uom.uom1_id && item.uom.uom1_qty) {
                                    mou = mou + "<option value='" + item.uom.uom1_id + "," + item.uom.uom1_qty + "'>" + item.uom.uom1_id+ "</option>";
                                }
                                if (item.uom.uom2_id && item.uom.uom2_qty) {
                                    mou = mou + "<option value='" + item.uom.uom2_id + "," + item.uom.uom2_qty + "'>" + item.uom.uom2_id + "</option>";
                                }
                                if (item.uom.uom3_id && item.uom.uom3_qty) {
                                    mou = mou + "<option value='" + item.uom.uom3_id + "," + item.uom.uom3_qty + "'>" + item.uom.uom3_id + "</option>";
                                }
                                if (item.uom.uom4_id && item.uom.uom4_qty) {
                                    mou = mou + "<option value='" + item.uom.uom4_id + "," + item.uom.uom4_qty + "'>" + item.uom.uom4_id + "</option>";
                                }
                                if (item.uom.uom5_id && item.uom.uom5_qty) {
                                    mou = mou + "<option value='" + item.uom.uom5_id + "," + item.uom.uom5_qty + "'>" + item.uom.uom5_id + "</option>";
                                }
                            }
                            console.log(mou);
                            $('#issueReturnTable').append("" +
                                "<tr id='i" + Number(index + 1) + "'>" +
                                    "<td>" + Number(index + 1) + "</td>" +
                                    "<td><input type='hidden' class='item-id' value='" + item.inventory_item_id + "'/>" + item.itemCode + "</td>" +
                                    "<td><label class='item-name'>" + item.itemName + "</label></td>" +
                                    "<td><label class='issue-qty'>" + item.quantity + "</label> <input type='hidden' class='issue-unit' value='" + item.itemUnit + "'/> <label class='issue-unit-name'>" + item.itemunitname + "</label></td>" +//item.itemUnit
                                    "<td><input type='number' class='form-control return-qty' placeholder='Issue Return Qty' value='0' onchange='checkIssueReturnQty(this)' /></td>" +
                                    "<td><select class='form-control item-unit' onchange='checkIssueReturnQty(this)' style='width:100px !important;'>" + mou + "</select></td>" +
                                    "<td><input type='text' class='form-control invoice_number'/></td>" +
                                    "<td>" +
                                        '<div style="display:inline-block !important;margin-right:5px !important;">' +
                                            '<div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">' +
                                                '<input type="text" class="form-control invoice_date" style="width:130px !important;"/>' +
                                                '<div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>' +
                                            '</div>' +
                                        '</div>' +
                                    "</td>" +
                                    "<td><textarea class='form-control remark' placeholder='Remark'></textarea></td>" +
                                    "<td><a href='javascript:void(0)' class='btn-sm btn-default' onclick='removeItemRow(this)'><i class='fa fa-minus-circle'></i></a></td>" +
                                "</tr>"
                            );
                        });
                        $(".date").datepicker({ format: 'dd/mm/yyyy' });
                        
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    }
                });

            });

        });

        function submitRequest() {
            var inventories = [];
            var item_element = {};
            var workorderIssued = $('#workorder_issued_id').val();
            var warehouse_id = $('#warehouse_id').val();
            var items = $('.item-id');
            var itemsName = $('.item-name');
            var issueQtys = $('.issue-qty');
            var issueUnits = $('.issue-unit');
            var issueReturnQtys = $('.return-qty');
            var issueReturnUnit = $('.item-unit');
            var remarks = $('.remark');
            var invoiceNumbers = $('.invoice_number');
            var invoiceDates = $('.invoice_date');

            var countInvalid = 0;
            if (!workorderIssued) {
                alert('Workorder Issued Ref. is required.');
                return;
            }

            for (var i = 0; i < items.length; i++) {
                var splitUnit = (issueReturnUnit[i].value).split(',');
                if (items[i].value && issueQtys[i].innerHTML && Number(issueReturnQtys[i].value) > 0) { 
                    item_element = {};
                    item_element.warehouse_id = warehouse_id;
                    item_element.product_id = items[i].value;
                    item_element.total_quantity = issueQtys[i].innerHTML;
                    item_element.in_quantity = issueReturnQtys[i].value;
                    item_element.remark = remarks[i].value;
                    item_element.itemName = itemsName[i].innerHTML;
                    //item_element.warehouseName = warehousesName[i].innerHTML;
                    item_element.unit = splitUnit[0];
                    item_element.invoice_number = invoiceNumbers[i].value;
                    item_element.invoice_date = convertDDMMYYYtoMMDDYYYY(invoiceDates[i].value);
                    inventories.push(item_element);
                }
                else {
                    countInvalid++;
                }
            }

            if (inventories.length == 0) {
                alert("Please fill in workorder return qty and workorder return must smaller or equals issued qty.");
                return;
            }

            var model = {
                workorder_issued_id: workorderIssued,
                inventories: inventories,
            };
            $.ajax({
                url: "/WorkOrderReturned/Create",
                type: "post",
                dataType: "json",
                async: false,
                data: { model: model },
                success: function (da) {

                    if (da.result == "success") {
                        $.notify('Your data has been saved!', { className: 'success' });
                        window.location.href = '@Url.Action("Index", "WorkOrderReturned")';
                    } else if (da.result == "error") {
                        alert(da.message);

                    }
                },
                error: function (err) {
                    $.notify('Your data is error while saving!', { className: 'error' });
                }
            });

        }

        function checkIssueReturnQty(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var issueQty = $('#issueReturnTable tr').eq(ind).find('label.issue-qty').text();
            var issueUnit = $('#issueReturnTable tr').eq(ind).find('input.issue-unit').val();
            var issueReturnQty = $('#issueReturnTable tr').eq(ind).find('input.return-qty').val();
            var issueReturnUnit = $('#issueReturnTable tr').eq(ind).find('select.item-unit').val();
            //if (Number(issueQty) < Number(issueReturnQty)) {
            //    alert("Issue return item quantity must be smaller than Issue item quantity.");
            //    return;
            //}

            if (!issueReturnQty && !issueReturnUnit)
                return;
            var splitIssueReturnUnit = issueReturnUnit.split(',');
            if (issueUnit == splitIssueReturnUnit[0]) {
                if (issueReturnQty && Number(issueReturnQty) > Number(issueQty)) {
                    alert("Issue Return quantity must be smaller or equal to issue quantity.");
                    $('#issueReturnTable tr').eq(ind).find('input.return-qty').focus();
                    $('#issueReturnTable tr').eq(ind).find('input.return-qty').val(0);
                }

            }
            else {
                var quantity = 0;
                var selectedIndex = $('#issueReturnTable tr').eq(ind).find('select.item-unit').prop('selectedIndex');
                if (issueQty) {
                    if (selectedIndex == 1) {
                        var splitElement = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        quantity = issueReturnQty / splitElement[1];
                    }
                    else if (selectedIndex == 2) {
                        var splitElement = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        quantity = (issueReturnQty / splitElement[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 3) {
                        var splitElement = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        quantity = ((issueReturnQty / splitElement[1]) / splitElement3[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 4) {
                        var splitElement = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(4).val().split(',');
                        quantity = ((((issueReturnQty / splitElement[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2[1]);
                    } else if (selectedIndex == 5) {
                        var splitElement = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(4).val().split(',');
                        var splitElement5 = $('#issueReturnTable tr').eq(ind).find('select.item-unit option').eq(5).val().split(',');
                        quantity = ((((issueReturnQty / splitElement[1]) / splitElement5[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2;
                    }
                    if (quantity > Number(issueQty)) {
                        alert("Issue Return quantity must be smaller or equal to issue quantity.");
                        $('#issueReturnTable tr').eq(ind).find('input.return-qty').focus();
                        $('#issueReturnTable tr').eq(ind).find('input.return-qty').val(0);
                        return;
                    }
                }
            }

        }

    </script>
    }
