@model BT_KimMex.Models.StockIssueViewModel
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Edit";
    string date =BT_KimMex.Class.CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd/MM/yyyy");
    string stockIssueNumber = Model.stock_issue_number;
}
@*<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />*@
<style type="text/css">
    #stockIssueTable tr td {
        text-align: center !important;
        vertical-align: middle !important;
    }

        #stockIssueTable tr td:nth-child(3) {
            text-align: left !important;
        }
</style>
<h3 class="title">Edit Workshop Issued</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.stock_issue_id)

        <div class="form-group">
            @Html.LabelFor(model => model.created_date, new { @class = "col-md-2" })
            @Html.Label(date, new { @class = "col-md-10" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock_issue_number, htmlAttributes: new { @class = "col-md-2" })
            @Html.Label(stockIssueNumber, new { @class = "col-md-10", id = "stock_issue_number" })
        </div>

        <div class="row" style="margin:0 !important;">
            <table class="table table-bordered table-responsive" id="stockIssueTable">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Item Code</th>
                        <th>Item Name</th>
                        <th>Warehouse</th>
                        <th>Stock Balance</th>
                        <th>Issue Qty</th>
                        <th>Unit</th>
                        <th>Invoice No.</th>
                        <th>Invoice Date</th>
                        <th>Reason</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int count = 1;
                        string btnAdd = string.Empty;
                        foreach (var item in Model.inventoryDetails)
                        {
                            var id = "i" + count;
                            var itemId = "item" + count;

                            <tr id="@id">
                                <td>@count</td>
                                <td><input type='hidden' class="item-id" value="@item.inventory_item_id" /><input type='text' class='form-control item-code' id='@itemId' onfocus='getItemDataRow(this)' placeholder='Item Code' value="@item.itemCode" /></td>
                                <td><label class='item-name'>@item.itemName</label></td>
                                <td>@Html.DropDownList("inventory_warehouse_id", new SelectList(@ViewBag.WarehouseID, "warehouse_id", "warehouse_name", item.inventory_warehouse_id), new { @class = "form-control warehouse", @onchange = "InitialItemInventory(this)" })</td>
                                <td><label class='stock-balance'>@string.Format("{0:G29}", decimal.Parse(item.stock_balance.ToString()))</label> <input type="hidden" class="stock-balance-unit" value="@item.itemUnit"/> <label class='stock-balance-unit-name'>@item.itemunitname</label></td>
                                <td><input type='number' class='form-control issue-qty' placeholder='Issue Qty' value='@string.Format("{0:G29}", decimal.Parse(item.quantity.ToString()))' onchange="checkQty(this)" /></td>
                                <td>
                                    <select class='form-control item-unit' onchange='checkQty(this)'>
                                        @if (string.Compare(item.itemUnit, item.unit) == 0)
                                                {
                                                <option value="@item.itemUnit" selected>@item.itemunitname</option>
                                                }
                                                else
                                                {
                                                <option value="@item.itemUnit">@item.itemunitname</option>
                                                }
                                        @{
                                                    if (item.uom != null)
                                                    {

                                                        if (item.uom.uom1_id != null && item.uom.uom1_qty != null)
                                                        {
                                                            string uom1 = Regex.Replace(item.uom.uom1_id, @"\t|\n|\r", "");
                                                            if (string.Compare(uom1, item.unit) == 0)
                                                            {
                                                <option selected value="@uom1">@uom1</option>
                                                            }
                                                            else
                                                            {
                                                <option value="@uom1">@uom1</option>
                                                            }
                                                        }
                                                        if (item.uom.uom2_id != null && item.uom.uom2_qty != null)
                                                        {
                                                            string uom2 = Regex.Replace(item.uom.uom2_id, @"\t|\n|\r", "");
                                                            if (string.Compare(uom2, item.unit) == 0)
                                                            {
                                                <option selected value="@uom2">@uom2</option>
                                                            }
                                                            else
                                                            {
                                                <option value="@uom2">@uom2</option>
                                                            }
                                                        }
                                                        if (item.uom.uom3_id != null && item.uom.uom3_qty != null)
                                                        {
                                                            string uom3 = Regex.Replace(item.uom.uom3_id, @"\t|\n|\r", "");
                                                            if (string.Compare(uom3, item.unit) == 0)
                                                            {
                                                <option selected value="@uom3">@uom3</option>
                                                            }
                                                            else
                                                            {
                                                <option value="@uom3">@uom3</option>
                                                            }
                                                        }
                                                        if (item.uom.uom4_id != null && item.uom.uom4_qty != null)
                                                        {
                                                            string uom4 = Regex.Replace(item.uom.uom4_id, @"\t|\n|\r", "");
                                                            if (string.Compare(uom4, item.unit) == 0)
                                                            {
                                                <option selected value="@uom4">@uom4</option>
                                                            }
                                                            else
                                                            {
                                                <option value="@uom4">@uom4</option>
                                                            }
                                                        }
                                                        if (item.uom.uom5_id != null && item.uom.uom5_qty != null)
                                                        {
                                                            string uom5 = Regex.Replace(item.uom.uom5_id, @"\t|\n|\r", "");
                                                            if (string.Compare(uom5, item.unit) == 0)
                                                            {
                                                <option selected value="@uom5">@uom5</option>
                                                            }
                                                            else
                                                            {
                                                <option value="@uom5">@uom5</option>
                                                            }

                                                        }
                                                    }
                                        }
                                    </select>
                                </td>
                                <td><input type='text' class='form-control invoice_number' value="@item.invoice_number" /></td>
                                <td>
                                    <div style="display:inline-block !important;margin-right:5px !important;">
                                        <div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">
                                            <input type="text" class="form-control invoice_date" style="width:130px !important;" value="@Convert.ToDateTime(item.invoice_date).ToString("dd/MM/yyyy")" />
                                            <div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>
                                        </div>
                                    </div>
                                </td>
                                <td><textarea class='form-control reason'>@item.remark</textarea></td>
                                <td><a class="btn-sm btn-default" href='javascript:void(0)' onclick='removeItemRow(this)'><i class='fa fa-minus-circle'></i></a></td>
                                <td>
                                    @{
                                    if (count == Model.inventoryDetails.Count())
                                    {
                                        <a class="btn-sm btn-default" href='javascript:void(0)' onclick='appendItemRow(this)'><i class='fa fa-plus-circle'></i></a>
                                    }
                                }
                            </td>
                        </tr>
                                        count++;
                                    }
                    }
                </tbody>
            </table>
        </div>

        <div class="form-group">
            <label class="col-md-2">Supporting Document:</label>
            <div class="col-md-10" id="attachment_block">
                @{
                    var atts = Model.attachments;
                    if (atts.Count() == 0)
                    {
                        <input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />
                    }
                    else
                    {
                        <table id="tableAttachment">
                            @for (int i = 0; i < atts.Count(); i++)
                            {
                                <tr>
                                    <td><a class="title @i" href="/StockIssue/Download/?p=@(atts[i].attachment_id + atts[i].attachment_extension)&d=@atts[i].attachment_name">@atts[i].attachment_name</a></td>
                                    <td><a href="javascript:void(0);" class="btn btn-default delete-att title @i" data-id="@atts[i].attachment_id">x</a></td>
                                    @{ if (i == atts.Count() - 1)
                                        {
                                            <td><a href="javascript:void(0);" class="btn btn-default add-row " data-id="@atts[i].attachment_id">+</a></td>
                                        }
                                    }
                                </tr>
                                        }
                        </table>
                                        }
                }

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Submit" class="btn btn-default" id="btnSubmit" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
                                        }
@section Scripts{
    @*<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/jquery-ui.min.js"></script>*@
    <script type="text/javascript">
        $(function () {
            var arrDeletedAttachment = [];
            $(".date").datepicker({ format: 'dd/mm/yyyy' });
            $('#stockIssueTable').on('changeDate', 'td div.date', function () {
                $(this).datepicker('hide');
            });
            $('.delete-att').click(function (e) {
                e.preventDefault();
                var att_id = $(this).data('id');
                arrDeletedAttachment.push(att_id);
                var index = $(this)[0].parentNode.parentNode.rowIndex;
                document.getElementById('tableAttachment').deleteRow(index);
                var rowCount = $('#tableAttachment tr').length;
                if (rowCount == 0) {
                    $("#attachment_block").empty();
                    $("#attachment_block").append("" +
                        '<input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />'
                        );
                }
            });

            $('.add-row').click(function (e) {
                e.preventDefault();
                $('#tableAttachment').append("" +
                   "<tr>" +
                        '<td><input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple /></td>' +
                        '<td><a href="javascript:void(0);" class="btn btn-default delete-att" onclick="removeAttachmentRow(this)">x</a></td>' +
                   "</tr>"
                 );
                $(this).remove();
            });
            function enable_submit_button(is_submit) {
                if (is_submit) {
                    $('#btnSubmit').text("Submitting...");
                    $('#btnSubmit').attr('disabled', true);
                } else {
                    $('#btnSubmit').text("Submit");
                    $('#btnSubmit').attr('disabled', false);
                }
            }
            $('#btnSubmit').click(function (e) {
                enable_submit_button(true);
                var inventories = [];
                var item_element = {};
                var warehouses = $('.warehouse');
                var items = $('.item-id');
                var stockBalances = $('.stock-balance');
                var issueQtys = $('.issue-qty');
                var remarks = $('.reason');
                var units = $('.item-unit');
                var invoiceNumbers = $('.invoice_number');
                var invoiceDates = $('.invoice_date');
                var countInvalid = 0;
                var arrAttachment = [];

                for (var i = 0; i < items.length; i++) {
                    var splitUnit = (units[i].value).split(',');
                    if (warehouses[i].value && items[i] && stockBalances[i].innerHTML && issueQtys[i].value) {
                        item_element = {};
                        item_element.warehouse_id = warehouses[i].value;
                        item_element.product_id = items[i].value;
                        item_element.total_quantity = stockBalances[i].innerHTML;
                        item_element.out_quantity = issueQtys[i].value;
                        item_element.remark = remarks[i].value;
                        item_element.unit = splitUnit[0].trim();
                        item_element.invoice_number = invoiceNumbers[i].value;
                        item_element.invoice_date = convertDDMMYYYtoMMDDYYYY(invoiceDates[i].value);
                        inventories.push(item_element);
                    }
                    else {
                        countInvalid++;
                    }
                }
                if (countInvalid > 0) {
                    alert("Please select warehouse and fill in issue qty");
                    return;
                }

                if (arrDeletedAttachment.length > 0) {
                    for (var i = 0; i < arrDeletedAttachment.length; i++) {
                        var attID = arrDeletedAttachment[i];
                        $.ajax({
                            url: '@Url.Action("DeleteAttachment", "StockIssue")',
                            type: 'POST',
                            data: { id: attID }
                        }).done(function (data) {
                            if (data.Result == "ok") {

                            }
                            else if (data.Result.Message) {
                                alert(data.Result.Message);
                            }
                        }).fail(function () {
                            alert("There is something wrong. Please try again.");
                        })
                    }
                }
                var form_data = new FormData();
                var file_input = document.getElementById('attachment_reference');
                if (file_input != undefined) {
                    //if (file_input.files.length > 0) {
                        for (var i = 0; i < file_input.files.length; i++) {
                            form_data = new FormData();
                            form_data.append(file_input.files[i].name, file_input.files[i]);
                            $.ajax({
                                url: '@Url.Action("UploadAttachment", "StockIssue")',
                                type: "POST",
                                data: form_data,
                                async: false,
                                cache: false,
                                contentType: false,
                                processData: false,
                                success: function (da) {
                                    if (da.result == "success")
                                        arrAttachment.push(da.attachment_id);
                                },
                                error: function (xhr, error, status) {
                                    console.log(error, status);
                                }
                            });
                        }
                    //} else {
                    //    alert("Attachments Reference is required.");
                    //    return;
                    //}
                }
                var model = {
                    stock_issue_id: $('#stock_issue_id').val(),
                    stock_issue_number: $('#stock_issue_number').text(),
                    inventories: inventories,
                };

                $.ajax({
                    url: "/StockIssue/Edit",
                    type: "post",
                    dataType: "json",
                    async: false,
                    data: { model: model, Attachment: arrAttachment },
                    success: function (da) {
                        if (da.result == "success") {
                            $.notify('Your data has been saved!', { className: 'success' });
                            window.location.href = '/StockIssue/Index';
                        } else if (da.result == "error") {
                            $.notify(da.message, { className: 'error' });
                        }
                    },
                    error: function (err) {
                        $.notify('Your data is error while saving!', { className: 'error' });
                    }
                });
            });
        });
    </script>
    <script type="text/javascript">
        function initialItemRow(rowNumber, rowIdNumber, rowIndex) {
            $('#stockIssueTable tr').eq(rowIndex).after("" +
                    "<tr id='i" + rowIdNumber + "'>" +
                        "<td>" + rowNumber + "</td>" +
                        "<td><input type='hidden' class='item-id'/><input type='text' class='form-control item-code' id='item" + rowIdNumber + "' onfocus='getItemDataRow(this)' placeholder='Item Code'/></td>" +
                        "<td><label class='item-name'></label></td>" +
                        "<td><select class='form-control warehouse' onchange='InitialItemInventory(this)'><option selected disabled value>Select Warehouse</option></select></td>" +
                        "<td><label class='stock-balance'>0</label> <label class='stock-balance-unit'></label></td>" +
                        "<td><input type='number' class='form-control issue-qty' placeholder='Issue Qty' value='0' onchange='checkQty(this)'/></td>" +
                        "<td><select class='form-control item-unit' onchange='checkQty(this)'></select></td>" +
                         "<td><input type='text' class='form-control invoice_number'/></td>" +
                        "<td>" +
                        '<div style="display:inline-block !important;margin-right:5px !important;">' +
                                                            '<div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">' +
                                                                '<input type="text" class="form-control invoice_date" style="width:130px !important;" value="' + getFormattedDateMMDDYYYY(new Date()) + '"/>' +
                                                                '<div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>' +
                                                            '</div>' +
                                                        '</div>' +
                        "</td>" +
                        "<td><textarea class='form-control reason' placeholder='Reason'></textarea></td>" +
                        "<td><a href='javascript:void(0)' class='btn-sm btn-default' onclick='removeItemRow(this)'><i class='fa fa-minus-circle'></i></a></td>" +
                        "<td><a href='javascript:void(0)' class='btn-sm btn-default' onclick='appendItemRow(this)'><i class='fa fa-plus-circle'></i></a></td>" +
                    "</tr>"
                );
            InitialItemWarehouse(rowIndex);
            $(".date").datepicker({ format: 'dd/mm/yyyy' });
        }
        function appendItemRow(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var rowId = $('#stockIssueTable tr').eq(ind).attr('id').replace(/[^\d]/g, '');
            var rowNumber = $('#stockIssueTable tr').eq(ind).find('td:first-child').text();
            var warehouseId = $('#stockIssueTable tr').eq(ind).find('select.warehouse').val();
            var itemId = $('#stockIssueTable tr').eq(ind).find('input.item-id').val();
            var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
            if (!warehouseId || !itemId || Number(issueQty) <= 0) {
                return;
            }
            initialItemRow(Number(rowNumber) + 1, Number(rowId) + 1, ind);
            $('#stockIssueTable tr').eq(ind).find('td:nth-child(12)').html('');
        }

        function removeItemRow(row) {
            var arrItemId = [];
            var ind = row.parentNode.parentNode.rowIndex;
            var isLastChild = $('#stockIssueTable tr').eq(ind).find("td:nth-child(12) a").length == 0 ? false : true;
            var itemId = $('#stockIssueTable tr').eq(ind).attr('id');
            var count_table_row = $('#stockIssueTable tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#stockIssueTable tr').eq(i).attr('id');
                if (id != undefined)
                    arrItemId.push(id);
            }
            if (arrItemId.length == 1) {
                return;
            }
            document.getElementById('stockIssueTable').deleteRow(ind);
            if (isLastChild)
                $('#stockIssueTable tr#' + arrItemId[arrItemId.length - 2]).find('td:nth-child(12)').html("<a href='javascript:void(0)' class='btn-sm btn-default' onclick='appendItemRow(this)'><i class='fa fa-plus-square'></i></a>");
            else {
                var deleted_index = arrItemId.indexOf(itemId);
                arrItemId.splice(deleted_index, 1);
                for (var i = 0; i < arrItemId.length; i++) {
                    $('tr#' + arrItemId[i] + ' td:nth-child(1)').html(Number(i) + 1);
                }
            }
        }


        function getItemDataRow(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var rowId = $('#stockIssueTable tr').eq(ind).find('input.item-code').attr('id');
            var itemClass = $('#stockIssueTable tr').eq(ind).attr('id');
            var itemTypeId = $('#stockIssueTable tr#type' + itemClass).find('input.type-id').val();
            //var itemId;
            autocompleted(rowId);

            function autocompleted(rowId) {
                $("#" + rowId).autocomplete({
                    //source: '/Product/GetProductAutoSuggest',
                    source: '@Url.Action("GetProductAutoSuggestName", "Product")',
                    select: function (event, ui) {
                        AutoCompleteSelectHandler(event, ui, ind);
                        $(this).val('');
                    }
                });
            }

            function AutoCompleteSelectHandler(event, ui, ind) {
                var selectedObj = ui.item;
                var item = (selectedObj.value).split(' ');
                itemId = selectedObj.id;
                GetItemDataRow(ind, itemId);
                //$('#stockIssueTable tr').eq(ind).find('input.item-code').val(item[0]);
            }

            function GetItemDataRow(ind, itemId) {
                if (itemId != "") {
                    $.ajax({
                        url: '/Product/GetProductDataByCode',
                        type: "get",
                        dataType: "json",
                        async: false,
                        data: { id: itemId },
                        success: function (da) {
                            $('#stockIssueTable tr').eq(ind).find('select.warehouse').val('');
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(0);
                            $('#stockIssueTable tr').eq(ind).find('input.damage-qty').text(0);
                            $('#stockIssueTable tr').eq(ind).find('select.item-unit').empty();
                            if (da.data) {
                                var item = da.data;
                                $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val(item.product_id);
                                $('#stockIssueTable tr').eq(ind).find('input[type="text"].item-code').val(item.product_code);
                                $('#stockIssueTable tr').eq(ind).find('label.item-name').text(item.product_name);
                                $('#stockIssueTable tr').eq(ind).find('label.item-unit').text(item.product_unit);
                                $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.product_unit.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "'>" + item.product_unit.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");

                                if (item.uom1_id && item.uom1_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom1_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom1_qty + "'>" + item.uom1_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom2_id && item.uom2_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom2_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom2_qty + "'>" + item.uom2_id + "'>" + item.uom2_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom3_id && item.uom3_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom3_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom3_qty + "'>" + item.uom3_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom4_id && item.uom4_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom4_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom4_qty + "'>" + item.uom4_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom5_id && item.uom5_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom5_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom5_qty + "'>" + item.uom5_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                            } else {
                                $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val('');
                                $('#stockIssueTable tr').eq(ind).find('label.item-name').text(' ');
                                $('#stockIssueTable tr').eq(ind).find('label.item-unit').text(' ');
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $('#stockIssueTable tr').eq(ind).find('select.warehouse').val('');
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(parseFloat(0).toFixed(2));
                            $('#stockIssueTable tr').eq(ind).find('input.damage-qty').text(parseFloat(0).toFixed(2));
                            $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val('');
                            $('#stockIssueTable tr').eq(ind).find('label.item-name').text(' ');
                            $('#stockIssueTable tr').eq(ind).find('select.item-unit').empty();
                            alert(textStatus);
                        }
                    });
                }
            }
        }
        function InitialItemWarehouse(ind) {
            $.ajax({
                //url: '/Warehouse/GetWarehouseDropdownList',
                url: '@Url.Action("GetAllWarehouseDropdown", "Warehouse")',
                type: "get",
                dataType: "json",
                async: false,
                success: function (da) {
                    if (da.result == "success") {
                        $.each(da.data, function (index, item) {
                            $('#stockIssueTable tr').eq(ind + 1).find('select.warehouse').append("<option value='" + item.warehouse_id + "'>" + item.warehouse_name + "</option>");
                        });
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                }
            });
        }
        function InitialItemInventory(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var itemId = $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val();
            var warehouseId = $('#stockIssueTable tr').eq(ind).find('select.warehouse').val();
            if (!itemId || !warehouseId) {
                return;
            }
            $.ajax({
                url: '/StockIssue/GetInventoryItem',
                type: "get",
                dataType: "json",
                async: false,
                data: { itemId: itemId, warehouseId: warehouseId },
                success: function (da) {
                    if (da.result == "success") {
                        var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
                        if (da.data) {
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(da.data.total_quantity);
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance-unit').text(da.data.itemUnit);
                            if (Number(da.data.total_quantity) < Number(issueQty)) {
                                alert("Issue item quantity must be smaller than Stock balance.");
                                $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(da.data.total_quantity);
                                return;
                            }
                        } else {
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(0);
                            if (Number(issueQty) > 0) {
                                alert("Issue item quantity must be smaller than Stock balance.");
                                $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(0);
                                return;
                            }
                        }
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                }
            });
        }

        function checkQty(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var stockBalance = $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text();
            var stockBalanceUnit = $('#stockIssueTable tr').eq(ind).find('label.stock-balance-unit').text();
            var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
            var issueUnit = $('#stockIssueTable tr').eq(ind).find('select.item-unit').val();
            //console.log(stockBalance + " " + stockBalanceUnit + " " + damageQty + " " + damageUnit);

            if (!issueQty && !issueUnit)
                return;
            var splitDamageUnit = issueUnit.split(',');
            if (stockBalanceUnit == splitDamageUnit[0]) {
                if (issueQty && Number(issueQty) > Number(stockBalance)) {
                    alert("Issue Qantity must be smaller or equal to balance.");
                    $('#stockIssueTable tr').eq(ind).find('input.issue-qty').focus();
                    $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(0);
                }
            }
            else {
                var quantity = 0;
                var selectedIndex = $('#stockIssueTable tr').eq(ind).find('select.item-unit').prop('selectedIndex');
                if (issueQty) {
                    if (selectedIndex == 1) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        quantity = issueQty / splitElement[1];
                    }
                    else if (selectedIndex == 2) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        quantity = (issueQty / splitElement[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 3) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        quantity = ((issueQty / splitElement[1]) / splitElement3[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 4) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(4).val().split(',');
                        quantity = ((((issueQty / splitElement[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2[1]);
                    } else if (selectedIndex == 5) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(4).val().split(',');
                        var splitElement5 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(5).val().split(',');
                        quantity = ((((issueQty / splitElement[1]) / splitElement5[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2;
                    }
                    if (quantity > Number(stockBalance)) {
                        alert("Issue Qantity must be smaller or equal to balance.");
                        $('#stockIssueTable tr').eq(ind).find('input.issue-qty').focus();
                        $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(0);
                        return;
                    }
                }
            }
        }

        function removeAttachmentRow(row) {
            var index = row.parentNode.parentNode.rowIndex;
            document.getElementById('tableAttachment').deleteRow(index);
            var rowCount = $('#tableAttachment tr').length;
            if (rowCount == 0) {
                $("#attachment_block").empty();
                $("#attachment_block").append("" +
                    '<input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />'
                    );
            }
        }
    </script>
}

