@model BT_KimMex.Models.StockIssueViewModel

@{
    ViewBag.Title = "Approve/ Feedback Work Order Issue";
    BT_KimMex.Entities.kim_mexEntities db = new BT_KimMex.Entities.kim_mexEntities();
    var wh = db.tb_warehouse.Where(s => string.Compare(s.warehouse_project_id, Model.project_id) == 0).FirstOrDefault();
    string whname = string.Empty;
    if (wh != null)
    {
        whname = wh.warehouse_name;
    }
}
<style type="text/css">
    #stockIssueTable tr td{
        vertical-align:middle !important;
    }
    #stockIssueTable tr td:nth-child(5),#stockIssueTable tr td:nth-child(6){
        text-align:center !important;
    }
</style>

<div class="w3-panel w3-card-4">
    <div class="w3-container w3-display-container">
        <h3 class="title">@ViewBag.Title</h3>
    </div>
    <div class="w3-container w3-display-container">
        <div class="form-horizontal">

            @Html.HiddenFor(model => model.stock_issue_id)
            <div class="form-group">
                <label class="col-md-2">Transaction Date:</label>
                @Html.Label(BT_KimMex.Class.CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd/MM/yyyy HH:mm"), new { @class = "col-md-10" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.stock_issue_number, new { @class = "col-md-2" })
                <label class="col-md-10">@Model.stock_issue_number</label>
            </div>
            <div class="form-group">
                <label class="col-md-2">Project:</label>
                <label class="col-md-10">@db.tb_project.Find(Model.project_id).project_full_name</label>
            </div>
            <div class="form-group">
                <label class="col-md-2">Warehouse:</label>
                <label class="col-md-10">@BT_KimMex.Class.CommonFunctions.GetWarehousebyProject(Model.project_id).warehouse_name</label>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="stockIssueTable">
                    <thead>
                        <tr>
                            <th rowspan="2">No.</th>
                            <th rowspan="2">Item Code</th>
                            <th rowspan="2">Item Name</th>
                            <th rowspan="2">Labour Hour</th>
                            @*<th>Warehouse</th>*@
                            <th rowspan="2">Stock Balance</th>
                            <th rowspan="2">Issue Qty</th>
                            @if (Model.inventorieshistoryqty.Count() > 0)
                            {
                                int i = @Model.inventorieshistoryqty.Count();
                                <th colspan="@i">Issue Qty History</th>

                            }
                            <th rowspan="2">Inovice No.</th>
                            <th rowspan="2">Inovice Date</th>
                            <th rowspan="2">Approve</th>
                            <th rowspan="2">Feedback</th>
                            <th rowspan="2">Reason</th>
                        </tr>
                        @if ((Model.inventorieshistoryqty.Count()) > 0)
                        {
                            int js = @Model.inventorieshistoryqty.Count();

                            <tr>

                                @for (int i = 1; i <= js; i++)
                                {
                                    <th>@i</th>
                                }
                            </tr>
                        }
                    </thead>
                    <tbody>
                        @{
                            int count = 1;
                            int countPending = 1;
                            foreach (var item in Model.inventoryDetails)
                            {
                                if (string.Compare(item.item_status, "approved") == 0)
                                {
                                    int ccount = 1;
                                    <tr>
                                        <td>@count</td>
                                        <td>@item.itemCode</td>
                                        <td>@item.itemName</td>
                                        <td class="text-center">@item.item_labour_hour</td>
                                        @*<td>@item.warehouseName</td>*@
                                        <td class="text-center">@string.Format("{0:G29}", decimal.Parse(item.stock_balance.ToString())) @item.itemunitname</td>
                                        <td>@string.Format("{0:G29}", decimal.Parse(item.total_quantity.ToString())) @item.unitName</td>
                                        @foreach (var obj in db.tb_history_issue_qty.Where(s => string.Compare(s.inventory_detail_id, @item.inventory_detail_id) == 0).OrderBy(s => s.create_at).ToList())
                                        {
                                            <td class="text-center">@obj.issue_qty</td>
                                        }
                                        <td>@item.invoice_number</td>
                                        <td>@Convert.ToDateTime(item.invoice_date).ToString("dd/MM/yyyy")</td>
                                        <td></td>
                                        <td></td>
                                        <td>@item.remark</td>
                                    </tr>
                                }
                                else
                                {
                                    string name = "item" + countPending;
                                    <tr>
                                        <td>@count</td>
                                        <td><input type="hidden" class="inventory_detail" value="@item.inventory_detail_id" />@item.itemCode</td>
                                        <td>@item.itemName</td>
                                        <td class="text-center">@item.item_labour_hour</td>
                                        @*<td>@item.warehouseName</td>*@
                                        <td class="text-center">@string.Format("{0:G29}", decimal.Parse(item.stock_balance.ToString())) @item.itemunitname</td>
                                        <td>@string.Format("{0:G29}", decimal.Parse(item.total_quantity.ToString())) @item.unitName</td>
                                        @foreach (var obj in db.tb_history_issue_qty.Where(s => string.Compare(s.inventory_detail_id, @item.inventory_detail_id) == 0).OrderBy(s => s.create_at).ToList())
                                        {
                                            <td class="text-center">@obj.issue_qty</td>
                                        }
                                        <td>@item.invoice_number</td>
                                        <td>@Convert.ToDateTime(item.invoice_date).ToString("dd/MM/yyyy")</td>
                                        <td><label><input type="radio" class="approval" name="@name" value="approved"> Approve</label></td>
                                        <td><label><input type="radio" class="approval" name="@name" value="feedbacked"> Feedback</label></td>
                                        <td><textarea class="form-control feedback_comment">@item.remark</textarea></td>
                                    </tr>
                                    countPending++;
                                }
                                count++;
                            }

                        }
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Submit" class="btn btn-success" id="btnSubmit" onclick="approveFeedbackStockIssue()" />
                    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
                function enable_submit_button(is_submit) {
            if (is_submit) {
                $('#btnSubmit').text("Submitting...");
                $('#btnSubmit').attr('disabled', true);
            } else {
                $('#btnSubmit').text("Submit");
                $('#btnSubmit').attr('disabled', false);
            }
        }
        function approveFeedbackStockIssue() {
            enable_submit_button(true);
            var models = [];
            var item_element = {};
            var countInvalidStatus=0;
            var issueId = $('#stock_issue_id').val();
            var issueDetails = $('.inventory_detail');
            var feedbackComments = $('.feedback_comment');
            for (var i = 1; i <= issueDetails.length; i++) {
                var item_status = $('input[name=item' + i + ']:checked').val();
                if (!item_status) countInvalidStatus++;
                var idx = Number(i - 1);
                item_element = {};
                item_element.inventory_detail_id = issueDetails[idx].value;
                item_element.item_status = item_status;
                item_element.remark = feedbackComments[idx].value;
                models.push(item_element);
            }
            if (countInvalidStatus > 0) {
                alert("Please select Approve or Feedback option for each item.");
                return;
            }
            $.ajax({
                url: "@Url.Action("ApproveFeedback", "StockIssue")",
                type: "post",
                dataType: "json",
                async: false,
                data: { id: issueId, models: models },
                success: function (da) {
                    if (da.result == "success") {
                        alert('Your data has been sumitted successfully.');
                        window.location.href = '@Url.Action("Index")';
                    } else {
                        alert('Your data is error while sumiting.');
                    }
                },
                error: function (err) {
                    alert('Your data is error while sumiting.');
                }
            });
        }
    </script>
    }
