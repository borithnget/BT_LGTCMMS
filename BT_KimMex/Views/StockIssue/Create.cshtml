@model BT_KimMex.Models.StockIssueViewModel

@{
    ViewBag.Title = "Create New Work Order Issued Request";
    string Date = Convert.ToDateTime(BT_KimMex.Class.CommonClass.ToLocalTime(DateTime.Now)).ToString("dd/MM/yyyy");
    string stockIssueNumber = ViewBag.StockIssueNumber;
}
@*<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />*@
<style type="text/css">
    /*#stockIssueTable tr td:nth-child(12), td:nth-child(9), td:nth-child(10), td:nth-child(11), td:nth-child(6) {
        text-align: center !important;
        vertical-align: middle !important;
    }*/
    #stockIssueTable tr td {
        text-align: center !important;
        vertical-align: middle !important;
    }
</style>

<div class="w3-panel w3-card-4">
    <div class="w3-container w3-display-container">
        <h3 class="title">@ViewBag.Title</h3>
    </div>
    <div class="w3-container w3-display-container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @*<div class="form-group">
                    @Html.LabelFor(model => model.created_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.Label(Date, new { @class = "col-md-10" })
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.stock_issue_number, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.Label(stockIssueNumber, new { @class = "col-md-10", id = "stock_issue_number" })
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Project <strong class="text-danger">*</strong>:</label>
                    <div class="col-md-10">
                        @Html.DropDownList("project_id", new SelectList(ViewBag.Projects, "project_id", "project_full_name"), "Selete Project", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Warehouse:</label>
                    <label class="col-md-10" id="warehouse_name"></label>
                    <input type="hidden" id="warehouse_id" />
                </div>

                <div class="row" style="margin:0 !important;">
                    <table class="table table-bordered table-responsive" id="stockIssueTable">
                        <thead>
                            <tr>
                                <th>No.</th>
                                <th>Item Code</th>
                                <th>Item Name</th>
                                <th>Labour Hour</th>
                                @*<th>Warehouse</th>*@
                                <th>Stock Balance</th>
                                <th>Issue Qty</th>
                                <th>Unit</th>
                                <th>Invoice No.</th>
                                <th>Inovice Date</th>
                                <th>Reason</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

                <div class="form-group">
                    <label class="col-md-2 control-label">Suppoting Document:</label>
                    <div class="col-md-10">
                        <input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-success" onclick="submitStockIssue()" id="btn_submit">Submit</button>
                        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>



@section Scripts{
    @*<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/jquery-ui.min.js"></script>*@
    <script type="text/javascript">
        $(function () {
            $('#project_id').select2();
            initialItemRow(1, 1, 0);

            $('#stockIssueTable').on('changeDate', 'td div.date', function () {
                $(this).datepicker('hide');
            });
            $('#project_id').change(function (e) {
                e.preventDefault();
                var project_id = $(this).val();
                $('#warehouse_name').text('');
                $('#warehouse_id').val('');

                $('#stockIssueTable').find("tr:gt(0)").remove();
                initialItemRow(1, 1, 0);

                if (project_id == null || project_id == '' || project_id == undefined) {
                    return;
                }
                $.ajax({
                    url: '@Url.Action("GetWarehousebyProjectJson", "Project")',
                    type: "get",
                    dataType: "json",
                    data: { id: project_id },
                    async: false,
                    success: function (da) {
                        //console.log(da);
                        if (da.data != null) {
                            $('#warehouse_name').text(da.data.warehouse_name);
                            $('#warehouse_id').val(da.data.warehouse_id);
                        }
                        
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    }
                });
            })
        });
    </script>
    <script type="text/javascript">

        function initialItemRow(rowNumber, rowIdNumber, rowIndex) {
            $('#stockIssueTable tr').eq(rowIndex).after("" +
                    "<tr id='i" + rowIdNumber + "'>" +
                        "<td>" + rowNumber + "</td>" +
                        "<td><input type='hidden' class='item-id'/><input type='text' class='form-control item-code' id='item" + rowIdNumber + "' onfocus='getItemDataRow(this)' placeholder='Item Code'/></td>" +
                "<td><label class='item-name'></label></td>" +
                "<td><label class='item-labour-hour'></label></td>" +
                        //"<td><select class='form-control warehouse' onchange='InitialItemInventory(this)'><option selected disabled value>Select Warehouse</option></select></td>" +
                        "<td><label class='stock-balance'>0</label> <label class='stock-balance-unit-name'></label><input type='hidden' class='stock-balance-unit'/></td>" +
                        "<td><input type='number' class='form-control issue-qty' placeholder='Issue Qty' value='0' onchange='checkQty(this)'/></td>" +
                        "<td><select class='form-control item-unit' onchange='checkQty(this)'></select></td>" +
                        "<td><input type='text' class='form-control invoice_number'/></td>" +
                        "<td>" +
                        '<div style="display:inline-block !important;margin-right:5px !important;">' +
                                                            '<div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">' +
                                                                '<input type="text" class="form-control invoice_date" style="width:130px !important;" value="' + getFormattedDateMMDDYYYY(new Date()) + '"/>' +
                                                                '<div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>' +
                                                            '</div>' +
                                                        '</div>' +
                        "</td>" +
                        "<td><textarea class='form-control reason' placeholder='Reason'></textarea></td>" +
                        "<td><a href='javascript:void(0)' class='btn-sm btn-danger' onclick='removeItemRow(this)'><i class='fa fa-minus-circle'></i></a></td>" +
                        "<td><a href='javascript:void(0)' class='btn-sm btn-success' onclick='appendItemRow(this)'><i class='fa fa-plus-circle'></i></a></td>" +
                    "</tr>"
                );
            //InitialItemWarehouse(rowIndex);
            $(".date").datepicker({ format: 'dd/mm/yyyy' });
        }

        function appendItemRow(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var rowId = $('#stockIssueTable tr').eq(ind).attr('id').replace(/[^\d]/g, '');
            var rowNumber = $('#stockIssueTable tr').eq(ind).find('td:first-child').text();
            var warehouseId = $('#stockIssueTable tr').eq(ind).find('select.warehouse').val();
            var itemId = $('#stockIssueTable tr').eq(ind).find('input.item-id').val();
            var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
            if (!itemId || Number(issueQty) <= 0) {
                return;
            }
            initialItemRow(Number(rowNumber) + 1, Number(rowId) + 1, ind);
            $('#stockIssueTable tr').eq(ind).find('td:nth-child(12)').html('');
        }

        function removeItemRow(row) {
            var arrItemId = [];
            var ind = row.parentNode.parentNode.rowIndex;
            var isLastChild = $('#stockIssueTable tr').eq(ind).find("td:nth-child(13) a").length == 0 ? false : true;
            var itemId = $('#stockIssueTable tr').eq(ind).attr('id');
            var count_table_row = $('#stockIssueTable tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#stockIssueTable tr').eq(i).attr('id');
                if (id != undefined)
                    arrItemId.push(id);
            }
            if (arrItemId.length == 1) {
                return;
            }
            document.getElementById('stockIssueTable').deleteRow(ind);
            if (isLastChild)
                $('#stockIssueTable tr#' + arrItemId[arrItemId.length - 2]).find('td:nth-child(12)').html("<a href='javascript:void(0)' class='btn-sm btn-default' onclick='appendItemRow(this)'><i class='fa fa-plus-circle'></i></a>");
            else {
                var deleted_index = arrItemId.indexOf(itemId);
                arrItemId.splice(deleted_index, 1);
                for (var i = 0; i < arrItemId.length; i++) {
                    $('tr#' + arrItemId[i] + ' td:nth-child(1)').html(Number(i) + 1);
                }
            }
        }


        function getItemDataRow(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var rowId = $('#stockIssueTable tr').eq(ind).find('input.item-code').attr('id');
            var itemClass = $('#stockIssueTable tr').eq(ind).attr('id');
            var itemTypeId = $('#stockIssueTable tr#type' + itemClass).find('input.type-id').val();
            //var itemId;
            autocompleted(rowId);

            function autocompleted(rowId) {
                $("#" + rowId).autocomplete({
                    //source: '/Product/GetProductAutoSuggest',
                    source: '@Url.Action("GetProductAutoSuggestName", "Product")',
                    select: function (event, ui) {
                        AutoCompleteSelectHandler(event, ui, ind);
                        $(this).val('');
                    }
                });
            }

            function AutoCompleteSelectHandler(event, ui, ind) {
                var selectedObj = ui.item;
                var item = (selectedObj.value).split(' ');
                itemId = selectedObj.id;
                GetItemDataRow(ind, itemId);
                //$('#stockIssueTable tr').eq(ind).find('input.item-code').val(item[0]);
            }

            function GetItemDataRow(ind, itemId) {
                if (itemId != "") {
                    $.ajax({
                        url: '/Product/GetProductDataByCode',
                        type: "get",
                        dataType: "json",
                        async: false,
                        data: { id: itemId },
                        success: function (da) {
                            $('#stockIssueTable tr').eq(ind).find('select.warehouse').val('');
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(0);
                            $('#stockIssueTable tr').eq(ind).find('input.damage-qty').text(0);
                            $('#stockIssueTable tr').eq(ind).find('select.item-unit').empty();
                            if (da.data) {
                                var item = da.data;
                                console.log(item);
                                $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val(item.product_id);
                                $('#stockIssueTable tr').eq(ind).find('input[type="text"].item-code').val(item.product_code);
                                $('#stockIssueTable tr').eq(ind).find('label.item-name').text(item.product_name);
                                $('#stockIssueTable tr').eq(ind).find('label.item-labour-hour').text(item.labour_hour == null ? "" : item.labour_hour);
                                $('#stockIssueTable tr').eq(ind).find('label.item-unit').text(item.product_unit);
                                $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.product_unit.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "'>" + item.unit_name.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");

                                if (item.uom1_id && item.uom1_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom1_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom1_qty + "'>" + item.uom1_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom2_id && item.uom2_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom2_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom2_qty + "'>" + item.uom2_id + "'>" + item.uom2_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom3_id && item.uom3_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom3_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom3_qty + "'>" + item.uom3_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom4_id && item.uom4_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom4_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom4_qty + "'>" + item.uom4_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                if (item.uom5_id && item.uom5_qty) {
                                    $('#stockIssueTable tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom5_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "," + item.uom5_qty + "'>" + item.uom5_id.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>");
                                }
                                //initial stock balance
                                $.ajax({
                                    url: '/StockIssue/GetInventoryItem',
                                    type: "get",
                                    dataType: "json",
                                    async: false,
                                    data: { itemId: item.product_id, warehouseId: $('#warehouse_id').val() },
                                    success: function (da) {
                                        if (da.result == "success") {
                                            var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
                                            if (da.data) {
                                                console.log(da.data);
                                                $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(da.data.total_quantity);
                                                $('#stockIssueTable tr').eq(ind).find('input.stock-balance-unit').val(da.data.itemUnit);
                                                $('#stockIssueTable tr').eq(ind).find('label.stock-balance-unit-name').text(da.data.unitName);
                                                if (Number(da.data.total_quantity) < Number(issueQty)) {
                                                    alert("Issue item quantity must be smaller than Stock balance.");
                                                    $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(da.data.total_quantity);
                                                    return;
                                                }
                                            } else {
                                                $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(0);
                                                if (Number(issueQty) > 0) {
                                                    alert("Issue item quantity must be smaller than Stock balance.");
                                                    $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(0);
                                                    return;
                                                }
                                            }
                                        }
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                                    }
                                });
                            } else {
                                $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val('');
                                $('#stockIssueTable tr').eq(ind).find('label.item-name').text(' ');
                                $('#stockIssueTable tr').eq(ind).find('label.item-unit').text(' ');
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $('#stockIssueTable tr').eq(ind).find('select.warehouse').val('');
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(parseFloat(0).toFixed(2));
                            $('#stockIssueTable tr').eq(ind).find('input.damage-qty').text(parseFloat(0).toFixed(2));
                            $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val('');
                            $('#stockIssueTable tr').eq(ind).find('label.item-name').text(' ');
                            $('#stockIssueTable tr').eq(ind).find('select.item-unit').empty();
                            alert(textStatus);
                        }
                    });
                }
            }
        }
        function InitialItemWarehouse(ind) {
            $.ajax({
                //url: '/Warehouse/GetWarehouseDropdownList',
                @*url: '@Url.Action("GetAllWarehouseDropdown", "Warehouse")',*@
                url: '@Url.Action("GetWarehouseDropdownList", "Warehouse")',
                type: "get",
                dataType: "json",
                data: { iid: 0 },
                async: false,
                success: function (da) {
                    if (da.result == "success") {
                        $.each(da.data, function (index, item) {
                            $('#stockIssueTable tr').eq(ind + 1).find('select.warehouse').append("<option value='" + item.warehouse_id + "'>" + item.warehouse_name + "</option>");
                        });
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                }
            });
        }
        function InitialItemInventory(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var itemId = $('#stockIssueTable tr').eq(ind).find('input[type="hidden"].item-id').val();
            var warehouseId = $('#stockIssueTable tr').eq(ind).find('select.warehouse').val();
            if (!itemId || !warehouseId) {
                return;
            }
            $.ajax({
                url: '/StockIssue/GetInventoryItem',
                type: "get",
                dataType: "json",
                async: false,
                data: { itemId: itemId, warehouseId: warehouseId },
                success: function (da) {
                    if (da.result == "success") {
                        var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
                        if (da.data) {
                            console.log(da.data);
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(da.data.total_quantity);
                            $('#stockIssueTable tr').eq(ind).find('input.stock-balance-unit').val(da.data.itemUnit);
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance-unit-name').text(da.data.unitName);
                            if (Number(da.data.total_quantity) < Number(issueQty)) {
                                alert("Issue item quantity must be smaller than Stock balance.");
                                $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(da.data.total_quantity);
                                return;
                            }
                        } else {
                            $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text(0);
                            if (Number(issueQty) > 0) {
                                alert("Issue item quantity must be smaller than Stock balance.");
                                $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(0);
                                return;
                            }
                        }
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                }
            });
        }

        function checkDamageQty(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var stockBalance = $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text();
            var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
            if (Number(stockBalance) < Number(issueQty)) {
                alert("Issue item quantity must be smaller than Stock balance.");
                return;
            }
        }
        function checkQty(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var stockBalance = $('#stockIssueTable tr').eq(ind).find('label.stock-balance').text();
            var stockBalanceUnit = $('#stockIssueTable tr').eq(ind).find('input.stock-balance-unit').val();
            var issueQty = $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val();
            var issueUnit = $('#stockIssueTable tr').eq(ind).find('select.item-unit').val();
            //console.log(stockBalance + " " + stockBalanceUnit + " " + damageQty + " " + damageUnit);

            if (!issueQty && !issueUnit)
                return;
            var splitDamageUnit = issueUnit.split(',');
            if (stockBalanceUnit == splitDamageUnit[0]) {
                if (issueQty && Number(issueQty) > Number(stockBalance)) {
                    alert("Issue Quantity must be smaller or equal to balance.");
                    $('#stockIssueTable tr').eq(ind).find('input.issue-qty').focus();
                    $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(0);
                }
            }
            else {
                var quantity = 0;
                var selectedIndex = $('#stockIssueTable tr').eq(ind).find('select.item-unit').prop('selectedIndex');
                if (issueQty) {
                    if (selectedIndex == 1) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        quantity = issueQty / splitElement[1];
                    }
                    else if (selectedIndex == 2) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        quantity = (issueQty / splitElement[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 3) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        quantity = ((issueQty / splitElement[1]) / splitElement3[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 4) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(4).val().split(',');
                        quantity = ((((issueQty / splitElement[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2[1]);
                    } else if (selectedIndex == 5) {
                        var splitElement = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(4).val().split(',');
                        var splitElement5 = $('#stockIssueTable tr').eq(ind).find('select.item-unit option').eq(5).val().split(',');
                        quantity = ((((issueQty / splitElement[1]) / splitElement5[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2;
                    }
                    if (quantity > Number(stockBalance)) {
                        alert("Issue Quantity must be smaller or equal to balance.");
                        $('#stockIssueTable tr').eq(ind).find('input.issue-qty').focus();
                        $('#stockIssueTable tr').eq(ind).find('input.issue-qty').val(0);
                        return;
                    }
                }
            }
        }
                    function enable_submit_button(is_submit) {
                if (is_submit) {
                    $('#btnSubmit').text("Submitting...");
                    $('#btnSubmit').attr('disabled', true);
                } else {
                    $('#btnSubmit').text("Submit");
                    $('#btnSubmit').attr('disabled', false);
                }
            }
        function submitStockIssue() {
            var inventories = [];
            var item_element = {};
            var warehouses = $('.warehouse');
            var items = $('.item-id');
            var stockBalances = $('.stock-balance');
            var issueQtys = $('.issue-qty');
            var remarks = $('.reason');
            var units = $('.item-unit');
            var invoiceNumbers = $('.invoice_number');
            var invoiceDates = $('.invoice_date');
            var countInvalid = 0;
            var arrAttachment = [];
            var warehouse = $('#warehouse_id').val();

            $('#btn_submit').attr('disabled', true);
            $('#btn_submit').text('Submitting');

            if (warehouse == "" || warehouse == undefined || warehouse == null) {
                alert("Please create warehouse for this project.");
                $('#btn_submit').attr('disabled', false);
                $('#btn_submit').text('Submit');
                return;
            }

            for (var i = 0; i < items.length; i++) {
                var splitUnit = (units[i].value).split(',');
                if (items[i] && stockBalances[i].innerHTML>0 && issueQtys[i].value>0 && Number(stockBalances[i].innerHTML)>=Number(issueQtys[i].value)) {
                    item_element = {};
                    //item_element.warehouse_id = warehouses[i].value;
                    item_element.warehouse_id = $('#warehouse_id').val();
                    item_element.product_id = items[i].value;
                    item_element.total_quantity = stockBalances[i].innerHTML;
                    item_element.out_quantity = issueQtys[i].value;
                    item_element.remark = remarks[i].value;
                    item_element.unit = splitUnit[0].trim();
                    item_element.invoice_number = invoiceNumbers[i].value;
                    item_element.invoice_date = convertDDMMYYYtoMMDDYYYY(invoiceDates[i].value);
                    inventories.push(item_element);
                }
                else {
                    countInvalid++;
                }
            }
            if (countInvalid > 0) {
                alert("Please select warehouse and fill in issue qty");
                $('#btn_submit').attr('disabled', false);
                $('#btn_submit').text('Submit');
                return;
            }
            //console.log(inventories);
            
            var form_data = new FormData();
            var file_input = document.getElementById('attachment_reference');
            //if (file_input.files.length > 0) {
                for (var i = 0; i < file_input.files.length; i++) {
                    form_data = new FormData();
                    form_data.append(file_input.files[i].name, file_input.files[i]);
                    $.ajax({
                        url: '@Url.Action("UploadAttachment", "StockIssue")',
                        type: "POST",
                        data: form_data,
                        async: false,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (da) {
                            if (da.result == "success")
                                arrAttachment.push(da.attachment_id);
                        },
                        error: function (xhr, error, status) {
                            console.log(error, status);
                        }
                    });
                }
            //} else {
            //    $.notify('Supporting Document is required.', { className: 'error' });
            //    return;
            //}

            var model = {
                stock_issue_number: $('#stock_issue_number').text(),
                project_id:$('#project_id').val(),
                inventories: inventories,
            };

            $.ajax({
                url: "/StockIssue/Create",
                type: "post",
                dataType: "json",
                async: false,
                data: { model: model, Attachment: arrAttachment },
                success: function (da) {
                    if (da.result == "success") {
                        $.notify('Your data has been saved!', { className: 'success' });
                        window.location.href = '/StockIssue/Index';
                    } else if (da.result == "error") {
                        $('#btn_submit').attr('disabled', false);
                        $('#btn_submit').text('Submit');
                        $.notify(da.message, { className: 'error' });
                    }
                },
                error: function (err) {
                    $('#btn_submit').attr('disabled', false);
                    $('#btn_submit').text('Submit');
                    $.notify('Your data is error while saving!', { className: 'error' });
                }
            });
        }

    </script>
}
