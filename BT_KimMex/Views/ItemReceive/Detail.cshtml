@model BT_KimMex.Models.ItemReceiveViewModel
@using BT_KimMex.Class
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Detail";
    //Layout = "~/Views/Shared/_LayoutBackend.cshtml";
    string date = CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd/MM/yyyy");
    bool isSM = false;
    bool isMSC = false;
    bool isAdmin = false;
    bool isQAQC = false;
    if (User.IsInRole("Admin"))
    {
        isAdmin = true;
    }
    if (User.IsInRole("Stock Keeper"))
    {
        isSM = true;
    }
    if (User.IsInRole("Site Manager"))
    {
        isMSC = true;
    }
    if (User.IsInRole(Role.QAQCOfficer))
    {
        isQAQC = true;
    }
}
<style type="text/css">
    table tr td {
        text-align: left !important;
        vertical-align: middle !important;
    }
</style>

<h3 class="title">View Good Receive Note Detail</h3>

<div class="form-horizontal">
    <div class="row">
        @Html.HiddenFor(model => model.receive_item_voucher_id)
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Date:", new { @class = "col-md-4" })
                @Html.Label(date, new { @class = "col-md-8" })
            </div>

            <div class="form-group">
                @Html.Label("Receive Type:", new { @class = "col-md-4" })
                @Html.Label(Model.received_type, new { @class = "col-md-8" })
            </div>

            <div class="form-group">
                <label class="col-md-4">MR Ref. No.:</label>
                <label class="col-md-8">@Model.mr_ref_number</label>
            </div>

            <div class="form-group">
                @if (string.Compare(Model.received_type, "Stock Return") == 0 || string.Compare(Model.received_type, "Return Workshop") == 0)
                {
                    <label class="col-md-4">From Warehouse:</label>
                }
                else
                {
                    <label class="col-md-4">To Warehouse:</label>
                }

                <label class="col-md-8">@Model.inventories[0].warehouseName</label>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.received_number, new { @class = "col-md-4" })
                @Html.Label(Model.received_number, new { @class = "col-md-8" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ref_number, new { @class = "col-md-4" })
                @Html.Label(Model.ref_number, new { @class = "col-md-8" })
            </div>
            <div class="form-group">
                <label class="col-md-4">Project: </label>
                @Html.Label(Model.project_full_name, new { @class = "col-md-8" })
            </div>
            @*<div class="form-group">
                    <label class="col-md-4">Sending Date: </label>
                    <label class="col-md-8">@Convert.ToDateTime(Model.sending_date).ToString("dd-MM-yyyy")</label>
                </div>
                <div class="form-group">
                    <label class="col-md-4">Returning Date: </label>
                    <label class="col-md-8">@Convert.ToDateTime(Model.returning_date).ToString("dd-MM-yyyy")</label>
                </div>*@

        </div>
    </div>
    <div class="row" style="margin:0 !important;">
        <table class="table table-bordered " id="itemReceiveTable">
            <thead class="bg-success">
                <tr>
                    <th rowspan="2">No.</th>
                    <th rowspan="2">Item Code</th>
                    <th rowspan="2">Item Name</th>
                    <th rowspan="2">Quantity</th>
                    @if (Model.receivedHistories.Count() > 0)
                    {
                        <th colspan="@Model.receivedHistories.Count()">History</th>
                    }
                    <th rowspan="2">Received QTY</th>
                    <th rowspan="2">Unit</th>
                    @if (string.Compare(Model.received_type, "Stock Return") == 0 || string.Compare(Model.received_type, "Return Workshop") == 0)
                    {
                        <th rowspan="2">To Warehouse</th>
                    }
                    else
                    {
                        <th rowspan="2">From Supplier/ Warehouse</th>
                    }

                    @*<th rowspan="2" id="historyHeader">History</th>*@
                    <th rowspan="2">Remain</th>
                    @*<th>Received</th>*@
                    <th rowspan="2">Invoice No.</th>
                    <th rowspan="2">Invoice Date</th>
                    @*<th>Received Unit</th>*@
                    @*<th rowspan="2">To Warehouse</th>*@
                    <th rowspan="2">Status</th>
                    <th rowspan="2">Note</th>
                </tr>
                @if (Model.receivedHistories.Count() > 0)
                {
                    <tr>
                        @for (int i = 1; i <= Model.receivedHistories.Count(); i++)
                        {

                            <th>@i</th>

                        }
                    </tr>
                }

            </thead>
            <tbody>
                @{
                    int count = 1;
                    @*foreach (var item in Model.receivedItems){
                            <tr>
                                <td>@count</td>
                                <td>@item.itemCode</td>
                                <td>@item.itemName</td>
                                <td>@string.Format("{0:G29}",Decimal.Parse(item.out_quantity.ToString())) @item.itemUnit</td>
                                @foreach (var inv in Model.inventories)
                                {
                                    if (string.Compare(item.product_id, inv.product_id) == 0)
                                    {
                                        <td>@string.Format("{0:G29}",Decimal.Parse(inv.in_quantity.ToString()))</td>
                                        <td>@inv.unit</td>
                                        <td>@inv.warehouseName</td>
                                        @*<td><input type="number" class="form-control received_qty" value="@inv.in_quantity" /></td>
                                            <td>@Html.DropDownList("warehouse_id", new SelectList(@ViewBag.WarehouseID, "warehouse_id", "warehouse_name", inv.warehouseName), new { @class = "form-control warehouse" })</td>
                                    }

                                }
                                <td>@item.in_quantity</td>
                                <td>@item.warehouseName</td>
                            </tr>
                            count++;
                        }*@
                    foreach (var item in Model.receivedItems)
                    {
                        foreach (var inv in Model.inventories)
                        {
                            if (string.Compare(item.product_id, inv.product_id) == 0)
                            {
                                <tr>
                                    <td>@count</td>
                                    <td>@item.itemCode</td>
                                    <td>@item.itemName</td>
                                    @if (string.Compare(Model.received_type, "Purchase Order") == 0)
                                    {
                                        <td class="text-center">@string.Format("{0:G29}", Decimal.Parse(item.total_quantity.ToString())) @item.itemUnitName</td>
                                    }
                                    else
                                    {
                                        <td class="text-center">@string.Format("{0:G29}", Decimal.Parse(item.out_quantity.ToString())) @item.itemUnitName</td>
                                    }
                                    @foreach (var obj in Model.receivedHistories)
                                    {
                                        var re = obj.inventories.Where(s => string.Compare(s.product_id, item.product_id) == 0).FirstOrDefault();
                                        if (re != null)
                                        {
                                            if (string.Compare(obj.received_status, Status.Completed) == 0)
                                            {
                                                <td class="text-center w3-green">@re.in_quantity</td>
                                            }
                                            else
                                            {
                                                <td class="text-center w3-orange">@re.in_quantity</td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="w3-red"></td>
                                        }

                                    }

                                    <td class="text-center">@string.Format("{0:G29}", Decimal.Parse(inv.in_quantity.ToString()))</td>
                                    <td>@inv.unitName</td>
                                    <td>@inv.supplier_name</td>
                                    <td class="text-center">
                                        @{
                                            if (string.Compare(Model.received_type, "Stock Transfer") == 0)
                                            {
                                                <label class="text-center">@BT_KimMex.Class.CommonFunctions.GetStokTransferRemainBalancebyItem(Model.ref_id, item.product_id)</label>
                                            }
                                            else if (string.Compare(Model.received_type, "Transfer Workshop") == 0)
                                            {
                                                <label class="text-center">@item.remain_quantity</label>
                                            }
                                            else if (string.Compare(Model.received_type, "Purchase Order") == 0)
                                            {
                                                <label class="text-center">@item.remain_quantity</label>
                                            }
                                            else
                                            {
                                                <label class="text-center">@item.remain_quantity</label>
                                            }

                                        }

                                    </td>
                                    <td>@inv.invoice_number</td>
                                    <td>@Convert.ToDateTime(inv.invoice_date).ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @if (inv.completed)
                                        {
                                            <label style="color:blue !important;">completed</label>
                                        }
                                        else
                                        {
                                            if (string.Compare(inv.item_status, "approved") == 0)
                                            {
                                                <label style="color:blue !important;">@inv.item_status</label>
                                            }
                                            else
                                            {
                                                <label style="color:grey !important;">@inv.item_status</label>
                                            }
                                        }
                                    </td>

                                    <td>@inv.remark</td>

                                </tr>
                                count++;
                            }

                        }

                    }
                }
            </tbody>
        </table>
    </div>

    <div class="row" style="margin:0 !important;">
        <div class="form-group">
            @Html.Label("Supporting Document:", new { @class = "col-md-2" })
            <div class="col-md-10">
                @{
                    var attachments = Model.attachments;
                    foreach (var att in attachments)
                    {
                        <a class="title" href="/ItemReceive/Download/?p=@(att.ire_attachment_id+att.ire_attachment_extension)&d=@att.ire_attachment_name">@att.ire_attachment_name</a><br>
                    }
                }
            </div>
        </div>
    </div>

    @if (Model.doAttachments.Count() > 0)
    {
        <div class="row form-group">
            <label class="col-md-2">
                Delivery Order:
            </label>
            <div class="col-md-10">
                @foreach (var att in Model.doAttachments)
                {
                    <a class="title" href="/ItemReceive/Download/?p=@(att.attachment_id+att.attachment_extension)&d=@att.attachment_name">@att.attachment_name</a>
                    @*if (CommonClass.isFileIsImageByExtenstion(att.attachment_extension))
                    {
                        <a class="title" href="@att.attachment_path" target="_blank">@att.attachment_name</a>
                        <button class="btn btn-xs">View Image</button>
                    }
                    else
                    {
                        <a class="title" href="/ItemReceive/Download/?p=@(att.attachment_id+att.attachment_extension)&d=@att.attachment_name">@att.attachment_name</a>
                    }*@
                    <br>
                }
            </div>
        </div>
    }

    @if (Model.rejects.Count() > 0)
    {
        <div class="row">
            <div class="form-group">
                <label class="control-label col-md-2">Reject Command:</label>
                <div class="col-md-10">
                    <ul>
                        @foreach (var reject in Model.rejects)
                        {
                            <li>@reject.comment <b>By @reject.rejected_by</b></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @{
                    if (isAdmin || isSM)//&& (Model.received_status == "Pending" || Model.received_status == "Rejected")
                    {
                        if (string.Compare(Model.received_status, "pending") == 0)
                        {
                            @*@Html.ActionLink("Edit", "Edit", new { id = Model.receive_item_voucher_id }, new { @class = "btn btn-primary", style="margin-right:10px !important;" })*@
                            <a href="javascript:void(0)" class="w3-button w3-tiny w3-deep-orange" id="btn-cancel-request">Request Cancel </a>
                        }
                        else if (string.Compare(Model.received_status, "pending feedback") == 0)
                        {
                            @Html.ActionLink("Prepare Feedback", "PrepareFeedback", new { id = Model.receive_item_voucher_id }, new { @class = "btn btn-primary" })
                        }
                    }

                    if ((isAdmin || isQAQC) && (string.Compare(Model.received_status, Status.Pending) == 0 || string.Compare(Model.received_status, Status.Feedbacked) == 0))
                    {
                        @Html.ActionLink("Approve/ Feedback", "ApproveFeedback", new { id = Model.receive_item_voucher_id }, new { @class = "w3-button w3-tiny w3-teal" })
                    }

                    if ((isAdmin || isMSC) && string.Compare(Model.received_status, Status.Approved) == 0)
                    {
                        <a href="javascript:void(0)" id="@Model.receive_item_voucher_id" class="w3-button w3-tiny w3-green approve-promp">Approve</a>
                        <a href="javascript:void(0)" id="@Model.receive_item_voucher_id" class="w3-button w3-tiny w3-red reject-promp">Reject</a>
                        @*@Html.ActionLink("Approve/ Feedback", "ApproveFeedback", new { id = Model.receive_item_voucher_id }, new { @class = "w3-button w3-tiny w3-teal" })*@
                    }
                }
                @*<input type="button" value="Print" class="w3-button w3-tiny w3-teal" id="btnPrint" />*@
                @*<a href="@Url.Action("ExporttoExcel","ItemReceive",new { id = Model.receive_item_voucher_id,type="print" })" target="_blank" class="w3-button w3-tiny w3-teal"><i class="fa fa-print"></i> Print</a>*@
                @*<a href="@Url.Action("ExporttoExcel","ItemReceive",new { id = Model.receive_item_voucher_id,type="excel" })" target="_blank" class="w3-button w3-tiny w3-teal"><i class="fa fa-file-excel-o"></i> Export to Excel</a>*@
                <a href="javascript:void(0)" id="btn_export_to_excel" class="w3-button w3-tiny w3-teal"><i class="fa fa-file-excel-o"></i> Export to Excel</a>
                <a href="javascript:history.back()" class="w3-button w3-tiny w3-red">Back</a>
                @if (string.Compare(User.Identity.GetUserName().ToString(), "bt_admin") == 0)
                {
                    <a href="@Url.Action("ReStockByRemoveGRNItem","Sync",new { id = Model.receive_item_voucher_id })" target="_blank" class="w3-button w3-tiny w3-red">Sync Received QTY</a>
                }


            </div>
        </div>
    </div>
</div>

<!-- approve project modal popup-->
<div class="modal fade" id="approveModal" tabindex="=-1" role="dialog" aria-labelledby="approveModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-warning">
                <h4 class="modal-title" id="myModalLabel">Comfirmation</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure to <strong>Approve</strong> this item?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default approve-confirm" id="approve-confirm">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>

            </div>
        </div>
    </div>
</div>

<!-- reject project modal popup-->
<div class="modal fade" id="rejectModal" tabindex="=-1" role="dialog" aria-labelledby="rejectModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-danger">
                <h4 class="modal-title" id="myModalLabel">Comfirmation</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure to <strong>Reject</strong> this item?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default reject-confirm" id="reject-confirm">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>

            </div>
        </div>
    </div>
</div>
<!-- cancel request modal popup-->
<div class="modal fade" id="cancelRequestModal" tabindex="=-1" role="dialog" aria-labelledby="approveModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-warning">
                <h4 class="modal-title" id="myModalLabel">Comfirmation</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure to cancel this request?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" id="btn-cancel-yes">Yes</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>

            </div>
        </div>
    </div>
</div>

<!-- Modal Export Option -->
<div class="modal" tabindex="-1" role="dialog" id="modal_export_option">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Export to Excel Option</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">         

                <div class="form-group row">
                    <label class="control-label col-md-4">Choose Feature</label>
                    <div class="col-md-8">
                        <label class="checkbox-inline">
                            <input type="checkbox" class="export_option" id="md_is_grn" value="1">GRN
                        </label>
                        <label class="checkbox-inline">
                            <input type="checkbox" class="export_option" id="md_is_do" value="2">DO
                        </label>

                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-4"></div>
                    <div class="col-md-8">
                        <label class="checkbox-inline">
                            <input type="checkbox" id="is_signature" value="1">with Signature
                        </label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="md_btn_export">Export</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(function () {
            var receivedItemId = '@Model.receive_item_voucher_id';
            $('.approve-promp').click(function () {
                $('#approveModal').modal('show');
            });

            $('.approve-confirm').click(function () {
                enable_submit_button('approve-confirm', true);
                if (receivedItemId != '') {
                    $.ajax({
                        url: "/ItemReceive/Approval",
                        data: {
                            'id': receivedItemId,
                            'status': '@Status.Completed',
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('#approveModal').modal('hide');
                            if (da.result == "success") {
                                $.notify('Your data has been approved!', { className: 'success' });
                                window.location.href = '@Url.Action("MyApproval")';
                            }
                            else if (da.result == "fail") {
                                $.notify('Your data has been error while approving!', { className: 'error' });
                                enable_submit_button('approve-confirm', false);
                            }
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                            $.notify('Your data has been error while approving!', { className: 'error' });
                        }
                    });
                }
            });

            $('.reject-promp').click(function () {
                $('#rejectModal').modal('show');
            });

            $('.reject-confirm').click(function () {
                enable_submit_button('reject-confirm', true);
                if (receivedItemId != '') {
                    $.ajax({
                        url: "/ItemReceive/Approval",
                        data: {
                            'id': receivedItemId,
                            'status': '@Status.Completed',
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.reject-confirm').css('display', 'none');
                            }
                            $('#rejectModal').modal('hide');
                            if (da.result == "success") {
                                $.notify('Your data has been rejected!', { className: 'success' });
                                window.location.href = '@Url.Action("MyApproval")';
                            }
                            else if (da.result == "fail") {
                                $.notify('Your data has been error while rejecting!', { className: 'error' });
                                enable_submit_button('reject-confirm', false);
                            }
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                            $.notify('Your data has been error while rejecting!', { className: 'error' });
                        }
                    });
                }
            });

            $('#btn-cancel-request').click(function () {
                $('#cancelRequestModal').modal('show');
            });
            $('#btn-cancel-yes').click(function () {
                enable_submit_button('btn-cancel-yes', true);
                if (receivedItemId != '') {
                    $.ajax({
                        url: "/ItemReceive/RequestCancel",
                        data: {
                            'id': '@Model.receive_item_voucher_id',
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('#cancelRequestModal').modal('hide');
                            if (da.result == "success") {
                                $.notify('Your data has been approved!', { className: 'success' });
                                window.location.href = '@Url.Action("MyRequest", "ItemReceive")';
                            }
                            else {
                                $.notify('Your data has been error while approving!', { className: 'error' });
                                enable_submit_button('btn-cancel-yes', false);
                            }
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.approve-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                            $.notify('Your data has been error while approving!', { className: 'error' });
                        }
                    });
                }
            });
            $('#btnPrint').click(function () {
                var id = $('#receive_item_voucher_id').val();
                $.ajax({
                    url: "@Url.Action("Print","ItemReceive")",
                    type: "post",
                    dataType: "json",
                    async: false,
                    data: { id: id },
                    success: function (da) {
                        if (da.result == "success") {
                            window.location.href = "/ItemReceive/GRNReport?id=" + da.id;
                        }
                    },
                    error: function (err) {
                        $.notify('Your data is error while saving!', { className: 'error' });
                    }
                });
            });

            $('#btn_export_to_excel').click(function (e) {
                $('#modal_export_option').modal('show');
            });

            $('#md_btn_export').click(function (e) {
                var is_signature = false;
                var is_grn = false;
                var is_do = false;
                if ($('#is_signature').is(":checked")) {
                    // it is checked
                    is_signature = true;
                }
                if ($('#md_is_grn').is(":checked")) {
                    // it is checked
                    is_grn = true;
                }
                if ($('#md_is_do').is(":checked")) {
                    // it is checked
                    is_do = true;
                }

                if (!is_grn && !is_do) {
                    alert("Please select feature to export.")
                    return;
                }
                var grnId = $('#receive_item_voucher_id').val();
                //window.location.href = "/ItemReceive/ExporttoExcel/" + grnId + "?type=excel&is_grn=" + is_grn + "&is_do=" + is_do + "&is_signature=" + is_signature;
                let a = document.createElement('a');
                a.target = '_blank';
                a.href = "/ItemReceive/ExporttoExcel/" + grnId + "?type=excel&is_grn=" + is_grn + "&is_do=" + is_do + "&is_signature=" + is_signature;
                a.click();
                $('#modal_export_option').modal('hide');
            });

        });

        function changeColSpan(span) {
            alert(span);
        }

        function enable_submit_button(btn_name,is_submit) {
            if (is_submit) {
                $('#' + btn_name).text("Submitting...");
                $('#' + btn_name).attr('disabled', true);
            } else {
                $('#' + btn_name).text("Submit");
                $('#' + btn_name).attr('disabled', false);
            }
        }
    </script>
}




