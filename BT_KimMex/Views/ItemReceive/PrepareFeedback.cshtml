@model BT_KimMex.Models.ItemReceiveViewModel
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "PrepareFeedback";
}
<style type="text/css">
    #itemReceiveTable tr td{
        vertical-align:middle !important;
    }
</style>

<div class="form-horizontal">
    <h3 class="title">Prepare Feedback Item Received</h3>
    @Html.HiddenFor(model => model.receive_item_voucher_id)
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Date:", new { @class = "col-md-4" })
                @Html.Label(BT_KimMex.Class.CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd/MM/yyyy"), new { @class = "col-md-8" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.received_number, new { @class = "col-md-4" })
                @Html.Label(Model.received_number, new { @class = "col-md-8" })
            </div>
            <div class="form-group">
                @Html.Label("Receive Type:", new { @class = "col-md-4" })
                @Html.Label(Model.received_type, new { @class = "col-md-8" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ref_number, new { @class = "col-md-4" })
                @Html.Label(Model.ref_number, new { @class = "col-md-8" })
            </div>
        </div>
        <div class="col-md-6"></div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered" id="itemReceiveTable">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Item Code</th>
                    <th>Item Name</th>
                    <th>Quantity</th>
                    <th>From Supplier/Warehouse</th>
                    <th>Receive QTY</th>
                    <th>Receive Unit</th>
                    <th>Invoice No.</th>
                    <th>Invoice Date</th>
                    <th>To Warehouse</th>
                    <th>Remark</th>
                </tr>
            </thead>
            <tbody>
                @{ 
                    int countRow = 1;
                    bool isFlag = false;
                    foreach(BT_KimMex.Models.InventoryViewModel inventory in Model.inventories)
                    {
                        foreach(BT_KimMex.Models.InventoryViewModel item in Model.receivedItems)
                        {
                            isFlag = false;
                            if (string.Compare(inventory.product_id, item.product_id) == 0)
                            {
                                if(string.Compare(item.item_status,"approved")==0 || item.completed)
                                {
                                    <tr>
                                        <td>@countRow</td>
                                        <td>@item.itemCode</td>
                                        <td>@item.itemName</td>
                                        <td>@string.Format("{0:G29}", Double.Parse(inventory.out_quantity.ToString())) @inventory.itemUnit</td>
                                        <td>@item.supplier_name</td>
                                        <td>@string.Format("{0:G29}", Double.Parse(item.total_quantity.ToString()))</td>
                                        <td>@item.unit</td>
                                        <td>@item.invoice_number</td>
                                        <td>@Convert.ToDateTime(item.invoice_date).ToString("dd/MM/yyyy")</td>
                                        <td>@item.warehouseName</td>
                                        <td>@item.remark</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td>@countRow</td>
                                        <td><input type="hidden" class="item_id" value="@item.product_id"/>@item.itemCode</td>
                                        <td>@item.itemName</td>
                                        <td><label class="request_qty">@string.Format("{0:G29}", Double.Parse(inventory.out_quantity.ToString()))</label> <label class="request_unit">@inventory.itemUnit</label></td>
                                        <td><input type="hidden" class="supplier_id" value="@item.supplier_id"/> @item.supplier_name</td>
                                        <td><input type="number" class="form-control received_qty" value="@string.Format("{0:G29}", Double.Parse(item.total_quantity.ToString()))"/></td>
                                        <td>
                                            <select class="form-control received-unit" onchange='checkQty(this)'>
                                                @if (string.Compare(inventory.itemUnit.Trim(), item.unit.Trim()) == 0)
                                                {
                                                    <option value="@Regex.Replace(item.itemUnit, @"\t|\n|\r", "")" selected>@Regex.Replace(item.itemUnit, @"\t|\n|\r", "")</option>
                                                }
                                                else
                                                {
                                                    <option value="@item.itemUnit">@item.itemUnit</option>
                                                }

                                                @{
                                                    if (inventory.uom1_id != null && inventory.uom1_qty != null)
                                                    {
                                                        if (string.Compare(inventory.uom1_id.Trim(), item.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@inventory.uom1_id.Trim(),@inventory.uom1_qty">@inventory.uom1_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@inventory.uom1_id.Trim(),@inventory.uom1_qty">@inventory.uom1_id.Trim()</option>
                                                        }
                                                    }
                                                    if (inventory.uom2_id != null && inventory.uom2_qty != null)
                                                    {
                                                        if (string.Compare(inventory.uom2_id.Trim(), item.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@inventory.uom2_id.Trim(),@inventory.uom2_qty">@inventory.uom2_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@inventory.uom2_id.Trim(),@inventory.uom2_qty">@inventory.uom2_id.Trim()</option>
                                                        }
                                                    }
                                                    if (inventory.uom3_id != null && inventory.uom3_qty != null)
                                                    {
                                                        if (string.Compare(inventory.uom3_id.Trim(), item.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@inventory.uom3_id.Trim(),@inventory.uom3_qty">@inventory.uom3_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@inventory.uom3_id.Trim(),@inventory.uom3_qty">@inventory.uom3_id.Trim()</option>
                                                        }
                                                    }
                                                    if (inventory.uom4_id != null && inventory.uom4_qty != null)
                                                    {
                                                        if (string.Compare(inventory.uom4_id.Trim(), item.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@inventory.uom4_id.Trim(),@inventory.uom4_qty">@inventory.uom4_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@inventory.uom4_id,@inventory.uom4_qty">@inventory.uom4_id</option>
                                                        }
                                                    }
                                                    if (inventory.uom5_id != null && inventory.uom5_qty != null)
                                                    {
                                                        if (string.Compare(inventory.uom5_id.Trim(), item.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@inventory.uom5_id.Trim(),@inventory.uom5_qty">@inventory.uom5_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@inventory.uom5_id.Trim(),@inventory.uom5_qty">@inventory.uom5_id.Trim()</option>
                                                        }
                                                    }
                                                }

                                            </select>
                                        </td>
                                        <td><input type="text" class="form-control invoice_number" value="@item.invoice_number"/></td>
                                        <td>
                                            <div style="display:inline-block !important;margin-right:5px !important;">
                                                <div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">
                                                    <input type="text" class="form-control invoice_date" style="width:130px !important;" value="@Convert.ToDateTime(item.invoice_date).ToString("dd/MM/yyyy")" />
                                                    <div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>
                                                </div>
                                            </div>
                                        </td>
                                        @*<td>@item.warehouseName</td>*@
                                        <td>@Html.DropDownList("warehouse_id", new SelectList(@ViewBag.WarehouseID, "warehouse_id", "warehouse_name"), new { @class = "form-control warehouse" })</td>
                                        <td><textarea class="form-control feedback_comment">@item.remark</textarea></td>
                                    </tr>
                                }
                                isFlag = true;
                                break;
                            }
                        }
                        if (isFlag == false)
                        {
                            <tr>
                                <td>@countRow</td>
                                <td><input type="hidden" class="item_id" value="@inventory.product_id" />@inventory.itemCode</td>
                                <td>@inventory.itemName</td>
                                <td><label class="request_qty">@string.Format("{0:G29}", Double.Parse(inventory.out_quantity.ToString()))</label> <label class='request_unit'>@inventory.itemUnit</label></td>
                                <td><input type="hidden" class="supplier_id" value="@inventory.supplier_id" />@inventory.supplier_name</td>
                                <td><input type="number" class="form-control received_qty" value="0" /></td>
                                <td>
                                    <select class="form-control received-unit" onchange='checkQty(this)'>
                                        <option value="@Regex.Replace(inventory.itemUnit, @"\t|\n|\r", "")">@Regex.Replace(inventory.itemUnit, @"\t|\n|\r", "")</option>
                                        @{
                                            if (inventory.uom1_id != null && inventory.uom1_qty != null)
                                            {
                                                <option value="@Regex.Replace(inventory.uom1_id, @"\t|\n|\r", ""),@inventory.uom1_qty">@Regex.Replace(inventory.uom1_id, @"\t|\n|\r", "")</option>
                                            }
                                            if (inventory.uom2_id != null && inventory.uom2_qty != null)
                                            {
                                                <option value="@Regex.Replace(inventory.uom2_id, @"\t|\n|\r", ""),@inventory.uom2_qty">@Regex.Replace(inventory.uom2_id, @"\t|\n|\r", "")</option>
                                            }
                                            if (inventory.uom3_id != null && inventory.uom3_qty != null)
                                            {
                                                <option value="@Regex.Replace(inventory.uom3_id, @"\t|\n|\r", ""),@inventory.uom3_qty">@Regex.Replace(inventory.uom3_id, @"\t|\n|\r", "")</option>
                                            }
                                            if (inventory.uom4_id != null && inventory.uom4_qty != null)
                                            {
                                                <option value="@Regex.Replace(inventory.uom4_id, @"\t|\n|\r", ""),@inventory.uom4_qty">@Regex.Replace(inventory.uom4_id, @"\t|\n|\r", "")</option>
                                            }
                                            if (inventory.uom5_id != null && inventory.uom5_qty != null)
                                            {
                                                <option value="@Regex.Replace(inventory.uom5_id, @"\t|\n|\r", ""),@inventory.uom5_qty">@Regex.Replace(inventory.uom5_id, @"\t|\n|\r", "")</option>
                                            }
                                        }
                                    </select>
                                </td>

                                <td><input type="text" class="form-control invoice_number" value="" /></td>
                                <td>
                                    <div style="display:inline-block !important;margin-right:5px !important;">
                                        <div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">
                                            <input type="text" class="form-control invoice_date" style="width:130px !important;" value="" />
                                            <div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>
                                        </div>
                                    </div>
                                </td>
                                <td>@Html.DropDownList("warehouse_id", new SelectList(@ViewBag.WarehouseID, "warehouse_id", "warehouse_name"), new { @class = "form-control warehouse" })</td>
                                <td><textarea class="form-control feedback_comment"></textarea></td>
                            </tr>
                        }
                        countRow++;
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Submit" id="btnCreate" class="btn btn-default" onclick="prepareFeedbackItemReceived()" />
            @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(function () {
            $(".date").datepicker({ format: 'dd/mm/yyyy' });
            $('#itemReceiveTable tbody').on('changeDate', 'td div.date', function () {
                $(this).datepicker('hide');
            });
           
        });
        function enable_submit_button(is_submit) {
            if (is_submit) {
                $('#btnCreate').text("Submitting...");
                $('#btnCreate').attr('disabled', true);
            } else {
                $('#btnCreate').text("Submit");
                $('#btnCreate').attr('disabled', false);
            }
        }
        function prepareFeedbackItemReceived() {
            enable_submit_button(true);
            var models = [];
            var item_element = {};
            var itemReceivedId = $('#receive_item_voucher_id').val();
            var items = $('.item_id');
            var receivedQuantities = $('.received_qty');
            var receivedUnits = $('.received-unit');
            var warehouses = $('.warehouse');
            var requestedQuantities = $('.request_qty');
            var requestedUnits = $('.request_unit');
            var suppliers = $('.supplier_id');
            var invoiceNumbers = $('.invoice_number');
            var invoiceDates = $('.invoice_date');
            var feedbackComments = $('.feedback_comment');
            for (var i = 0; i < items.length; i++) {
                var itemId = items[i].value;
                var receivedQuantity = receivedQuantities[i].value;
                var warehouse = warehouses[i].value;
                var requestedQuantity = requestedQuantities[i].innerHTML;
                var receivedUnit =(receivedUnits[i].value).split(',');
                if (warehouse && receivedQuantity && Number(receivedQuantity) > 0) {
                    item_element = {};
                    item_element.product_id = itemId;
                    item_element.warehouse_id=warehouse;
                    item_element.in_quantity = receivedQuantity;
                    item_element.out_quantity = requestedQuantity;
                    item_element.unit = receivedUnit[0];
                    item_element.supplier_id = suppliers[i].value;
                    item_element.invoice_number = invoiceNumbers[i].value;
                    item_element.invoice_date = convertDDMMYYYtoMMDDYYYY(invoiceDates[i].value);
                    item_element.remark = feedbackComments[i].value;
                    models.push(item_element);
                } else if (receivedQuantity && Number(receivedQuantity) > 0 && !warehouse) {
                    alert('Please select warehouse to receive item.');
                    return;
                }
            }
            if (models.length == 0) {
                alert('Received item required.');
                return;
            }
            $.ajax({
                url: "@Url.Action("PrepareFeedback", "ItemReceive")",
                type: "post",
                dataType: "json",
                async: false,
                data: { id: itemReceivedId ,models:models},
                success: function (da) {
                    if (da.result == "success") {
                        alert('Your data has been summitted successfully!');
                        window.location.href = '@Url.Action("Index", "ItemReceive")';
                    } else if (da.result == "error") {
                        alert(da.message);
                    }
                },
                error: function (err) {
                    alert('Your data is error while updating!');
                }
            });
        }
    </script>
    }