@model IEnumerable<BT_KimMex.Models.ItemReceiveViewModel>
@using BT_KimMex.Class;
@{
    ViewBag.Title = "MyRequest";
    //Layout = "~/Views/Shared/_LayoutBackend.cshtml";
    //ViewBag.PageTitle = "Item Received List";
    //ViewBag.Controller = "Item Receive";
    //ViewBag.Action = "My Request";
    //ViewBag.ItemReceiveActive = "active";
    //ViewBag.IREMyRequest = "active";
}

<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<h3 class="title">Good Receive Note Request List</h3>

<div class="well" style="padding:8px !important; padding-bottom:30px !important;">
    <div class="form-group">
        <label class="control-label col-md-2">Requested Date:</label>
        <div class="col-md-4">
            <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                <i class="fa fa-calendar"></i>&nbsp;
                <span></span> <i class="fa fa-caret-down"></i>
            </div>
        </div>
        @*<label class="control-label col-md-2">Status:</label>*@
        @*<div class="col-md-3">
                <select class="form-control" id="ddr_status" name="ddr_status" style="width:100% !important;">
                    <option value="0">All</option>
                    <option value="@Status.Pending">@ShowStatus.POCreated</option>
                    <option value="@Status.Approved">@ShowStatus.POApproved</option>
                    <option value="@Status.Rejected">@ShowStatus.PORejected</option>
                    <option value="@Status.Completed">@ShowStatus.POCompleted</option>
                    <option value="@Status.cancelled">@ShowStatus.POCancelled</option>
                    <option value="@Status.RequestCancelled">@ShowStatus.PORequestCancelled</option>
                    <option value="@Status.CancelledMR">@ShowStatus.CancelledMR</option>
                </select>
            </div>*@
        <div class="col-md-2">
            <button type="button" class="w3-button w3-tiny w3-blue" onclick="initialDataTable()">Filter</button>
        </div>
    </div>
</div>

<table id="table" class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>Date</th>
            <th>Item Receive No</th>
            <th>Type</th>
            <th>ST Ref/ PO Ref</th>
            <th>Supplier</th>
            @*<th>Invoice No.</th>
            <th>Invoice Date</th>*@
            <th>Status</th>
            @*<th>Edit</th>*@
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @*@{
            int count = 1;
            foreach (var item in Model)
            {
                <tr>
                    <td>@count</td>
                    <td>@CommonClass.ToLocalTime(Convert.ToDateTime(item.created_date)).ToString("dd/MM/yyyy")</td>
                    <td><a href="@Url.Action("Detail","ItemReceive",new { id = item.receive_item_voucher_id })">@item.received_number</a></td>
                    <td>@item.received_type</td>
                    <td>@item.ref_number</td>
                    <td>@item.supplier</td>
                    <td>@item.invoiceNumber</td>
                    <td>@item.invoiceDate</td>
                    <td class="text-center">
                        @if (string.Compare(item.received_status, Status.Pending) == 0 || string.Compare(item.received_status, Status.Feedbacked) == 0)
                        {
                            if (Convert.ToBoolean(item.is_received_partial))
                            {
                                <label class="label w3-red">@ShowStatus.GRNPartialCreated</label>
                            }
                            else
                            {
                                <label class="label w3-red">@ShowStatus.GRNCreated</label>
                            }
                        }
                        else if (string.Compare(item.received_status, Status.PendingFeedback) == 0)
                        {
                            <label class="label w3-blue">@item.received_status</label>
                        }
                        else if (string.Compare(item.received_status, Status.Completed) == 0)
                        {
                            if (Convert.ToBoolean(item.is_received_partial))
                            {
                                <label class="label w3-green">@ShowStatus.RemainGRNPending</label>
                            }
                            else
                            {
                                <label class="label w3-green">@ShowStatus.GRNCompleted</label>
                            }

                        }
                        else if (string.Compare(item.received_status, Status.Rejected) == 0 || string.Compare(item.received_status, Status.cancelled) == 0)
                        {
                            if (Convert.ToBoolean(item.is_received_partial))
                            {
                                <label class="label w3-gray">@ShowStatus.GRNPartialCancelled</label>
                            }
                            else
                            {
                                <label class="label w3-gray">@ShowStatus.GRNCancelled</label>
                            }
                        }
                        else if (string.Compare(item.received_status, Status.Approved) == 0)
                        {
                            if (Convert.ToBoolean(item.is_received_partial))
                            {
                                <label class="label w3-blue">@ShowStatus.GRNPartialApproved</label>
                            }
                            else
                            {
                                <label class="label w3-blue">@ShowStatus.GRNApproved</label>
                            }
                        }
                    </td>

                    <td class="text-center">
                    </td>
                </tr>
                count++;
            }
        }*@
    </tbody>
</table>

<!-- delete project modal popup-->
<div class="modal fade" id="myModal" tabindex="=-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-danger">
                <h4 class="modal-title" id="myModalLabel">Comfirmation</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure to delete this item?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default delete-confirm">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    No
                </button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.3/moment.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script type="text/javascript">
        var receivedItemId;
        $(function () {

            var start = moment().subtract(29, 'days');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);
            $('#ddr_status').select2();
            initialDataTable();

            //$('#table').DataTable({
            //    'paging': true,
            //    'ordering': true,
            //    'info': true,
            //    'autoWidth': false
            //});
            $('#table tbody').on('click', 'td a.delete-promp', function () {
                receivedItemId = $(this).attr('id');
                $('#myModal').modal('show');
            });
            $('.delete-confirm').click(function () {
                if (receivedItemId != '') {
                    $.ajax({
                        url: "/ItemReceive/Delete",
                        data: {
                            'id': receivedItemId,
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('#myModal').modal('hide');
                            if (da.result == "success") {
                                //$.notify('Your data has been deleted!', { className: 'success' });
                                window.location.href = '@Url.Action("MyRequest", "ItemReceive")';
                            }
                            else if (da.result == "fail")
                                $.notify('Your data has been error while deleting!', { className: 'error' });
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                            $.notify('Your data has been error while deleting!', { className: 'error' });
                        }
                    });
                }
            });
        });

        function initialDataTable() {

            var t = $('#table').DataTable({
                "bDestroy": true,
                "ajax": {
                    "url": "/ItemReceive/GetGRNMyRequestListItemsByDateRangeAJAX",
                    "type": "GET",
                    "dataType": "json",
                    "data": {
                        dateRange: $('#reportrange span').html(),
                        //status: $('#ddr_status').val(),
                    }
                },
                "columns": [
                    { "data": "receive_item_voucher_id" },
                    { "data": "created_date_text" },
                    {
                        "render": function (data, type, full, meta) {
                            return '<a href="/ItemReceive/Detail/' + full.receive_item_voucher_id + '">' + full.received_number + '</a>';
                        }
                    },
                    { "data": "received_type" },
                    { "data": "ref_number" },
                    { "data": "supplier" },
                    //{ "data": "invoiceNumber" },
                    //{ "data": "invoiceDate" },
                    { "data": "show_status_html" },
                    {
                        "render": function (data, type, full, meta) {
                            var btn = '<a href="/ItemReceive/Detail/' + full.receive_item_voucher_id + '" class="w3-button w3-tiny w3-green">View Detail</a>';
                            if (full.received_status=='@Status.Pending' || full.received_status== '@Status.Feedbacked')
                            {
                                btn = btn + '<a href="/ItemReceive/ApproveFeedback/'+full.receive_item_voucher_id+'" class="w3-button w3-tiny w3-teal">Approve/ Feedback</a>';
                            }
                            return btn;
                        }
                    },



                ],
                "order": [[2, "desc"]],
            });
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
        }

    </script>
}