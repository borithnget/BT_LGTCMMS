@model BT_KimMex.Models.ItemReceiveViewModel
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Edit";
    string date =BT_KimMex.Class.CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd/MM/yyyy");
    string receiveNo = Model.received_number;

}
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<style type="text/css">
    #itemReceiveTable tr td{
        vertical-align:middle !important;
    }
    #itemReceiveTable tr td:nth-child(5){
        text-align:left !important;
    }
</style>

<h3 class="title">Edit Item Receive</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.receive_item_voucher_id)

        <div class="form-group">
            @Html.Label("Date:", new { @class = "col-md-2 control-label" })
            @Html.Label(date, new { @class = "col-md-10" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.received_number, htmlAttributes: new { @class = "col-md-2 control-label" })
            @Html.Label(receiveNo, new { @class = "col-md-10", id = "received_number" })
        </div>

        <div class="form-group">
            @Html.Label("Receive Type:", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <label class="radio-inline">
                    <input type="radio" name="receiveType" value="Stock Transfer">Stock Transfer
                </label>
                <label class="radio-inline">
                    <input type="radio" name="receiveType" value="Purchase Order">Purchase Order
                </label>
            </div>
        </div>

        <div class="form-group" id="poSupplierPanel">
            @Html.Label("PO Suppiler:", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("supplier_id",new SelectList(ViewBag.Suppliers, "supplier_id", "supplier_name", Model.supplier_id),new { @class="form-control", id="supplier_id"})
                @*<select class="form-control" id="poSupplier"></select>*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 control-label" id="ref_label"></div>
            <div class="col-md-10" id="receiveTypeBlock">
                @if (string.Compare(Model.received_type, "Purchase Order") == 0)
                {
                    @Html.DropDownList("ref_id", new SelectList(ViewBag.PurchaseOrderRefs, "purchaseOrderId", "purchaseOrderNumber", Model.ref_id), new { @class = "form-control", @id = "ref_id", @onchange = "initialReceivedItem(false,$(this).val())" })
                }
            </div>
        </div>

        <div class="row" style="margin:0 !important;">
            <table class="table table-bordered" id="itemReceiveTable">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Item Code</th>
                        <th>Item Name</th>
                        <th>Quantity</th>
                        <th>From Supplier/Warehouse</th>
                        <th>History</th>
                        <th>Remain</th>
                        <th>Received</th>
                        <th>Receive QTY</th>
                        <th>Receive Unit</th>
                        <th>Invoice No.</th>
                        <th>Invoice Date</th>
                        <th>To Warehouse</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var receivedItem = Model.receivedItems;
                        int count = 1;
                        bool isFlag = false;
                        foreach (var item in receivedItem)
                        {
                            <tr>
                                <td>@count</td>
                                <td><input type="hidden" class="item_id" value="@item.product_id" />@item.itemCode</td>
                                <td>@item.itemName</td>
                                

                                @foreach (var inv in Model.inventories)
                                {
                                    isFlag = false;
                                    if (string.Compare(item.product_id, inv.product_id) == 0)
                                    {
                                        //G29                                                                       //out_quantity
                                        <td><label class="request_qty">@string.Format("{0:N2}", Double.Parse(item.out_quantity.ToString()))</label> <label class='request_unit'>@inv.unit</label></td>
                                        <td><input type="hidden" class="supplier_id" value="@inv.supplier_id" />@inv.supplier_name</td>
                                        <td><input type="number" class="form-control received_qty" value="@string.Format("{0:N2}",Double.Parse(inv.in_quantity.ToString()))" onchange='checkQty(this)' /></td>

                                        <td>
                                            <select class="form-control received-unit" onchange='checkQty(this)'>
                                                @if (string.Compare(item.itemUnit.Trim(), inv.unit.Trim()) == 0)
                                                {
                                                <option value="@Regex.Replace(item.itemUnit, @"\t|\n|\r", "")" selected>@Regex.Replace(item.itemUnit, @"\t|\n|\r", "")</option>
                                                }
                                                else
                                                {
                                                <option value="@item.itemUnit">@item.itemUnit</option>
                                                }

                                                @{
                                                    if (item.uom1_id != null && item.uom1_qty != null)
                                                    {
                                                        if (string.Compare(item.uom1_id.Trim(), inv.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@item.uom1_id.Trim(),@item.uom1_qty">@item.uom1_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@item.uom1_id.Trim(),@item.uom1_qty">@item.uom1_id.Trim()</option>
                                                        }
                                                    }
                                                    if (item.uom2_id != null && item.uom2_qty != null)
                                                    {
                                                        if (string.Compare(item.uom2_id.Trim(), inv.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@item.uom2_id.Trim(),@item.uom2_qty">@item.uom2_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@item.uom2_id.Trim(),@item.uom2_qty">@item.uom2_id.Trim()</option>
                                                        }
                                                    }
                                                    if (item.uom3_id != null && item.uom3_qty != null)
                                                    {
                                                        if (string.Compare(item.uom3_id.Trim(), inv.unit.Trim()) == 0)
                                                        {
                                                            <option selected value="@item.uom3_id.Trim(),@item.uom3_qty">@item.uom3_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                <option value="@item.uom3_id.Trim(),@item.uom3_qty">@item.uom3_id.Trim()</option>
                                                        }
                                                    }
                                                    if (item.uom4_id != null && item.uom4_qty != null)
                                                    {
                                                        if (string.Compare(item.uom4_id.Trim(), inv.unit.Trim()) == 0)
                                                        {
                                                <option selected value="@item.uom4_id.Trim(),@item.uom4_qty">@item.uom4_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                <option value="@item.uom4_id,@item.uom4_qty">@item.uom4_id</option>
                                                        }
                                                    }
                                                    if (item.uom5_id != null && item.uom5_qty != null)
                                                    {
                                                        if (string.Compare(item.uom5_id.Trim(), inv.unit.Trim()) == 0)
                                                        {
                                                <option selected value="@item.uom5_id.Trim(),@item.uom5_qty">@item.uom5_id.Trim()</option>
                                                        }
                                                        else
                                                        {
                                                <option value="@item.uom5_id.Trim(),@item.uom5_qty">@item.uom5_id.Trim()</option>
                                                        }
                                                    }
                                                }

                                            </select>
                                        </td>
                                        <td><input type='text' class='form-control invoice_number' value="@inv.invoice_number"/></td>
                                        <td>
                                            <div style="display:inline-block !important;margin-right:5px !important;">
                                                <div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">
                                                    <input type="text" class="form-control invoice_date" style="width:130px !important;" value="@Convert.ToDateTime(inv.invoice_date).ToString("dd/MM/yyyy")" />
                                                    <div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@Html.DropDownList("warehouse_id", new SelectList(@ViewBag.WarehouseID, "warehouse_id", "warehouse_name", inv.warehouseName), new { @class = "form-control warehouse" })</td>
                                                            isFlag = true;
                                                            break;
                                                        }
                                                    }
                                @if (isFlag == false)
                                {
                                    <td><label class="request_qty">@string.Format("{0:N2}", Double.Parse(item.out_quantity.ToString()))</label> <label class='request_unit'>@item.unit</label></td>
                                    <td><input type="hidden" class="supplier_id" value="@item.supplier_id"/>@item.supplier_name</td>
                                    <td><input type="number" class="form-control received_qty" value="0" /></td>
                                    <td>
                                        <select class="form-control received-unit" onchange='checkQty(this)'>
                                            <option value="@Regex.Replace(item.itemUnit, @"\t|\n|\r", "")">@Regex.Replace(item.itemUnit, @"\t|\n|\r", "")</option>
                                            @{
                                                if (item.uom1_id != null && item.uom1_qty != null)
                                                {
                                                    <option value="@Regex.Replace(item.uom1_id, @"\t|\n|\r", ""),@item.uom1_qty">@Regex.Replace(item.uom1_id, @"\t|\n|\r", "")</option>
                                                }
                                                if (item.uom2_id != null && item.uom2_qty != null)
                                                {
                                                    <option value="@Regex.Replace(item.uom2_id, @"\t|\n|\r", ""),@item.uom2_qty">@Regex.Replace(item.uom2_id, @"\t|\n|\r", "")</option>
                                                }
                                                if (item.uom3_id != null && item.uom3_qty != null)
                                                {
                                                    <option value="@Regex.Replace(item.uom3_id, @"\t|\n|\r", ""),@item.uom3_qty">@Regex.Replace(item.uom3_id, @"\t|\n|\r", "")</option>
                                                }
                                                if (item.uom4_id != null && item.uom4_qty != null)
                                                {
                                                    <option value="@Regex.Replace(item.uom4_id, @"\t|\n|\r", ""),@item.uom4_qty">@Regex.Replace(item.uom4_id, @"\t|\n|\r", "")</option>
                                                }
                                                if (item.uom5_id != null && item.uom5_qty != null)
                                                {
                                                    <option value="@Regex.Replace(item.uom5_id, @"\t|\n|\r", ""),@item.uom5_qty">@Regex.Replace(item.uom5_id, @"\t|\n|\r", "")</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td><input type='text' class='form-control invoice_number' /></td>
                                    <td>
                                        <div style="display:inline-block !important;margin-right:5px !important;">
                                            <div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">
                                                <input type="text" class="form-control invoice_date" style="width:130px !important;" />
                                                <div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@Html.DropDownList("warehouse_id", new SelectList(@ViewBag.WarehouseID, "warehouse_id", "warehouse_name"), new { @class = "form-control warehouse" })</td>
                                }
                            </tr>

                                                        count++;
                                                    }
                    }
                </tbody>
            </table>
        </div>

        <div class="form-group">
            <label class="col-md-2">Suppoting Document:</label>
            <div class="col-md-10" id="attachment_block">
                @{
                    var atts = Model.attachments;
                    if (atts.Count() == 0)
                    {
                        <input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />
                    }
                    else
                    {
                        <table id="tableAttachment">
                            @for (int i = 0; i < atts.Count(); i++)
                            {
                                <tr>
                                    <td><a class="title @i" href="/ItemReceive/Download/?p=@(atts[i].ire_attachment_id + atts[i].ire_attachment_extension)&d=@atts[i].ire_attachment_name">@atts[i].ire_attachment_name</a></td>
                                    <td><a href="javascript:void(0);" class="btn btn-default delete-att title @i" data-id="@atts[i].ire_attachment_id">x</a></td>
                                    @{ if (i == atts.Count() - 1)
                                        {
                                            <td><a href="javascript:void(0);" class="btn btn-default add-row " data-id="@atts[i].ire_attachment_id">+</a></td>
                                        }
                                    }
                                </tr>
                                        }
                        </table>
                                        }
                }

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Submit" id="btnSubmit" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts{
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script type="text/javascript" src="~/Scripts/custom/itemReceiveScript.js"></script>
    <script type="text/javascript">
        $(function () {
            var arrDeletedAttachment = [];
            var $rdReceiveTypes = $('input:radio[name=receiveType]');
            var $receiveType = "@Model.received_type";
            var $ref_id = "@Model.ref_id";
            //$('#poSupplierPanel').hide();
            $('#supplier_id').select2();
            $('#ref_id').select2();
            $(".date").datepicker({ format: 'dd/mm/yyyy' });
            if ($receiveType == "Stock Transfer") {
                $rdReceiveTypes.filter('[value="Stock Transfer"]').prop('checked', true);
                $('#ref_label').empty();
                $('#ref_label').append("<label>ST Ref. <strong style='color:red;'>*</strong>:</label>");
                $('#receiveTypeBlock').empty();
                $('#receiveTypeBlock').append("" +
                        "<select class='form-control' id='ref_id' onchange='initialReceivedItem(true,$(this).val())'>" +
                            "<option value>Select Stock Transfer Reference</option>" +
                        "</select>"
                    );
                InitialStockTransferDropdownList($ref_id);
                //initialReceivedItem(true, $ref_id);
                $('#poSupplierPanel').hide();
            } else if ($receiveType == "Purchase Order") {
                $rdReceiveTypes.filter('[value="Purchase Order"]').prop('checked', true);
                $('#ref_label').empty();
                $('#ref_label').append("<label>PO Ref. <strong style='color:red;'>*</strong>:</label>");
                //$('#receiveTypeBlock').empty();
                /*
                $('#receiveTypeBlock').append('@Html.DropDownList("ref_id", new SelectList(ViewBag.PurchaseOrderRefs, "purchaseOrderId", "purchaseOrderNumber", Model.ref_id), new { @class = "form-control", @id = "ref_id", @onchange = "initialReceivedItem(false,$(this).val())" })');
                    /*
                        "<select class='form-control' id='ref_id' onchange='initialReceivedItem(false,$(this).val())'>" +
                            "<option value>Select Purchase Order Reference</option>" +
                        "</select>"
                        
                );
                */
                //InitialPurchaseOrderDropdownList($ref_id);
                //initialReceivedItem(false, $ref_id);
                //initialPOSupplierDropdownList();
                $('#poSupplierPanel').show();
            }

            /* event handler */
            $('input[type=radio][name=receiveType]').change(function () {
                $('#itemReceiveTable tbody').empty().append("<tr><td colspan='10'>No data available in table</td></tr>");
                if (this.value == "Stock Transfer") {
                    $('#ref_label').empty();
                    $('#ref_label').append("<label class='control-label'>ST Ref. <strong style='color:red;'>*</strong>:</label>");
                    $('#receiveTypeBlock').empty();
                    $('#receiveTypeBlock').append("" +
                            "<select class='form-control' id='ref_id' onchange='initialReceivedItem(true,$(this).val())'>" +
                                "<option value>Select Stock Transfer Reference</option>" +
                            "</select>"
                        );
                    InitialStockTransferDropdownList();
                    $('#poSupplierPanel').hide();
                }
                else if (this.value == "Purchase Order") {
                    $('#ref_label').empty();
                    $('#ref_label').append("<label class='control-label'>PO Ref. <strong style='color:red;'>*</strong>:</label>");
                    $('#receiveTypeBlock').empty();
                    $('#receiveTypeBlock').append("" +
                            "<select class='form-control' id='ref_id' onchange='initialReceivedItem(false,$(this).val())'>" +
                                "<option value>Select Purchase Order Reference</option>" +
                            "</select>"
                       );
                    $('#poSupplierPanel').show();
                    //InitialPurchaseOrderDropdownList();
                    initialPOSupplierDropdownList();
                    $('#itemReceiveTable tbody').empty().append("<tr><td colspan='10'>No data available in table</td></tr>");
                }
            });

            $('.delete-att').click(function (e) {
                e.preventDefault();
                var att_id = $(this).data('id');
                arrDeletedAttachment.push(att_id);
                var index = $(this)[0].parentNode.parentNode.rowIndex;
                document.getElementById('tableAttachment').deleteRow(index);
                var rowCount = $('#tableAttachment tr').length;
                if (rowCount == 0) {
                    $("#attachment_block").empty();
                    $("#attachment_block").append("" +
                        '<input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />'
                        );
                }
            });

            $('.add-row').click(function (e) {
                e.preventDefault();
                $('#tableAttachment').append("" +
                   "<tr>" +
                        '<td><input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple /></td>' +
                        '<td><a href="javascript:void(0);" class="btn btn-default delete-att" onclick="removeAttachmentRow(this)">x</a></td>' +
                   "</tr>"
                 );
                $(this).remove();
            });

            $('#supplier_id').on('change', function (e) {
                e.preventDefault();
                var id = $(this).val();
                initialPurchaseOrderRefbySupplier(id);
                $('#itemReceiveTable tbody').empty().append("<tr><td colspan='10'>No data available in table</td></tr>");
            });

            function enable_submit_button(is_submit) {
                if (is_submit) {
                    $('#btnSubmit').text("Submitting...");
                    $('#btnSubmit').attr('disabled', true);
                } else {
                    $('#btnSubmit').text("Submit");
                    $('#btnSubmit').attr('disabled', false);
                }
            }

            $('#btnSubmit').click(function () {
                enable_submit_button(true);
                var ireNumber = $('#received_number').text();
                var ireType = $('input[type=radio][name=receiveType]:checked').val();
                var ireRef = $('#ref_id').val();
                var items = $('.item_id');
                var receivedQtys = $('.received_qty');
                var warehouses = $('.warehouse');
                var history = $('.history_qlty');
                var remain = $('.remain_qlty');
                var received = $('.received_qlty');
                var requestedQtys = $('.request_qty');
                var receivedUnits = $('.received-unit');
                var suppliers = $('.supplier_id');
                var invoiceNumbers = $('.invoice_number');
                var invoiceDate = $('.invoice_date');
                var supplierId=$('#supplier_id').val();
                var poReportNumber = $('#ref_id option:selected').text();
                var element_item = {};
                var ireDetails = [];
                var arrAttachment = [];

                if (!ireRef) {
                    enable_submit_button(false);
                    alert("Receive Type Reference is required.");
                    return;
                }

                for (var i = 0; i < items.length; i++) {
                    var itemID = items[i].value;
                    var history = historyQlty[i].value;
                    var remain = remainQlty[i].value;
                    var receive = receivedQlty[i].value;
                    var receivedQty = receivedQtys[i].value;
                    var warehouse = warehouses[i].value;
                    var requestedQty = requestedQtys[i].innerHTML;
                    
                    var receivedUnit = (receivedUnits[i].value).split(',');
                    if (warehouse && receivedQty && Number(receivedQty) > 0) {
                        element_item = {};
                        element_item.product_id = itemID;
                        element_item.warehouse_id = warehouse;
                        element_item.in_quantity = receivedQty;
                        element_item.out_quantity = requestedQty;
                        element_item.unit = receivedUnit[0];
                        element_item.supplier_id = suppliers[i].value;
                        element_item.invoice_number = invoiceNumbers[i].value;
                        element_item.invoice_date = convertDDMMYYYtoMMDDYYYY(invoiceDate[i].value);
                        ireDetails.push(element_item);
                    } else if (receivedQty && Number(receivedQty) > 0 && !warehouse) {
                        enable_submit_button(false);
                        alert('Please select warehouse to receive item.');
                        return;
                    }
                    //else if (warehouse && (!receivedQty || Number(receivedQty) < 0)) {
                    //    $.notify('Please fill received qty to warehouse.', { className: 'error' });
                    //    return;
                    //}
                    //else if (!receivedUnit[0]) {
                    //    $.notify('Please fill received unit.', { className: 'error' });
                    //    return;
                    //}
                }

                if (ireDetails.length == 0) {
                    enable_submit_button(false);
                    alert('Received item required.');
                    return;
                }

                if (arrDeletedAttachment.length > 0) {
                    for (var i = 0; i < arrDeletedAttachment.length; i++) {
                        var attID = arrDeletedAttachment[i];
                        $.ajax({
                            url: '@Url.Action("DeleteAttachment", "ItemReceive")',
                            type: 'POST',
                            data: { id: attID }
                        }).done(function (data) {
                            if (data.Result == "ok") {

                            }
                            else if (data.Result.Message) {
                                alert(data.Result.Message);
                            }
                        }).fail(function () {
                            alert("There is something wrong. Please try again.");
                        })
                    }
                }

                var form_data = new FormData();
                var file_input = document.getElementById('attachment_reference');
                if (file_input != undefined) {
                    //if (file_input.files.length > 0) {
                        for (var i = 0; i < file_input.files.length; i++) {
                            form_data = new FormData();
                            form_data.append(file_input.files[i].name, file_input.files[i]);
                            $.ajax({
                                url: '@Url.Action("UploadAttachment", "ItemReceive")',
                                type: "POST",
                                data: form_data,
                                async: false,
                                cache: false,
                                contentType: false,
                                processData: false,
                                success: function (da) {
                                    if (da.result == "success")
                                        arrAttachment.push(da.attachment_id);
                                },
                                error: function (xhr, error, status) {
                                    console.log(error, status);
                                }
                            });
                        }
                    //} else {
                    //    alert("Attachments Reference is required.");
                    //    return;
                    //}
                }

                var model = {
                    receive_item_voucher_id: $('#receive_item_voucher_id').val(),
                    received_number: ireNumber,
                    received_type: ireType,
                    ref_id: ireRef,
                    supplier_id: supplierId,
                    po_report_number: poReportNumber,
                }
                $.ajax({
                    url: "@Url.Action("EditItemReceived", "ItemReceive")",
                    type: "post",
                    dataType: "json",
                    async: false,
                    data: { model: model, inventories: ireDetails, Attachment: arrAttachment },
                    success: function (da) {
                        if (da.result == "success") {
                            alert('Your data has been updated!');
                            window.location.href = '@Url.Action("Index", "ItemReceive")';
                        } else if (da.result == "fail") {
                            alert(da.message);
                        }
                    },
                    error: function (err) {
                        alert('Your data is error while updating!');
                    }
                });

            });

        });
    </script>
    <script type="text/javascript">
        function InitialStockTransferDropdownList(id) {
            $.ajax({
                url: "/ItemReceive/GetStockTransferNumberDropdownlist",
                type: "get",
                dataType: "json",
                data: { receivedId :id},
                success: function (da) {
                    if (da.data) {
                        $.each(da.data, function (index, item) {
                            $('#ref_id').append("" +
                               "<option value='" + item.stock_transfer_id + "'>" + item.stock_transfer_no + "</option>"
                                );
                        });
                        if (id != undefined)
                            $('#ref_id').val(id);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(textStatus);
                }
            });
        }

        function InitialPurchaseOrderDropdownList(id) {
            $.ajax({
                url: '/ItemReceive/GetPurchaseOrderNumberDropdownlist',
                type: "get",
                dataType: "json",
                success: function (da) {
                    if (da.data) {
                        $.each(da.data, function (index, item) {
                            $('#ref_id').append("" +
                               "<option value='" + item.purchase_order_id + "'>" + item.purchase_oder_number + "</option>"
                                );
                        });
                        if (id != undefined)
                            $('#ref_id').val(id);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(textStatus);
                }
            });
        }

        function initialPOSupplierDropdownList() {
            $('#supplier_id').empty().append("<option>Select Supplier</option>");
            $.ajax({
                url: '@Url.Action("SupplierDropdownList", "Supplier")',
                type: "get",
                dataType: "json",
                success: function (da) {
                    if (da.result = "success" && da.data) {
                        $.each(da.data, function (index, item) {
                            //console.log(item)

                            $('#supplier_id').append("" +
                               "<option value='" + item.supplier_id + "'>" + item.supplier_name + "</option>"
                                );

                        });
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(textStatus);
                }
            });
            $('#poSupplier').select2();
        }

        function initialPurchaseOrderRefbySupplier(id) {
            $('#ref_id').empty().append("<option>Select Purchase Order Reference</option>");
            $('#poVATStatus').val('');
            $.ajax({
                url: '@Url.Action("GetPurchaseOrderbySupplier", "ItemReceive")',
                type: "get",
                dataType: "json",
                data: { id: id },
                success: function (da) {
                    if (da.result = "success" && da.data) {
                        $.each(da.data, function (index, item) {
                            console.log(item)

                            $('#ref_id').append("" +
                               "<option value='" + item.purchaseOrderId + "'>" + item.purchaseOrderNumber + "</option>"
                                );

                        });
                        $('#ref_id').select2();
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(textStatus);
                }
            });
        }

        function initialReceivedItem(isST, stID) {
            var receivedType = $('input[type=radio][name=receiveType]:checked').val();
            $('#itemReceiveTable tbody').empty();
            if (stID == null || stID == "" || stID == undefined) {
                $('#itemReceiveTable tbody').empty().append("<tr><td colspan='10'>No data available in table</td></tr>");
            }
            else if (receivedType == "Stock Transfer" && isST && stID) {
                $.ajax({
                    url: '/ItemReceive/GetStockTransferItem',
                    type: "get",
                    dataType: "json",
                    data: { id: stID, receivedId: "@Model.receive_item_voucher_id" },
                    success: function (da) {
                        if (da.result == "success") {
                            $.each(da.data, function (index, item) {
                                var mou = "";
                                mou = mou + "<option value='" + item.itemUnit.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "'>" + item.itemUnit.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>";
                                if (item.uom != null) {
                                    if (item.uom.uom1_id != null && item.uom.uom1_qty != null) {
                                        var uom = (item.uom.uom1_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom1_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom2_id != null && item.uom.uom2_qty != null) {
                                        var uom = (item.uom.uom2_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom2_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom3_id != null && item.uom.uom3_qty != null) {
                                        var uom = (item.uom.uom3_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom3_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom4_id != null && item.uom.uom4_qty != null) {
                                        var uom = (item.uom.uom4_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom4_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom5_id != null && item.uom.uom5_qty != null) {
                                        var uom = (item.uom.uom5_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom5_qty + "'>" + uom + "</option>";
                                    }
                                }
                                $('#itemReceiveTable').append("" +
                                        "<tr>" +
                                            "<td>" + Number(index + 1) + "</td>" +
                                            "<td><input type='hidden' class='item_id' value='" + item.product_id + "'/>" + item.itemCode + "</td>" +
                                            "<td>" + item.itemName + "</td>" +
                                            "<td><label class='request_qty'>" + item.out_quantity + "</label> <label class='request_unit'>" + item.unit + "</label></td>" +
                                            "<td><input type='hidden' class='supplier_id' value='" + item.warehouse_id + "'/>" + item.warehouseName + "</td>" +
                                           "<td><input type='text' class='form-control history_qlty' id='history_qlty" + item.receive_item_voucher_id + "'  placeholder='history'/></td>" +
                                             "<td><input type='text' class='form-control remain_qlty' id='remain_qlty" + item.receive_item_voucher_id + "'  placeholder='remain'/></td>" +
                                             "<td><input type='text' class='form-control received_qlty' id='received_qlty" + item.receive_item_voucher_id + "'  placeholder='reveive'/></td>" +
                                            "<td><input type='number' class='form-control received_qty' value='0' onchange='checkQty(this)' /> </td>" +
                                            "<td><select class='form-control received-unit' onchange='checkQty(this)'>" + mou + "</select></td>" +
                                            "<td><input type='text' class='form-control invoice_number'/></td>" +
                                                "<td>" +
                                                    '<div style="display:inline-block !important;margin-right:5px !important;">' +
                                                            '<div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">' +
                                                                '<input type="text" class="form-control invoice_date" style="width:130px !important;"/>' +
                                                                '<div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>' +
                                                            '</div>' +
                                                        '</div>' +
                                                "</td>" +
                                            "<td><select class='form-control warehouse'></select></td>" +
                                        "</tr>"
                                    );
                                InitialWarehouseDropdownList(isST, stID, Number(index + 1));
                                $(".date").datepicker({ format: 'dd/mm/yyyy' });
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(textStatus);
                    }
                });
            } else if (receivedType == "Purchase Order" && isST == false && stID) {
                var supplierId = $('#supplier_id').val();
                var purchaseOrderNumber = $('#ref_id option:selected').text();
                $.ajax({
                    url: '/ItemReceive/GetPurchaseOrderItem',
                    type: "get",
                    dataType: "json",
                    data: { id: stID, receivedId: "@Model.receive_item_voucher_id",supplierid: supplierId, purchaseOrderNumber: purchaseOrderNumber },
                    success: function (da) {
                        if (da.result == "success") {
                     
                            $.each(da.data, function (index, item) {
                                console.log(item);
                                var mou;
                                mou = mou + "<option value='" + item.product_unit.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "'>" + item.product_unit.replace(/(\r\n\t|\n|\r\t)/gm, "").trim() + "</option>";
                                if (item.uom != null) {
                                    if (item.uom.uom1_id != null && item.uom.uom1_qty != null) {
                                        var uom = (item.uom.uom1_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom1_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom2_id != null && item.uom.uom2_qty != null) {
                                        var uom = (item.uom.uom2_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom2_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom3_id != null && item.uom.uom3_qty != null) {
                                        var uom = (item.uom.uom3_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom3_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom4_id != null && item.uom.uom4_qty != null) {
                                        var uom = (item.uom.uom4_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom4_qty + "'>" + uom + "</option>";
                                    }
                                    if (item.uom.uom5_id != null && item.uom.uom5_qty != null) {
                                        var uom = (item.uom.uom5_id).replace(/(\r\n\t|\n|\r\t)/gm, "").trim();
                                        mou = mou + "<option value='" + uom + "," + item.uom.uom5_qty + "'>" + uom + "</option>";
                                    }
                                }
                                $('#itemReceiveTable').append("" +
                                        "<tr>" +
                                            "<td>" + Number(index + 1) + "</td>" +
                                            "<td><input type='hidden' class='item_id' value='" + item.item_id + "'/>" + item.product_code + "</td>" +
                                            "<td>" + item.product_name + "</td>" +
                                            "<td><label class='request_qty'>" + item.quantity + "</label> <label  class='request_unit'>" + item.item_unit + "</label></td>" +// item.item_unit
                                             "<td><input type='text' class='form-control history_qlty' id='history_qlty" + item.receive_item_voucher_id + "'  placeholder='history'/></td>" +
                                             "<td><input type='text' class='form-control remain_qlty' id='remain_qlty" + item.receive_item_voucher_id + "'  placeholder='remain'/></td>" +
                                             "<td><input type='text' class='form-control received_qlty' id='received_qlty" + item.receive_item_voucher_id + "'  placeholder='reveive'/></td>" +
                                            "<td><input type='number' class='form-control received_qty' value='0' onchange='checkQty(this)' /> </td>" +
                                            "<td><select class='form-control received-unit' onchange='checkQty(this)'>" + mou + "</select></td>" +
                                            "<td><input type='text' class='form-control invoice_number'/></td>" +
                                                "<td>" +
                                                    '<div style="display:inline-block !important;margin-right:5px !important;">' +
                                                            '<div class="input-group date" data-provide="datepicker" data-autoclose="true" style="width:150px !important;">' +
                                                                '<input type="text" class="form-control invoice_date" style="width:130px !important;"/>' +
                                                                '<div class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></div>' +
                                                            '</div>' +
                                                        '</div>' +
                                            "<td><select class='form-control warehouse'></select></td>" +
                                        "</tr>"
                                    );
                                InitialWarehouseDropdownList(isST, stID, Number(index + 1));
                                $(".date").datepicker({ format: 'dd/mm/yyyy' });
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(textStatus);
                    }
                });
            }
        }
        function InitialWarehouseDropdownList(isST, ID, ind) {
            if (isST) {
                $.ajax({
                    url: '/ItemReceive/GetWarehouseByStockTransfer',
                    type: "get",
                    dataType: "json",
                    data: { id: ID },
                    success: function (da) {
                        if (da.result == "success") {
                            $.each(da.data, function (index, item) {
                                $('#itemReceiveTable tr').eq(ind).find('select.warehouse').append("<option value='" + item.warehouse_id + "'>" + item.warehouse_name + "</option>");
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(textStatus);
                    }
                });
            } else {
                $.ajax({
                    url: '/ItemReceive/GetWarehouseByPurchaseOrder',
                    type: "get",
                    dataType: "json",
                    data: { id: ID },
                    success: function (da) {
                        if (da.result == "success") {
                            $.each(da.data, function (index, item) {
                                $('#itemReceiveTable tr').eq(ind).find('select.warehouse').append("<option value='" + item.warehouse_id + "'>" + item.warehouse_name + "</option>");
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(textStatus);
                    }
                });
            }
        }
        function removeAttachmentRow(row) {
            var index = row.parentNode.parentNode.rowIndex;
            document.getElementById('tableAttachment').deleteRow(index);
            var rowCount = $('#tableAttachment tr').length;
            if (rowCount == 0) {
                $("#attachment_block").empty();
                $("#attachment_block").append("" +
                    '<input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />'
                    );
            }
        }
        /*
        function checkQty(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var requestQty = $('#itemReceiveTable tr').eq(ind).find('label.request_qty').text();
            var receiveQty = $('#itemReceiveTable tr').eq(ind).find('input.received_qty').val();
            var requestedUnit = $('#itemReceiveTable tr').eq(ind).find('label.request_unit').text();
            var receivedUnit = $('#itemReceiveTable tr').eq(ind).find('select.received-unit').val();
            if (!receivedUnit)
                return;
            var spitReceiveUnit = receivedUnit.split(',');
            if (requestedUnit == spitReceiveUnit[0]) {
                if (receiveQty && (Number(receiveQty) > Number(requestQty))) {
                    $.notify('Receive Qty must be smaller than Request Qty.', { className: 'error' });
                    $('#itemReceiveTable tr').eq(ind).find('input.received_qty').focus();
                    $('#itemReceiveTable tr').eq(ind).find('input.received_qty').val(0);
                    return;
                }
            } else {
                var quantity = 0;
                var selectedIndex = $('#itemReceiveTable tr').eq(ind).find('select.received-unit').prop('selectedIndex')
                if (receiveQty) {
                    if (selectedIndex == 2) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        quantity = receiveQty / splitElement[1];
                    }
                    else if (selectedIndex == 3) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        quantity = (receiveQty / splitElement[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 4) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(3).val().split(',');
                        quantity = ((receiveQty / splitElement[1]) / splitElement3[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 5) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(4).val().split(',');
                        quantity = ((((receiveQty / splitElement[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2[1]);
                    } else if (selectedIndex == 6) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(4).val().split(',');
                        var splitElement5 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(5).val().split(',');
                        quantity = ((((receiveQty / splitElement[1]) / splitElement5[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2;
                    }
                    if (quantity > Number(requestQty)) {
                        $.notify('Receive Qty must be smaller than Request Qty.', { className: 'error' });
                        $('#itemReceiveTable tr').eq(ind).find('input.received_qty').focus();
                        $('#itemReceiveTable tr').eq(ind).find('input.received_qty').val(0);
                        return;
                    }
                }

            }
        }*/
        function checkQty(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var requestQty = $('#itemReceiveTable tr').eq(ind).find('label.request_qty').text();
            var receiveQty = $('#itemReceiveTable tr').eq(ind).find('input.received_qty').val();
            var requestedUnit = $('#itemReceiveTable tr').eq(ind).find('label.request_unit').text();
            var receivedUnit = $('#itemReceiveTable tr').eq(ind).find('select.received-unit').val();
            if (!receivedUnit)
                return;
            var spitReceiveUnit = receivedUnit.split(',');
            if (requestedUnit == spitReceiveUnit[0]) {
                if (receiveQty && (Number(receiveQty) > Number(requestQty))) {
                    alert('Receive Qty must be smaller or equal to quantity.');
                    $('#itemReceiveTable tr').eq(ind).find('input.received_qty').focus();
                    $('#itemReceiveTable tr').eq(ind).find('input.received_qty').val(0);
                    return;
                }
            } else {
                var quantity = 0;
                var selectedIndex = $('#itemReceiveTable tr').eq(ind).find('select.received-unit').prop('selectedIndex')
                if (receiveQty) {
                    if (selectedIndex == 0) {

                    }
                    if (selectedIndex == 1) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        quantity = receiveQty / splitElement[1];
                    }
                    else if (selectedIndex == 2) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        quantity = (receiveQty / splitElement[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 3) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(3).val().split(',');
                        quantity = ((receiveQty / splitElement[1]) / splitElement3[1]) / splitElement2[1];
                    }
                    else if (selectedIndex == 4) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(4).val().split(',');
                        quantity = ((((receiveQty / splitElement[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2[1]);
                    } else if (selectedIndex == 5) {
                        var splitElement = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(selectedIndex).val().split(',');
                        var splitElement2 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(2).val().split(',');
                        var splitElement3 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(3).val().split(',');
                        var splitElement4 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(4).val().split(',');
                        var splitElement5 = $('#itemReceiveTable tr').eq(ind).find('select.received-unit option').eq(5).val().split(',');
                        quantity = ((((receiveQty / splitElement[1]) / splitElement5[1]) / splitElement4[1]) / splitElement3[1]) / splitElement2;
                    }
                    if (quantity > Number(requestQty)) {
                        alert('Receive quantity must be smaller or equal to quantity.', { className: 'error' });
                        $('#itemReceiveTable tr').eq(ind).find('input.received_qty').focus();
                        $('#itemReceiveTable tr').eq(ind).find('input.received_qty').val(0);
                        return;
                    }
                }

            }
        }
    </script>
}

