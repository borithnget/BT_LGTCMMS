@model IEnumerable<BT_KimMex.Models.ItemReceiveViewModel>
@using BT_KimMex.Class;
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<div class="row" style="padding:10px !important;">
    <div class="panel panel-default">
        <div class="panel-heading">
            Good Receive Note List
        </div>
        <div class="panel-body">
            <div class="well" style="padding:8px !important; padding-bottom:30px !important;">
                <div class="form-group">
                    <label class="control-label col-md-2">Requested Date:</label>
                    <div class="col-md-3">
                        <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                            <i class="fa fa-calendar"></i>&nbsp;
                            <span></span> <i class="fa fa-caret-down"></i>
                        </div>
                    </div>
                    @*<label class="control-label col-md-2">Status:</label>*@
                    @*<div class="col-md-3">
                    <select class="form-control" id="ddr_status" name="ddr_status" style="width:100% !important;">
                        <option value="0">All</option>
                        <option value="@Status.Pending">@ShowStatus.POCreated</option>
                        <option value="@Status.Approved">@ShowStatus.POApproved</option>
                        <option value="@Status.Rejected">@ShowStatus.PORejected</option>
                        <option value="@Status.Completed">@ShowStatus.POCompleted</option>
                        <option value="@Status.cancelled">@ShowStatus.POCancelled</option>
                        <option value="@Status.RequestCancelled">@ShowStatus.PORequestCancelled</option>
                        <option value="@Status.CancelledMR">@ShowStatus.CancelledMR</option>
                    </select>
                </div>*@
                    <div class="col-md-2">
                        <button type="button" class="w3-button w3-tiny w3-blue" onclick="initialDataTable()">Filter</button>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="itemReceiveTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Date</th>
                            <th>GRN NO.</th>
                            <th>Type</th>
                            <th>Ref. NO.</th>
                            <th>Supplier</th>
                            @*<th>Invoice No.</th>
        <th>Invoice Date</th>*@
                            <th>Requester</th>
                            @*<th>Sending Date</th>
                            <th>Return Date</th>*@
                            <th>Status</th>

                            <th>Detail</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*@{
                            int count = 1;
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>@count</td>
                                    <td>@CommonClass.ToLocalTime(Convert.ToDateTime(item.created_date)).ToString("dd/MM/yyyy")</td>
                                    <td><a href="@Url.Action("Detail","ItemReceive",new { id = item.receive_item_voucher_id })">@item.received_number</a></td>
                                    <td>@item.received_type</td>
                                    <td>@item.ref_number</td>
                                    <td>@item.supplier</td>
                                    <td>@item.invoiceNumber</td>
                                    <td>@item.invoiceDate</td>
                                    <td>@BT_KimMex.Class.CommonFunctions.GetUserFullnamebyUserId(item.created_by)</td>
                                    <td class="text-center">
                                        @if (string.Compare(item.received_status, Status.Pending) == 0 || string.Compare(item.received_status, Status.Feedbacked) == 0)
                                        {
                                            if (Convert.ToBoolean(item.is_received_partial))
                                            {
                                                <label class="label w3-red">@ShowStatus.GRNPartialCreated</label>
                                            }
                                            else
                                            {
                                                <label class="label w3-red">@ShowStatus.GRNCreated</label>
                                            }
                                        }
                                        else if (string.Compare(item.received_status, Status.PendingFeedback) == 0)
                                        {
                                            <label class="label w3-blue">@item.received_status</label>
                                        }
                                        else if (string.Compare(item.received_status, Status.Completed) == 0)
                                        {
                                            if (Convert.ToBoolean(item.is_received_partial))
                                            {
                                                <label class="label w3-green">@ShowStatus.RemainGRNPending</label>
                                            }
                                            else
                                            {
                                                <label class="label w3-green">@ShowStatus.GRNCompleted</label>
                                            }

                                        }
                                        else if (string.Compare(item.received_status, Status.Rejected) == 0 || string.Compare(item.received_status, Status.cancelled) == 0)
                                        {
                                            if (Convert.ToBoolean(item.is_received_partial))
                                            {
                                                <label class="label w3-gray">@ShowStatus.GRNPartialCancelled</label>
                                            }
                                            else
                                            {
                                                <label class="label w3-gray">@ShowStatus.GRNCancelled</label>
                                            }
                                        }
                                        else if (string.Compare(item.received_status, Status.Approved) == 0)
                                        {
                                            if (Convert.ToBoolean(item.is_received_partial))
                                            {
                                                <label class="label w3-blue">@ShowStatus.GRNPartialApproved</label>
                                            }
                                            else
                                            {
                                                <label class="label w3-blue">@ShowStatus.GRNApproved</label>
                                            }
                                        }
                                    </td>

                                    <td class="text-center"><a href="@Url.Action("Detail","ItemReceive",new { id = item.receive_item_voucher_id })" class="w3-button w3-tiny w3-green">View Detail</a></td>
                                </tr>
                                count++;
                            }
                        }*@
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.3/moment.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script type="text/javascript">
        $(function () {

            var start = moment().subtract(29, 'days');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);
            $('#ddr_status').select2();
            initialDataTable();


            
        });

        function initialDataTable() {

            var t = $('#itemReceiveTable').DataTable({
                "bDestroy": true,
                "ajax": {
                    "url": "/ItemReceive/GetGoodReceiveNoteListItemsByDateRangeAJAX",
                    "type": "GET",
                    "dataType": "json",
                    "data": {
                        dateRange: $('#reportrange span').html(),
                        //status: $('#ddr_status').val(),
                    }
                },
                "columns": [
                    { "data": "receive_item_voucher_id" },
                    { "data": "created_date_text" },
                    {
                        "render": function (data, type, full, meta) {
                            return '<a href="/ItemReceive/Detail/' + full.receive_item_voucher_id + '">' + full.received_number + '</a>';
                        }
                    },
                    { "data": "received_type" },
                    { "data": "ref_number" },
                    { "data": "supplier" },
                    //{ "data": "invoiceNumber" },
                    //{ "data": "invoiceDate" },
                        
                    { "data": "created_by_text" },
                    //{ "data": "sending_date_str" },
                    //{ "data": "returning_date_str" },
                    {
                        "render": function (data, type, item, meta) {
                            if (item.received_status == '@Status.Pending' || item.received_status == '@Status.Feedbacked') {
                                if (item.is_received_partial) {
                                    return '<label class="label w3-red">@ShowStatus.GRNPartialCreated</label>';
                                }
                                else {
                                    return '<label class="label w3-red">@ShowStatus.GRNCreated</label>';
                                }
                            }
                            else if (item.received_status == '@Status.PendingFeedback') {
                                return '<label class="label w3-blue">' + item.received_status + '</label>';
                            }
                            else if (item.received_status == '@Status.Completed') {
                                if (item.is_received_partial) {
                                    return '<label class="label w3-green">@ShowStatus.RemainGRNPending</label>';
                                }
                                else {
                                    return '<label class="label w3-green">@ShowStatus.GRNCompleted</label>';
                                }

                            }
                            else if (item.received_status == '@Status.Rejected' || item.received_status == '@Status.cancelled') {
                                if (item.is_received_partial) {
                                    return '<label class="label w3-gray">@ShowStatus.GRNPartialCancelled</label>';
                                }
                                else {
                                    return '<label class="label w3-gray">@ShowStatus.GRNCancelled</label>';
                                }
                            }
                            else if (item.received_status == '@Status.Approved') {
                                if (item.is_received_partial) {
                                    return '<label class="label w3-blue">@ShowStatus.GRNPartialApproved</label>';
                                }
                                else {
                                    return '<label class="label w3-blue">@ShowStatus.GRNApproved</label>';
                                }
                            }
                        }
                    },
                    
                    {
                        "render": function (data, type, full, meta) {
                            return '<a href="/ItemReceive/Detail/' + full.receive_item_voucher_id + '" class="w3-button w3-tiny w3-green">View Detail</a>';
                        }
                    },



                    ],
            "order": [[2, "desc"]],
        columnDefs: [{
    "defaultContent": "-",
    "targets": "_all"
  }]
                });
        t.on('order.dt search.dt', function () {
            t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
        }

    </script>
}
