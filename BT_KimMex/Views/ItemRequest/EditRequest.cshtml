@model BT_KimMex.Models.ItemRequestViewModel
    @using Microsoft.AspNet.Identity;
@using BT_KimMex.Class;
@{
    ViewBag.Title = "EditRequest";
}
<style type="text/css">
    .form-control {
        padding: 0px 0px !important;
        height: auto !important;
        font-size: 13px !important;
    }

    #ir_table tr th {
        vertical-align: middle !important;
        text-align: center !important;
    }

    #ir_table tr td:first-child {
        text-align: center !important;
    }

    #ir_table tr td {
        vertical-align: middle !important;
    }

        #ir_table tr td:nth-child(5) {
            padding: 0px !important;
            width: 200px !important;
        }

        #ir_table tr td:nth-child(3) {
            width: 80px !important;
            padding-left: 1px !important;
            padding-right: 1px !important;
        }

        #ir_table tr td:nth-child(4) {
            width: 100px !important;
            padding-left: 1px !important;
            padding-right: 1px !important;
        }

        #ir_table tr td:nth-child(6), #ir_table tr td:last-child {
            vertical-align: middle !important;
            text-align: center !important;
            width: 30px !important;
        }

        #ir_table tr td label {
            font-size: 13px !important;
        }
</style>
<h2 class="title">Edit Material Request</h2>

@using (Html.BeginForm(new { onsubmit = "return false" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model=>model.ir_id)
    <div class="row">
        <div class="col-12 col-xl-12 col-lg-12 col-md-12 col-sm-12">
            <div class="form-group row">
                @Html.Label("MR Date:", htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <label class="col-md-4" id="ir_current_date">@BT_KimMex.Class.CommonClass.ToLocalTime(Convert.ToDateTime(Model.created_date)).ToString("dd/MM/yyyy")</label>
                <label class="col-md-2 control-label">MR No.:</label>
                <label class="col-md-4" id="ir_no">@Model.ir_no</label>
            </div>
            <div class="form-group row">
                <label class="col-md-2 col-form-label">Project Name <strong style="color:red;">*</strong>:</label>
                <div class="col-md-4">
                    @Html.HiddenFor(model => model.boq_id)
                    @if (User.IsInRole(Role.SystemAdmin))
                    {
                        @Html.DropDownList("ir_project_id", new SelectList(BT_KimMex.Class.CommonClass.GetAllProject(), "project_id", "project_full_name", Model.ir_project_id), new { @class = "form-control", id = "ir_project_id", style = "width:300px !important;" })
                    }
                    else
                    {
                        @Html.DropDownList("ir_project_id", new SelectList(BT_KimMex.Class.CommonClass.GetAllProject(User.Identity.GetUserId()), "project_id", "project_full_name", Model.ir_project_id), new { @class = "form-control", id = "ir_project_id", style = "width:300px !important;" })
                    }
                    @Html.ValidationMessageFor(model => model.ir_project_id, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.ir_purpose_id, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("ir_purpose_id", new SelectList(BT_KimMex.Class.CommonClass.GetPurposeListItems(), "purpose_id", "purpose_name", Model.ir_purpose_id), new { @class = "form-control", id = "ir_purpose_id" })

                </div>
            </div>
            <div class="form-group row">
                <label class="col-md-2 col-form-label">Expected Day of Delivery :</label>
                <div class="col-md-4">
                    <div class="input-group date" data-provide="datepicker" style="width:200px !important;">
                        <input type="text" class="" placeholder="MM/DD/YYYY" id="expected_delivery_date" name="expected_delivery_date" />
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" style="vertical-align:middle !important; margin-bottom:10px !important;">
        <div class="col-1 col-xl-1 col-lg-1 col-md-1 col-sm-1" style="padding-right:0px !important;">
            <select class="form-control" name="product_group" id="product_group" onchange="initialCategoryProductSizeControl()" style="width:120px !important;">
                <option selected disabled>Select Group</option>
            </select>
        </div>
        <div class="col-2 col-xl-2 col-lg-2 col-md-2 col-sm-2" style="padding-right:0px !important;" onchange="initialProductTypeControl()">
            <select class="form-control" name="product_category" id="product_category">
                <option selected disabled>Select Category</option>
            </select>
        </div>
        <div class="col-2 col-xl-2 col-lg-2 col-md-2 col-sm-2" style="padding-right:0px !important;">
            <select class="form-control" name="product_type" id="product_type" onchange="initialBrandControl()">
                <option selected disabled>Select Type</option>
            </select>
        </div>
        <div class="col-2 col-xl-2 col-lg-2 col-md-2 col-sm-2" style="padding-right:0px !important;">
            <select class="form-control" name="brand" id="brand" onchange="initialProductSizeControl()">
                <option selected disabled>Select Brand</option>
            </select>
        </div>
        <div class="col-2 col-xl-2 col-lg-2 col-md-2 col-sm-2" style="padding-right:0px !important;">
            <select class="form-control" name="product_size" id="product_size">
                <option selected disabled>Select Size</option>
            </select>
        </div>
        <div class="col-2 col-xl-2 col-lg-2 col-md-2 col-sm-2" style="padding-right:0px !important;">
            <input class="form-control" id="product_description" onfocus="initialProductSuggestionControl()" />
            <input type="hidden" id="product_sugguestion_id" />
        </div>
        <div class="col-1 col-xl-1 col-lg-1 col-md-1 col-sm-1" style="padding-right:0px !important;">
            <a class="btn btn-sm btn-primary btn-flat" id="btnadd">Add</a> <a class="btn btn-sm btn-danger btn-flat" id="btnclear">Clear</a>
        </div>
    </div>
    <div class="row" style="margin:10px !important;">
        <table class="table table-bordered" id="ir_table">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Description</th>
                    <th>Request Qty</th>
                    <th>Unit</th>
                    <th>Remark</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @{ 
                    int count = 1;

                    foreach(var item in Model.ir1[0].ir2)
                    {
                        string rowId = string.Format("i{0}", count);
                        <tr id="@rowId">  
                            <td><label class='ordering_number'>@count</label></td>                          
                            <td><input type='hidden' class='item_id' id="@count" value='@item.ir_item_id' /><label class='item_name'>@string.Format("{0}-{1}",item.product_code,item.product_name)</label></td>                           
                            <td><input type='number' class='form-control ir_qty' value='@string.Format("{0:G29}", decimal.Parse(item.ir_qty.ToString()))' placeholder='Request Quantity' /></td>                            
                            <td>
                                <select class='form-control item-unit'>
                                @if (string.Compare(item.requested_unit, item.unit_id) == 0)
                                {
                                    <option value="@item.unit_id" selected>@item.product_unit</option>
                                }
                                else
                                {
                                    <option value="@item.unit_id" selected>@item.product_unit</option>
                                }
                                </select>
                            </td>                           
                            <td><textarea class='form-control item_remark' placeholder='Remark'>@item.remark</textarea></td>                           
                            <td><a href="javascript:void(0)" class="btn btn-sm btn-danger btn-flat" onclick="remove_ir_item_row(this)"><i class="fa fa-trash-o"></i></a></td>
                        </tr>
                                                                    count++;
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="row">
        <div class="col-6 col-xl-6 col-lg-6 col-md-6 col-sm-6">

            <div class="form-group row">
                <label class="col-md-4 col-form-label">Attachment Reference</label>
                <div class="col-md-8" id="attachment_block">
                    @{
                        if (string.IsNullOrEmpty(Model.att_id))
                        {
                            <input type="file" class="form-control" name="attachment_reference" id="attachment_reference" style="width:300px !important;" />
                        }else
                        {
                            <table id="tableAttachment">
                                <tr>
                                    <td><a class="title" href="/Quote/Download/?p=@(Model.att_id + Model.ir_attachment_extension)&d=@Model.ir_attachment_name">@Model.ir_attachment_name</a></td>
                                    <td><a href="javascript:void(0);" class="btn btn-default delete-att title" onclick="remove_attachment_row(this)">x</a></td>
                                </tr>
                            </table>
                        }
                    }
                    
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-offset-3 col-md-9">
                    <button type="button" id="btn-submit" class="w3-button w3-blue">Submit</button>
                    <a href="javascript:history.back()" class="w3-button w3-red">Back</a>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="filter_result_modal" tabindex="=-1" role="dialog" aria-labelledby="myModalLabel" style="width:100% !important;">
    <div class="modal-dialog " role="document" style="width:100% !important;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Filter results for '<b id="filter_keyword"></b>'</h4>
            </div>
            <div class="modal-body col-sm-12" style="width:100% !important">
                <div class="row">
                    <div class="form-group row">
                        <div class="col-lg-10 col-md-10"></div>
                        <div class="col-lg-1 col-md-1" style="padding-right:15px !important;">
                            <input type="button" value="Add to List" class="btn btn-primary float-right" id="btn_add_to_list" />
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered" id="filter_resultTable">
                        <thead>
                            <tr>
                                <th class="text-center"><input type="checkbox" id="head_selected" /></th>
                                <th>Group</th>
                                <th>Category</th>
                                <th>Type</th>
                                <th>Class</th>
                                <th>Size</th>
                                <th>Color</th>
                                <th>Brand</th>
                                <th>Factory Code</th>
                                <th>Unit</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

        $(function () {

            $('#expected_delivery_date').val('@Convert.ToDateTime(Model.expected_delivery_date).ToString("MM/dd/yyyy")');
            $('div.date').on('changeDate', function () {
                $(this).datepicker('hide');
            });

            initialGroupControl();
            initialCategoryProductSizeControl();

            $('#product_description').keyup(function (e) {
                if (e.keyCode == 13) {
                    var filter_keyword = $(this).val();
                    if (filter_keyword) {
                        $('#filter_keyword').html(filter_keyword);
                        $('#filter_result_modal').modal('show');

                        $('#filter_resultTable tbody').empty();
                        var classId = $('#product_group').val();
                        var categoryId = $('#product_category').val();
                        var productTypeId = $('#product_type').val();
                        var brands = $('#brand').val();
                        var productSizeId = $('#product_size').val();

                        $.ajax({
                            url: "/Product/GetProductFilterResult/",
                            dataType: "json",
                            data: { term: filter_keyword, classId: classId, categoryId: categoryId, productTypeId: productTypeId, brandId: brands, productSizeId: productSizeId },
                            success: function (data) {
                                //console.log(data);
                                if (data.results.length == 0)
                                    $('#filter_resultTable tbody').append("" +
                                        "<tr>" +
                                            "<td colspan='11'>No Result</td>" +
                                        "</tr>"
                                    );
                                else {
                                    $.each(data.results, function (index, item) {
                                        $('#filter_resultTable tbody').append("" +
                                            "<tr>" +
                                            "<td class='text-center'><input type='checkbox' value='' class='is_selected' name='is_selected' /> <input type='hidden' class='filter_item_id' value='" + item.product_id + "' /> </td>" +
                                            "<td>" + checkIsNullorEmpty(item.class_name) + "</td>" +
                                            "<td>" + checkIsNullorEmpty(item.p_category_name) + "</td>" +
                                            "<td>" + checkIsNullorEmpty(item.product_type_name) + "</td>" +
                                            "<td>" + checkIsNullorEmpty(item.product_class_name) + "</td>" +
                                            "<td>" + checkIsNullorEmpty(item.product_size_name) + "</td>" +
                                            "<td>" + checkIsNullorEmpty(item.color_name) + "</td>" +
                                            "<td>" + checkIsNullorEmpty(item.brand_name) + "</td>" +
                                            "<td>" + checkIsNullorEmpty(item.model_factory_code) + "</td>" +
                                            "<td>" + item.product_unit + "</td>" +
                                            "<td>" + item.product_name + "</td>" +
                                            "</tr>"
                                            );
                                    });
                                }

                            }
                        });


                    }

                }
            });

            $('#btn_add_to_list').click(function (e) {
                e.preventDefault();
                var is_selecteds = $('.is_selected');
                var item_ids = $('.filter_item_id');

                var countSelectedItem = 0;

                for (var i = 0; i < is_selecteds.length; i++) {
                    if ($(is_selecteds[i]).is(':checked')) {
                        var itemId = item_ids[i].value;

                        var rowId = 0, rowNumber = 0;
                        var countrow = $('#ir_table tbody tr').length;

                        if (itemId == null || itemId == undefined || itemId == "")
                            return;
                        if (countrow > 0) {
                            rowId = $('#ir_table tbody tr:last-child').attr('id').replace(/[^\d]/g, '');
                            rowNumber = $('#ir_table tbody tr:last-child').find('td:first-child').text();
                        }

                        $('#ir_table tbody').append("" +
                                "<tr id='i" + Number(Number(rowId) + 1) + "'>" +
                                    "<td><label class='ordering_number'>" + Number(Number(rowNumber) + 1) + "</label></td>" +
                                    "<td><input type='hidden' class='item_id' id='1'/><label class='item_name'></label></td>" +
                                    "<td><input type='number' class='form-control ir_qty' value='" + Number(0) + "' placeholder='Request Quantity'/></td>" +
                                    "<td><select class='form-control item-unit'></select></td>" +
                                    "<td><textarea class='form-control item_remark' placeholder='Remark'></textarea></td>" +
                                    '<td><a href="javascript:void(0)" class="btn btn-sm btn-danger btn-flat" onclick=" remove_ir_item_row(this)"><i class="fa fa-trash-o"></i></a></td></td>' +
                                '</tr>'
                                );


                        var ind = $('#ir_table tr').length - 1;
                        $('#product_description').val('');
                        $('#product_sugguestion_id').val('');

                        if (itemId != "") {
                            $.ajax({
                                url: '/Product/GetProductDataByCode',
                                type: "get",
                                dataType: "json",
                                async: false,
                                data: { id: itemId },
                                success: function (da) {
                                    $('#ir_table tr').eq(ind).find('select.item-unit').empty();
                                    if (da.data) {
                                        var item = da.data;
                                        console.log(item);
                                        $('#ir_table tr').eq(ind).find('input.item_id').val(itemId);
                                        $('#ir_table tr').eq(ind).find('label.item_name').text(item.product_code + " - " + item.product_name);
                                        $('#ir_table tr').eq(ind).find('input.ir_qty').val(Number(0));

                                        $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.product_unit + "'>" + item.unit_name + "</option>");

                                        if (item.uom1_id && item.uom1_qty) {
                                            $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom1_id + "'>" + item.uom1_id + "</option>");
                                        }
                                        if (item.uom2_id && item.uom2_qty) {
                                            $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom2_id + "'>" + item.uom2_id + "</option>");
                                        }
                                        if (item.uom3_id && item.uom3_qty) {
                                            $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom3_id + "'>" + item.uom3_id + "</option>");
                                        }
                                        if (item.uom4_id && item.uom4_qty) {
                                            $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom4_id + "'>" + item.uom4_id + "</option>");
                                        }
                                        if (item.uom5_id && item.uom5_qty) {
                                            $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom5_id + "'>" + item.uom5_id + "</option>");
                                        }

                                    } else {
                                        $('#ir_table tr').eq(ind).find('input.item_id').val(' ');
                                        $('#ir_table tr').eq(ind).find('label.item_name').text(' ');
                                        $('#ir_table tr').eq(ind).find('input.ir_qty').val(parseFloat(0).toFixed(2));
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    $('#ir_table tr').eq(ind).find('select.item-unit').empty().append("<option disabled selected>Select Unit</option>");
                                    $('#ir_table tr').eq(ind).find('input.item_id').val(' ');
                                    $('#ir_table tr').eq(ind).find('label.item_name').text(' ');
                                    $('#ir_table tr').eq(ind).find('input.ir_qty').val(parseFloat(0).toFixed(2));
                                    alert(textStatus);
                                }
                            });
                        }
                        countSelectedItem++;
                    }
                }

                if (countSelectedItem == 0) {
                    alert("No item for add to list.");
                    return;
                }

            })

            //$("form").submit(function (e) {
            //    e.preventDefault();
            ////alert("call some function here");
            //});

            $('#btnadd').click(function (e) {
                e.preventDefault();
                var rowId = 0, rowNumber = 0;
                var itemId = $('#product_sugguestion_id').val();
                var countrow = $('#ir_table tbody tr').length;

                if (itemId == null || itemId == undefined || itemId == "")
                    return;
                if (countrow > 0) {
                    rowId = $('#ir_table tbody tr:last-child').attr('id').replace(/[^\d]/g, '');
                    rowNumber = $('#ir_table tbody tr:last-child').find('td:first-child').text();
                }

                $('#ir_table tbody').append("" +
                        "<tr id='i" + Number(Number(rowId) + 1) + "'>" +
                            //"<td>" + Number(Number(rowNumber) + 1) + "</td>" +
                            "<td><label class='ordering_number'>" + Number(Number(rowNumber) + 1) + "</label></td>" +
                            "<td><input type='hidden' class='item_id' id='1'/><label class='item_name'></label></td>" +
                            "<td><input type='number' class='form-control ir_qty' value='" + Number(0) + "' placeholder='Request Quantity'/></td>" +
                            "<td><select class='form-control item-unit'></select></td>" +
                            "<td><textarea class='form-control item_remark' placeholder='Remark'></textarea></td>" +
                            '<td><a href="javascript:void(0)" class="btn btn-sm btn-danger btn-flat" onclick=" remove_ir_item_row(this)"><i class="fa fa-trash-o"></i></a></td>' +
                        '</tr>'
                        );


                var ind = $('#ir_table tr').length - 1;
                $('#product_description').val('');
                $('#product_sugguestion_id').val('');
                if (itemId != "") {
                    $.ajax({
                        url: '/Product/GetProductDataByCode',
                        type: "get",
                        dataType: "json",
                        async: false,
                        data: { id: itemId },
                        success: function (da) {
                            $('#ir_table tr').eq(ind).find('select.item-unit').empty();
                            if (da.data) {
                                var item = da.data;
                                console.log(item);
                                $('#ir_table tr').eq(ind).find('input.item_id').val(itemId);
                                $('#ir_table tr').eq(ind).find('label.item_name').text(item.product_code + " - " + item.product_name);
                                $('#ir_table tr').eq(ind).find('input.ir_qty').val(Number(0));

                                $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.product_unit + "'>" + item.unit_name + "</option>");

                                if (item.uom1_id && item.uom1_qty) {
                                    $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom1_id + "'>" + item.uom1_id + "</option>");
                                }
                                if (item.uom2_id && item.uom2_qty) {
                                    $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom2_id + "'>" + item.uom2_id + "</option>");
                                }
                                if (item.uom3_id && item.uom3_qty) {
                                    $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom3_id + "'>" + item.uom3_id + "</option>");
                                }
                                if (item.uom4_id && item.uom4_qty) {
                                    $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom4_id + "'>" + item.uom4_id + "</option>");
                                }
                                if (item.uom5_id && item.uom5_qty) {
                                    $('#ir_table tr').eq(ind).find('select.item-unit').append("<option value='" + item.uom5_id + "'>" + item.uom5_id + "</option>");
                                }

                            } else {
                                $('#ir_table tr').eq(ind).find('input.item_id').val(' ');
                                $('#ir_table tr').eq(ind).find('label.item_name').text(' ');
                                $('#ir_table tr').eq(ind).find('input.ir_qty').val(parseFloat(0).toFixed(2));
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $('#ir_table tr').eq(ind).find('select.item-unit').empty().append("<option disabled selected>Select Unit</option>");
                            $('#ir_table tr').eq(ind).find('input.item_id').val(' ');
                            $('#ir_table tr').eq(ind).find('label.item_name').text(' ');
                            $('#ir_table tr').eq(ind).find('input.ir_qty').val(parseFloat(0).toFixed(2));
                            alert(textStatus);
                        }
                    });
                }

            });

            $('#btnclear').click(function (e) {
                initialJobCategoryControl();
                initialGroupControl();
                initialCategoryProductSizeControl();
                //initialProductTypeControl();
                //initialBrandControl();
                //initialProductSizeControl();
                $('#product_sugguestion_id').val('');
                $('#product_description').val('');
            });
            $('#head_selected').click(function () {
                if ($(this).prop("checked") == true) {
                    //alert("Checkbox is checked.");
                    check_uncheck_checkbox(true);
                }
                else if ($(this).prop("checked") == false) {
                    //alert("Checkbox is unchecked.");
                    check_uncheck_checkbox(false);
                }
            });

            $('#btn-submit').click(function (e) {

                e.preventDefault();       
                $('#btn-submit').attr('disabled', true);
                var item_element = {};
                var job_element = {};
                var type_element = {};
                var ir_item = [];
                var ir_job = [];
                var ir_type = [];
                var ir_no = $('#ir_no').text();
                var ir_project_id = $('#ir_project_id').val();
                var ir_purpose = $('#ir_purpose_id').val();
                var job_categories = $('.jobcategoryids');
                var item_types = $('.item_type_id');
                var items = $('.item_id');
                var ir_qtys = $('.ir_qty');
                //var ir_boq_balance = $('.item_qty');
                var items_unit = $('.item-unit');
                var item_remarks = $('.item_remark');
                var ordering_numbers = $('.ordering_number');
                var att_id = "";
                var isNullItemName = 0;
                var isNullQty = 0;
                var isNullUnit = 0;
                var isNullJobCategory = 0;


                for (var i = 0; i < items.length; i++) {
                    var item_id = items[i].value;
                    var ir_qty = ir_qtys[i].value;
                    if (item_id == null || item_id == "" || item_id == undefined)
                        isNullItemName++;
                }

                for (var i = 0; i < items.length; i++) {
                    var ir_qty = ir_qtys[i].value;
                    if (ir_qty == null || ir_qty == "" || ir_qty == undefined || Number(ir_qty) == 0)
                        isNullQty++;
                }
                for (var i = 0; i < items.length; i++) {
                    var item_unit = items_unit[i].value;
                    if (item_unit == null || item_unit == "" || item_unit == undefined || item_unit == "Select Unit")
                        isNullUnit++;
                }
                if (ir_project_id == null || ir_project_id == "" || ir_project_id == undefined) {
                    alert("Project name is required.");
                    enable_submit_button(false);
                    return;
                }
                if (items.length == 0) {
                    alert("Item request are required.");
                    enable_submit_button(false);
                    return;
                }
                if (isNullItemName > 0) {
                    alert("Item name are required.");
                    enable_submit_button(false);
                    return;
                }
                if (isNullQty > 0) {
                    alert("Item request qty are required.");
                    enable_submit_button(false);
                    return
                }
                if (isNullUnit > 0) {
                    alert('Item request unit are required.');
                    enable_submit_button(false);
                    return;
                }

                var form_data = new FormData();
                var file_input = document.getElementById('attachment_reference');
                if (file_input != undefined) {
                    if (file_input.files.length > 0) {
                        for (var i = 0; i < file_input.files.length; i++) {
                            form_data.append(file_input.files[i].name, file_input.files[i]);
                        }
                        $.ajax({                            
                            url: '@Url.Action("UploadAttachment","ItemRequest")',
                            type: "POST",
                            data: form_data,
                            async: false,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function (da) {
                                if (da.result == "success")
                                    att_id = da.attachment_id;
                            },
                            error: function (xhr, error, status) {
                                console.log(error, status);
                            }
                        });
                    }
                }

                for (var i = 0; i < items.length; i++) {
                    item_element = {};
                    item_element.ordering_number = ordering_numbers[i].innerHTML;
                    item_element.ir_item_id = items[i].value;
                    item_element.ir_qty = ir_qtys[i].value;
                    item_element.product_unit = items_unit[i].value;
                    item_element.remark = item_remarks[i].value;
                    ir_item.push(item_element);
                }

                var model = {
                    ir_id: $('#ir_id').val(),
                    ir_no: ir_no,
                    ir_project_id: ir_project_id,
                    ir_purpose_id: ir_purpose,
                    att_id: att_id,
                    expected_delivery_date: $('#expected_delivery_date').val(),
                }
                console.log(ir_item);
                //return;
                
                $.ajax({
                    beforeSend: function () {
                        // Handle the beforeSend event
                        //alert("Start ajax");
                        $('#btn-submit').text("Submitting...");
                        $('#btn-submit').prop('disabled', true);
                    },
                    url: "@Url.Action("EditItemRequest_v2", "ItemRequest")",
                    type: "post",
                    dataType: "json",
                    //async: false,
                    data: { model: model, ir1: ir_job, ir2: ir_item, irType: ir_type },
                    success: function (da) {
                        if (da.result == "success") {
                            alert('Item Request has been updated successfully.');
                            window.location.href = '@Url.Action("MyRequest", "ItemRequest")';
                        } else {
                            alert(da.message);
                            enable_submit_button(false);
                        }
                    },
                    error: function (err) {
                        alert('Your data is error while updating.');
                        console.log(err);
                        enable_submit_button(false);
                    }
                });

            });

        });
        function checkIsNullorEmpty(value) {
            if (value)
                return value;
            return "";
        }
        function initialGroupControl() {
            $('#product_group').empty().append("<option selected disabled>Select Group</option>");
            $.ajax({
                url: '/Class/GetClassDataDropdownlist',
                type: "get",
                dataType: "json",
                async: false,
                success: function (da) {
                    if (da.result == "success") {
                        console.log(da);
                        $.each(da.data, function (ind, item) {
                            $('#product_group').append("" +
                                "<option value='" + item.class_id + "'>" + item.class_name + "</option>"
                            );
                        });
                    } else {
                        alert('Error: ' + da.message);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Initial BOQ Item Type:' + textStatus);
                }
            });
        }
        function initialCategoryProductSizeControl() {
            var groupId = $('#product_group').val();
            $('#product_category').empty().append("<option selected disabled>Select Category</option>");
            $('#product_type').empty().append("<option selected disabled>Select Type</option>");
            $('#brand').empty().append("<option selected disabled>Select Brand</option>");
            $('#product_size').empty().append("<option selected disabled>Select Size</option>");
            $.ajax({
                url: '/ProductCategory/GetCategoryDataDropdownlistbyClassId',
                type: "get",
                dataType: "json",
                async: false,
                data: { id: groupId },
                success: function (da) {
                    if (da.result == "success") {
                        //console.log(da);
                        $.each(da.data, function (ind, item) {
                            $('#product_category').append("" +
                                "<option value='" + item.p_category_id + "'>" + item.p_category_name + "</option>"
                            );
                        });
                    } else {
                        alert('Error:' + da.message);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Initial BOQ Item Type:' + textStatus);
                }
            });

            //product size
            $.ajax({
                url: '/ProductSize/GetProductDataDropdownlistbyClassId',
                type: "get",
                dataType: "json",
                async: false,
                data: { id: groupId },
                success: function (da) {
                    if (da.result == "success") {
                        //console.log(da);
                        $.each(da.data, function (ind, item) {
                            $('#product_size').append("" +
                                "<option value='" + item.product_size_id + "'>" + item.product_size_name + "</option>"
                            );
                        });
                    } else {
                        alert('Initial BOQ Item Type:' + da.message);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Initial BOQ Item Type:' + textStatus);
                }
            });

            //product type
            $.ajax({
                url: '/ProductType/GetProductTypeListItemsbyCategoryId',
                type: "get",
                dataType: "json",
                async: false,
                data: { id: groupId },
                success: function (da) {
                    //console.log(da.data);
                    $.each(da.data, function (ind, item) {
                        $('#product_type').append("" +
                            "<option value='" + item.product_type_id + "'>" + item.product_type_name + "</option>"
                        );
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Initial Product Type:' + textStatus);
                }
            });
            //brand
            initialBrandControl();
        }
        function initialBrandControl() {
            var productTypeId = $('#product_type').val();
            var groupId = $('#product_group').val();
            $('#brand').empty().append("<option selected disabled>Select Brand</option>");
            $.ajax({
                url: '/Brand/GetBrandListItemsbyCategoryId',
                type: "get",
                dataType: "json",
                async: false,
                data: { id: productTypeId, group_id: groupId },
                success: function (da) {
                    //console.log(da.data);
                    $.each(da.data, function (ind, item) {
                        $('#brand').append("" +
                            "<option value='" + item.brand_id + "'>" + item.brand_name + " - " + item.product_type_name + "</option>"
                        );
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Initial Brand:' + textStatus);
                }
            });
        }
        function initialProductTypeControl() {
            var categoryId = $('#product_category').val();
            $('#product_type').empty().append("<option selected disabled>Select Product Type</option>");
            $('#brand').empty().append("<option selected disabled>Select Brand</option>");
            $.ajax({
                url: '/ProductType/GetProductTypeListItemsbyCategoryId',
                type: "get",
                dataType: "json",
                async: false,
                data: { id: categoryId },
                success: function (da) {
                    //console.log(da.data);
                    $.each(da.data, function (ind, item) {
                        $('#product_type').append("" +
                            "<option value='" + item.product_type_id + "'>" + item.product_type_name + "</option>"
                        );
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Initial Product Type:' + textStatus);
                }
            });
        }
        function initialProductSizeControl() {
            var brandId = $('#brand').val();
            //var groupId=$('#')
            $('#product_size').empty().append("<option selected disabled>Select Size</option>");
            $.ajax({
                url: '/ProductSize/GetProductDataDropdownlistbyClassId',
                type: "get",
                dataType: "json",
                async: false,
                data: { id: brandId },
                success: function (da) {
                    if (da.result == "success") {
                        //console.log(da);
                        $.each(da.data, function (ind, item) {
                            $('#product_size').append("" +
                                "<option value='" + item.product_size_id + "'>" + item.product_size_name + "</option>"
                            );
                        });
                    } else {
                        alert('Initial BOQ Item Type:' + da.message);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Initial BOQ Item Type:' + textStatus);
                }
            });
        }
        function initialProductSuggestionControl() {
            var classId = $('#product_group').val();
            var categoryId = $('#product_category').val();
            var productTypeId = $('#product_type').val();
            var brands = $('#brand').val();
            var productSizeId = $('#product_size').val();
            $('#product_description').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Product/GetProductAutoSuggestName/",
                        dataType: "json",
                        data: { term: request.term, classId: classId, categoryId: categoryId, productTypeId: productTypeId, brandId: brands, productSizeId: productSizeId },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                select: function (event, ui) {
                    console.log(ui);
                    $('#product_sugguestion_id').val('');
                    var selectedObj = ui.item;
                    var item = (selectedObj.value).split(' ');
                    $('#product_sugguestion_id').val(selectedObj.id);
                }
            })
        }
        function check_uncheck_checkbox(isChecked) {
            if (isChecked) {
                $('input[name="is_selected"]').each(function () {
                    this.checked = true;
                });
            } else {
                $('input[name="is_selected"]').each(function () {
                    this.checked = false;
                });
            }
        }

        function enable_submit_button(is_submit) {
            if (is_submit) {
                $('#btn-submit').text("Submitting...");
                $('#btn-submit').attr('disabled', true);
            } else {
                $('#btn-submit').text("Submit");
                $('#btn-submit').attr('disabled', false);
            }
        }

        function remove_ir_item_row(row) {
            var arrItemId = [];
            var ind = row.parentNode.parentNode.rowIndex;
            //var isLastChild = $('#quoteTable tr').eq(ind).find("td:nth-child(8) a").length == 0 ? false : true;
            var isLastChild = $('#ir_table tbody tr').length == 1 ? true : false;
            var itemId = $('#ir_table tr').eq(ind).attr('id');
            var count_table_row = $('#ir_table tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#ir_table tr').eq(i).attr('id');
                if (id != undefined)
                    arrItemId.push(id);
            }
            if (arrItemId.length == 1) {
                return;
            }
            document.getElementById('ir_table').deleteRow(ind);
            if (isLastChild) {
                //$('#quoteTable tr#' + arrItemId[arrItemId.length - 2]).find('td:nth-child(8)').html("<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='appendItemRow(this)'><span class='glyphicon glyphicon-plus'></span></a>");
            }
            else {
                var deleted_index = arrItemId.indexOf(itemId);
                arrItemId.splice(deleted_index, 1);
                for (var i = 0; i < arrItemId.length; i++) {
                    //$('tr#' + arrItemId[i] + ' td:nth-child(1)').html(Number(i) + 1);
                    $('tr#' + arrItemId[i] + ' td:nth-child(1)').html('<label class="ordering_number">' + Number(Number(i) + 1) + '</label>');
                }
            }
        }

        function remove_attachment_row(row) {
            var index = row.parentNode.parentNode.rowIndex;
            document.getElementById('tableAttachment').deleteRow(index);
            var rowCount = $('#tableAttachment tr').length;
            if (rowCount == 0) {
                $("#attachment_block").empty();
                $("#attachment_block").append("" +
                    '<input type="file" class="form-control" name="attachment_reference" id="attachment_reference" style="width:300px !important;" />'
                    );
            }
        }

    </script>


    }