@model IEnumerable<BT_KimMex.Models.ItemRequestViewModel>
    @using BT_KimMex.Class;
@{
    ViewBag.Title = "RequestedList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />


<h3 class="title">Material Request List</h3>

<div class="well" style="padding:8px !important; padding-bottom:30px !important;">
    <div class="form-group">
        <label class="control-label col-md-2">Requested Date:</label>
        <div class="col-md-3">
            <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                <i class="fa fa-calendar"></i>&nbsp;
                <span></span> <i class="fa fa-caret-down"></i>
            </div>
        </div>
        <label class="control-label col-md-2">MR Status:</label>
        <div class="col-md-3">
            <select class="form-control" id="ddr_status" name="ddr_status" style="width:100% !important;">
                <option value="0">All</option>
                <option value="Pending">@ShowStatus.MRCreated</option>
                <option value="edit">@ShowStatus.MREditted</option>
                <option value="Approved">@ShowStatus.MRApproved</option>
                <option value="Completed">@ShowStatus.MRCompleted</option>
                <option value="Rejected">@ShowStatus.MRRejected</option>
                <option value="@Status.RequestCancelled">@ShowStatus.MRRequestCancelled</option>
                <option value="@Status.PendingFeedback">@ShowStatus.MRPendingFeedback</option>
                <option value="@Status.Feedbacked">@ShowStatus.MRFeedbacked</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="button" class="w3-button w3-tiny w3-blue" onclick="initialDataTable()">Filter</button>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-bordered" id="table">
        <thead>
            <tr>
                <th rowspan="2">ID</th>
                <th rowspan="2">Date</th>
                <th rowspan="2">PR No</th>
                <th rowspan="2">Project Name</th>
                <th rowspan="2">Purpost of Purchase</th>
                <th colspan="4">Status</th>
                <th rowspan="2">Action</th>
            </tr>
            <tr>
                <th>General</th>
                <th>OPO/LPO</th>
                <th>ST</th>
                <th>TW</th>
            </tr>
        </thead>
        <tbody>
            @*@{ 
                int count = 1;
                foreach (var item in Model)
                {
                    <tr>
                        <td>@count</td>
                        <td>@Convert.ToDateTime(item.created_date).ToString("dd/MM/yyyy")</td>
                        <td><a href="@Url.Action("Detail", "ItemRequest", new { id = item.ir_id })">@item.ir_no</a></td>
                        <td>@item.project_full_name</td>
                        <td>@item.purpose_description</td>
                        <td class="text-center">
                            @if (string.Compare(item.ir_status, "Pending") == 0)
                            {
                                <label class="label w3-red">@ShowStatus.MRCreated</label>
                            }
                            else if (string.Compare(item.ir_status, "Approved") == 0)
                            {
                                <label class="label w3-blue">@ShowStatus.MRApproved</label>
                            }
                            else if (string.Compare(item.ir_status, "Completed") == 0)
                            {
                                <label class="label w3-green">@item.ir_status</label>
                            }
                            else if (string.Compare(item.ir_status, "Rejected") == 0)
                            {
                                <label class="label w3-gray">@ShowStatus.MRRejected</label>
                            }
                            else if (string.Compare(item.ir_status, Status.RequestCancelled) == 0)
                            {
                                <label class="label w3-gray">@ShowStatus.MRRequestCancelled</label>
                            }
                            else if (string.Compare(item.ir_status,Status.PendingFeedback)==0) {
                                <label class="label w3-orange">@ShowStatus.MRPendingFeedback</label>
                            }
                            else if (string.Compare(item.ir_status,Status.Feedbacked)==0) {
                                <label class="label w3-orange">@ShowStatus.MRFeedbacked</label>
                            }
                            else
                            {
                                <label class="label w3-gray">@item.ir_status</label>
                            }
                        </td>
                        <td>
                            @{
                                if (string.Compare(item.po_status, ShowStatus.PRCreated) == 0 || string.Compare(item.po_status,ShowStatus.SupplierQuoteCreated)==0 || string.Compare(item.po_status,ShowStatus.QuoteCreated)==0)
                                {
                                    <label class="label w3-red">@item.po_status</label>
                                }
                                else if (string.Compare(item.po_status, ShowStatus.SupplierQuotePending) == 0)
                                {
                                    <label class="label w3-yellow">@item.po_status</label>
                                }
                                else
                                {
                                    <label class="label w3-grey">@item.po_status</label>
                                }
                            }
                        </td>
                        <td>
                            @{
                            if (string.Compare(item.st_status, ShowStatus.PRCreated) == 0|| string.Compare(item.po_status,ShowStatus.SupplierQuoteCreated)==0 || string.Compare(item.po_status,ShowStatus.QuoteCreated)==0)
                            {
                                <label class="label w3-red">@item.st_status</label>
                            }
                            else if (string.Compare(item.st_status, ShowStatus.SupplierQuotePending) == 0)
                            {
                                <label class="label w3-yellow">@item.st_status</label>
                            }
                            else
                            {
                                <label class="label w3-grey">@item.st_status</label>
                            }
                        }
                        </td>
                        <td>
                            @{
                                if (string.Compare(item.tw_status, ShowStatus.TWCreated) == 0)
                                {
                                    <label class="label w3-red">@item.tw_status</label>
                                }
                                else if (string.Compare(item.tw_status, ShowStatus.GRNPending) == 0)
                                {
                                    <label class="label w3-yellow">@item.tw_status</label>
                                }
                                else
                                {
                                    <label class="label w3-grey">@item.tw_status</label>
                                }
                            }

                        </td>

                        <td class="text-center">
                            <div class="w3-show-inline-block">
                                <div class="w3-bar">
                                    @if (string.Compare(item.ir_status, "Approved") == 0 && item.is_mr == false)
                                    {
                                        <a href="@Url.Action("CheckStockBalance","Stock",new { id = item.ir_id })" class="w3-button w3-tiny w3-orange"><i class="fa fa-check-square-o" aria-hidden="true"></i></a>
                                        if (User.IsInRole(Role.SystemAdmin) || User.IsInRole(Role.Purchaser))
                                        {
                                            <a href="@Url.Action("Create","MRCutOff",new { id = item.ir_id })" class="w3-button w3-tiny w3-red"><i class="fa fa-scissors" aria-hidden="true"></i></a>
                                        }
                                    }

                                    <a href="@Url.Action("Detail","ItemRequest",new { id = item.ir_id })" class="w3-button w3-tiny w3-green"><i class="fa fa-eye" aria-hidden="true"></i></a>
                                </div>
                            </div>
                        </td>
                    </tr>
                    count++;
                }
            }*@
        </tbody>
    </table>
</div>

@section scripts{
    
@*<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.3/moment.min.js" type="text/javascript"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script type="text/javascript">
        //$.noConflict();
        $(function () {
            var start = moment().subtract(29, 'days');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);
            $('#ddr_status').select2();
            initialDataTable();

            //$('#table').DataTable({
            //    //stateSave: true,
            //    "order": [[2, "desc"]],
            //});

        });

        function initialDataTable() {
            var t = $('#table').DataTable({
                "bDestroy": true,
                "ajax": {
                    "url": "/ItemRequest/GetMRListItemByDateRangeandStatusAJAX",
                    "type": "GET",
                    "dataType": "json",
                    "data": {
                        dateRange: $('#reportrange span').html(),
                        status: $('#ddr_status').val(),
                    }
                },
                "columns": [
                    { "data": "count" },
                    { "data": "created_at_text" },
                    {
                        "render": function (data, type, full, meta) {
                            return '<a href="/ItemRequest/Detail/' + full.ir_id + '">' + full.ir_no + '</a>';
                        }
                    },
                    { "data": "project_full_name" },
                    { "data": "purpose_description" },
                    { "data": "show_status_html" },
                    { "data": "po_status" },
                    { "data": "st_status" },
                    { "data": "tw_status" },
                    {
                        "render": function (data, type, full, meta) {
                            var btn = '';
                            if (full.ir_status, "Approved"&& full.is_mr == false)
                            {
                                btn ='<a href="/Stock/CheckStockBalance/'+ full.ir_id+'" class="w3-button w3-tiny w3-orange"><i class="fa fa-check-square-o" aria-hidden="true"></i></a>';
                                @if (User.IsInRole(Role.SystemAdmin) || User.IsInRole(Role.Purchaser))
                                {
                                    <text>
                                btn=btn+'<a href="/MRCutOff/Create/'+ full.ir_id+'" class="w3-button w3-tiny w3-red"><i class="fa fa-scissors" aria-hidden="true"></i></a>';
                                    </text>
                                }
                            }

                            btn=btn+ '<a href="/ItemRequest/Detail/' + full.ir_id + '" class="w3-button w3-tiny w3-green"><i class="fa fa-eye" aria-hidden="true"></i></a>';
                            return btn;
                        }
                    },
                ],
                "order": [[0, "asc"]],
            });
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

                

        }

    </script>
    }