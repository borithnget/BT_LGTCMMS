@model BT_KimMex.Models.BOQViewModel

@{
    ViewBag.Title = "Edit";
    ViewBag.LayoutStyle = "big";
}
<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
<style type="text/css">
    select.form-control {
        display: inline !important;
    }

    thead th {
        text-align: center !important;
        vertical-align: middle !important;
    }

</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="container">
            <h3>Edit BoQ</h3>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Date:", new { @class = "col-md-3" })
                        <label class="col-md-9" id="current_date"></label>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3">BoQ No.:</label>
                        <label class="col-md-9" id="boq_no"></label>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3">Project Name <span style="color:red;">*</span>:</label>
                        <div class="col-md-9">
                            <select class="form-control" id="project_id">
                                <option selected disabled value="">--- select project ---</option>
                            </select>
                            <a href="@Url.Action("Create","Project")" class='btn btn-default'><span class='glyphicon glyphicon-plus'></span></a>
                        </div>
                    </div>
                </div>
                <div class="col-md-6"></div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-md-4">Customer:</label>
                        <label class="col-md-8" id="customer_name"></label>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4">Customer Signatory:</label>
                        <label class="col-md-8" id="customer_signatory"></label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-md-5">Customer Project Manager:</label>
                        <label class="col-md-7" id="customer_project_manager"></label>
                    </div>
                    <div class="form-group">
                        <label class="col-md-5">Telephone:</label>
                        <label class="col-md-7" id="customer_telephone"></label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="margin:0 !important;">
            <table class="table table-bordered" id="boq_table">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Item Code</th>
                        <th>Description</th>
                        <th>Chart Account</th>
                        <th>Unit</th>
                        <th>QTY</th>
                        <th>Unit Price</th>
                        <th colspan="2">Amount</th>
                        <th>Dif. Amount</th>
                        <th>Remark</th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Attachment Reference :</label>
            <div class="col-md-10" id="attachment_block">
                @{
                    var atts = Model.attachments;

                    if (atts.Count() == 0)
                    {
                        <input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple/>
                    }
                    else
                    {
                        <table id="tableAttachment">
                            @for (int i = 0; i < atts.Count(); i++)
                            {
                                <tr>
                                    <td><a class="title @i" href="/PurchaseOrder/Download/?p=@(atts[i].attachment_id + atts[i].attachment_extension)&d=@atts[i].attachment_name">@atts[i].attachment_name</a></td>
                                    <td><a href="javascript:void(0);" class="btn btn-default delete-att title @i" data-id="@atts[i].attachment_id"><i class="fa fa-close"></i></a></td>
                                    @{ if (i == atts.Count() - 1)
                                        {
                                            <td><a href="javascript:void(0);" class="btn btn-default add-row " data-id="@atts[i].attachment_id"><i class="fa fa-plus"></i></a></td>
                                        }
                                    }
                                </tr>
                                        }
                        </table>

                                        }
                }

            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" id="btnSave" class="btn btn-default" />
                <a href="@Url.Action("Index","BOQ",new { status = "All" })" class="btn btn-default">Cancel</a>
            </div>
        </div>
    </div>
}

@section Scripts{
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/jquery-ui.min.js"></script>
    <script type="text/javascript">
        $(function () {
            var arrDeletedAttachment = [];
            var boq_id = GetURLParameter();
            var project_id = "";
            var arr_boq_detail1 = new Array();
            var arr_boq_detail2 = new Array();
            var arr_boq_detail3 = new Array();

            initail_boq(boq_id);
            InitialProjectDropdownList('@Model.project_id');
            //$('#project_id').val('@Model.project_id');
            $('#project_id').change(function () {
                project_id = $(this).val();
                if (project_id != null || project_id != "") {
                    $.ajax({
                        url: '/Project/ProjectInfoDetail',
                        type: "get",
                        dataType: "json",
                        async: false,
                        data: { id: project_id },
                        success: function (data) {
                            $.each(data, function (index, item) {
                                project_short_name = item.project_short_name;
                                $('#customer_name').text(item.customer_name);
                                $('#customer_signatory').text(item.cutomer_signatory == null ? '' : item.cutomer_signatory);
                                $('#customer_project_manager').text(item.cutomer_project_manager == null ? '' : item.cutomer_project_manager);
                                $('#customer_telephone').text(item.customer_telephone == null ? '' : item.customer_telephone);
                                initial_job_category_code(item.project_short_name);
                            });
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $('#customer_name').text('');
                            $('#customer_signatory').text('');
                            $('#customer_project_manager').text('');
                            $('#customer_telephone').text('');
                            alert(textStatus);
                        }
                    });
                }
            });

            $('.delete-att').click(function (e) {
                e.preventDefault();
                var att_id = $(this).data('id');
                arrDeletedAttachment.push(att_id);
                var index = $(this)[0].parentNode.parentNode.rowIndex;
                document.getElementById('tableAttachment').deleteRow(index);
                var rowCount = $('#tableAttachment tr').length;
                if (rowCount == 0) {
                    $("#attachment_block").empty();
                    $("#attachment_block").append("" +
                        '<input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />'
                        );
                }
            });

            $('.add-row').click(function (e) {
                e.preventDefault();
                $('#tableAttachment').append("" +
                   "<tr>" +
                        '<td><input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple /></td>' +
                        '<td><a href="javascript:void(0);" class="btn btn-default delete-att" onclick="removeAttachmentRow(this)">X</a></td>' +
                   "</tr>"
                 );
                $(this).remove();
            });
            function enable_submit_button(is_submit) {
                if (is_submit) {
                    $('#btnSave').text("Submitting...");
                    $('#btnSave').attr('disabled', true);
                } else {
                    $('#btnSave').text("Save");
                    $('#btnSave').attr('disabled', false);
                }
            }
            $('#btnSave').click(function () {
                enable_submit_button(true);
                var item_element = {};
                var type_element = {};
                var job_element = {};

                var boq_details_3 = [];
                var boq_details_2 = [];
                var boq_details_1 = [];
                var boq_no = $('#boq_no').text();
                var project_id = $('#project_id').val();

                var item_id = $('.product_id');
                var item_qty = $('.item_qty');
                var item_unit_price = $('.item_unit_price');

                var type_id = $('.item_type_id');
                var type_amount = $('.type_amount');
                var type_remark = $('.remark');
                var job_id = $('.job_id');
                var job_category_id = $('.job_category_description');
                var job_category_code = $('.job_category_code');
                var job_category_amount = $('.job_category_estimate_amount');
                //var job_category_amount = $('.job_category_amount');
                var job_category_remark = $('.job_remark');
                var arrAttachment = [];

                if (project_id == null || project_id == "" || project_id == undefined) {
                    alert('Project is required!');
                    return;
                }

                for (var i = 0; i < item_id.length; i++) {
                    item_element = {};
                    var letter = (item_id[i].id).replace(new RegExp('[0-9]'), '').substr(0, 1);
                    var ind = (item_id[i].id).indexOf(letter);
                    var id = (item_id[i].id).substr(0, Number(ind + 1));
                    item_element.item_id = item_id[i].value;
                    item_element.item_qty = item_qty[i].value;
                    item_element.item_unit_price = item_unit_price[i].value;
                    item_element.type_group = id;
                    boq_details_3.push(item_element);
                }

                for (var i = 0; i < type_id.length; i++) {
                    type_element = {};
                    var id = type_id[i].id;
                    var type_group = id.replace(new RegExp('[0-9]'), '');
                    var job_group = id.replace(/[^\d]/g, '');
                    type_element.item_type_id = type_id[i].value;
                    type_element.job_group = job_group;
                    type_element.type_group = id;
                    if ($(type_amount[i]).is('label')) {
                        type_element.amount = $(type_amount[i]).text();
                    }
                    else {
                        type_element.amount = type_amount[i].value;
                    }
                    type_element.remark = type_remark[i].value;
                    type_element.boq_details_3 = boq_details_3;
                    boq_details_2.push(type_element);
                }

                for (var i = 0; i < job_id.length; i++) {
                    job_element = {};
                    var job_group = job_id[i].id.replace(/[^\d]/g, '');
                    job_element.job_category_id = job_category_id[i].value;
                    job_element.job_category_code = $(job_category_code[i]).text();
                    if ($(job_category_amount[i]).is('label')) {
                        job_element.amount = $(job_category_amount[i]).text();
                    }
                    else {
                        job_element.amount = $(job_category_amount[i]).val();
                    }
                    if ($(job_category_remark[i]).is('label')) {
                        job_element.remark = $(job_category_remark[i]).text();
                    }
                    else {
                        job_element.remark = job_category_remark[i].value;
                    }
                    job_element.job_group = job_group;
                    job_element.boq_details_2 = boq_details_2;
                    boq_details_1.push(job_element);
                }

                if (arrDeletedAttachment.length > 0) {
                    for (var i = 0; i < arrDeletedAttachment.length; i++) {
                        var attID = arrDeletedAttachment[i];
                        $.ajax({
                            url: '@Url.Action("DeleteAttachment", "BOQ")',
                            type: 'POST',
                            data: { id: attID }
                        }).done(function (data) {
                            if (data.Result == "ok") {

                            }
                            else if (data.Result.Message) {
                                alert(data.Result.Message);
                            }
                        }).fail(function () {
                            alert("There is something wrong. Please try again.");
                        })
                    }
                }

                var form_data = new FormData();
                var file_input = document.getElementById('attachment_reference');
                if (file_input != undefined) {
                    if (file_input.files.length > 0) {
                        for (var i = 0; i < file_input.files.length; i++) {
                            form_data = new FormData();
                            form_data.append(file_input.files[i].name, file_input.files[i]);
                            $.ajax({
                                url: '@Url.Action("UploadAttachment","BOQ")',
                                type: "POST",
                                data: form_data,
                                async: false,
                                cache: false,
                                contentType: false,
                                processData: false,
                                success: function (da) {
                                    if (da.result == "success")
                                        arrAttachment.push(da.attachment_id);
                                },
                                error: function (xhr, error, status) {
                                    console.log(error, status);
                                }
                            });
                        }
                    } 
                }

                var model = {
                    boq_id:boq_id,
                    boq_no: boq_no,
                    project_id: project_id,
                    boq_details_1: boq_details_1,
                };

                $.ajax({
                    url: "@Url.Action("DeleteBOQDetail", "BOQ")",
                    type: "post",
                    dataType: "json",
                    async:false,
                    data: { boq_details1: arr_boq_detail1, boq_details2: arr_boq_detail2, boq_details3: arr_boq_detail3 },
                    success: function (da) {
                        if (da.message == "success") {
                            $.ajax({
                                url: "@Url.Action("EditBOQ", "BOQ")",
                                type: "post",
                                dataType: "json",
                                async: false,
                                data: { model: model, boq_detail1: boq_details_1, boq_detail2: boq_details_2, boq_detail3: boq_details_3, Attachment: arrAttachment },
                                success: function (da) {
                                    if (da.message == "success") {
                                        $.notify('Your data has been updated!', { className: 'success' });
                                        window.location.href = '@Url.Action("Index","BOQ")';
                                    } else {
                                        $.notify('Your data is error while updating!', { className: 'error' });
                                    }
                                },
                                error: function (err) {
                                    $.notify('Your data is error while updating!', { className: 'error' });
                                }
                            });
                        }
                        else {
                            alert(da.errorText);
                        }
                    },
                    error: function (err) {
                        alert(err.errorText);
                        $.notify('Your data is error while updating!', { className: 'error' });
                    }
                });
            });

            Number.prototype.formatMoney = function (c, d, t) {
                var n = this,
                c = isNaN(c = Math.abs(c)) ? 2 : c,
                d = d == undefined ? "." : d,
                t = t == undefined ? "," : t,
                s = n < 0 ? "-" : "",
                i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
                j = (j = i.length) > 3 ? j % 3 : 0;
                return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
            };

            function initail_boq(boq_id) {
                $.ajax({
                    url:"@Url.Action("BOQViewDetail", "BOQ")",
                    type: "get",
                    dataType: "json",
                    data: { id: boq_id },
                    //async:false,
                    success: function (da) {
                        var boq = da.boq;
                        var boq_details_1 = da.boq_details_1;
                        var boq_details_2 = da.boq_details_2;
                        var boq_details_3 = da.boq_details_3;
                        var count_detail_3 = 1;
                        var total_amount = 0;
                        var total_estimate_amount = 0;

                        if (boq) {
                            project_id = boq.project_id;
                            $('#current_date').text(getFormattedDateMMDDYYYY(new Date(parseInt((boq.created_date).replace("/Date(", "").replace(")/", ""), 10))));
                            $('#boq_no').text(boq.boq_no);
                            //$('#project_id').val(boq.project_id);
                            $('#customer_name').text(boq.customer_name == null ? " " : boq.customer_name);
                            $('#customer_signatory').text(boq.cutomer_signatory == null ? '' : boq.cutomer_signatory);
                            $('#customer_project_manager').text(boq.cutomer_project_manager == null ? '' : boq.cutomer_project_manager);
                            $('#customer_telephone').text(boq.customer_telephone == null ? '' : boq.customer_telephone);
                        }

                        $.each(boq_details_1, function (index, item) {
                            var total_job_category_amount = 0;
                            var job_no = Number(index + 1);
                            var job_category_name_ele = "<select class='form-control job_category_description'><option selected disabled value=''>Select job category</option></select>";
                            //var job_amount_ele = (item.remark == null) ? "<label class='job_category_amount'>" + parseFloat(item.amount).toFixed(2) + "</label>" : "<input type='number' class='form-control job_category_amount' value='" + parseFloat(item.amount).toFixed(2) + "' onchange='calculate_total_amount_by_job_category()'/>";
                            var job_amount_ele = "<input type='number' class='form-control job_category_estimate_amount' value='" + parseFloat(item.amount).toFixed(2) + "' onchange='calculate_total_estimate_amount_by_job_category(this)'/>";
                            var job_remark_ele = (item.remark == null) ? "<label class='job_remark'></label>" : "<select class='form-control job_remark'>" +
                                                        "<option selected disabled value=''>Select remark</option>" +
                                                        "<option value='In Source'>In Source</option>" +
                                                        "<option value='Out Source'>Out Source</option>" +
                                                    "</select>";
                            var job_btn_add = (Number(boq_details_1.length - 1) == index) ? "<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_job_category_row(this)'><i class='fa fa-plus-circle' aria-hidden='true'></i></a>":"";
                            var type_btn_add = (item.remark != null) ? "<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,true)'><i class='fa fa-plus-square' aria-hidden='true'></i></a>" : "";
                            arr_boq_detail1.push(item.boq_detail1_id);
                            $('#boq_table').append("" +
                                    "<tr class='job"+job_no+"' id='job"+job_no+"'>"+
                                        //"<td>" + String.fromCharCode(8544 + Number(index)) + "</td>" +
                                        "<td>" + convertNumberToRoman(Number(Number(index) + 1)) + "</td>" +
                                        "<td><input type='hidden' class='job_id' id='j" + job_no + "'/><label class='job_category_code'>" + item.job_category_code + "</lable></td>" +
                                        "<td colspan='5'>" + job_category_name_ele + "</td>" +
                                        "<td>" + job_amount_ele + "</td>" +
                                        "<td><label class='job_category_amount'></label></td>" +
                                        "<td><label class='job_category_dif_amount'></label></td>" +
                                        "<td>" + job_remark_ele + "</td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td>" + type_btn_add + "</td>" +
                                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_job_category_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                                        "<td>" + job_btn_add + "</td>" +
                                    "</tr>"
                                );
                            InitialJobCategoriesDropdownList('job' + job_no, item.job_category_id);
                            $('tr#job' + job_no).find('select.job_remark').val(item.remark);

                            $.each(boq_details_2, function (index1, item1) {
                                arr_boq_detail2.push(item1.boq_detail2_id);

                                if (item.job_group == item1.job_group) {
                                    var count_sub_item = 0;
                                    var type_no = (item1.type_group).replace(/\d+|^\s+|\s+$/g, '');
                                    var type_btn_add = (Number(boq_details_2.length - 1) == index1) ? "<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,false)'><i class='fa fa-plus-square' aria-hidden='true'></i></a>" : "";
                                    $('#boq_table').append("" +
                                        "<tr class='type"+job_no+type_no+" job"+job_no+"' id='type"+job_no+type_no+"'>" +
                                            "<td style='padding-left:25px !important;'>" + type_no + "</td>" +
                                            "<td><input type='hidden' class='item_type_id' id='" + job_no + type_no + "' value='" + item1.item_type_id + "'/><input type='text' class='form-control item_type_code' onchange='get_item_type_by_code(this)' value='" + item1.p_category_code + "'/></td>" +
                                            "<td><input type='text' class='form-control item_type_description' onchange='get_item_type_by_description(this)' value='" + item1.p_category_name + "'/></td>" +
                                            "<td colspan='4'><label class='chat-account'>" + item1.chart_account + "</label></td>" +
                                            "<td></td>" +
                                            "<td></td>" +
                                            "<td></td>" +
                                            "<td>" +
                                                "<select class='form-control remark' onchange='InitialRemark(this)'>" +
                                                    "<option selected disabled value=''>Select remark</option>" +
                                                    "<option value='In Source'>In Source</option>" +
                                                    "<option value='Out Source'>Out Source</option>" +
                                                "</select>" +
                                            "</td>" +
                                            "<td></td>" +
                                            "<td></td>" +
                                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_type_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                                            "<td>" + type_btn_add + "</td>" +
                                            "<td></td>" +
                                            "<td></td>" +
                                        "</tr>"
                                    );
                                    $('tr#type' + job_no + type_no).find('select.remark').val(item1.remark);

                                    count_detail_3 = 1;
                                    $.each(boq_details_3, function (index2, item2) {

                                        arr_boq_detail3.push(item2.boq_detail3_id);
                                        if (item1.type_group == item2.type_group) {
                                            count_sub_item++;
                                            var item_no = Number(count_detail_3);
                                            var item_btn_add = (Number(boq_details_3.length - 1) == index2) ? "<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_item_row(this)'><span class='glyphicon glyphicon-plus'></span></a>" : "";
                                            $('#boq_table').append("" +
                                                "<tr class='type" + job_no + type_no + " job" + job_no + "' id='item" + job_no + type_no + item_no + "'>" +
                                                    "<td style='padding-left:50px !important;'>" + Number(count_detail_3) + "</td>" +
                                                    "<td><input type='hidden' class='product_id' id='" + job_no + type_no + item_no + "' value='" + item2.item_id + "' /><input type='text' class='form-control item_code' onchange='initial_item_by_item_code(this)' value='" + item2.product_code + "'/></td>" +
                                                    "<td><label class='item_description'>" + item2.product_name + "</label></td>" +
                                                    "<td></td>" +
                                                    "<td><label class='item_unit'>" + item2.product_unit + "</label></td>" +
                                                    "<td><input type='number' class='form-control item_qty' value='" + parseFloat(item2.item_qty).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                                                    "<td><input type='number' class='form-control item_unit_price' value='" + parseFloat(item2.item_unit_price).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                                                    "<td></td>" +
                                                    "<td><label class='item_amount'>" + Number(Number(item2.item_qty) * Number(item2.item_unit_price)).formatMoney(2) + "</lable></td>" +
                                                    "<td></td>" +
                                                    "<td><label class='item_remark'>" + item1.remark + "</label></td>" +
                                                    "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_item_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                                                    "<td>" + item_btn_add + "</td>" +
                                                    "<td></td>" +
                                                    "<td></td>" +
                                                    "<td></td>" +
                                                    "<td></td>" +
                                                "</tr>"
                                            );
                                            count_detail_3++;
                                        }
                                        else
                                            count_detail_3 = 1;
                                    });
                                    if (count_sub_item > 0) {
                                        $('tr#type' + job_no + type_no).find('td:nth-child(6)').html('<label class="type_amount">' + parseFloat(item1.amount).toFixed(2) + '</label>');
                                    } else {
                                        $('tr#type' + job_no + type_no).find("td:nth-child(6)").html("<input type='number' class='form-control type_amount' value='" + parseFloat(item1.amount).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/>");
                                    }

                                    total_job_category_amount = Number(total_job_category_amount) + Number(item1.amount);

                                }
                            });
                            total_amount = Number(total_amount) + Number(total_job_category_amount);
                            total_estimate_amount = Number(total_estimate_amount) + Number(item.amount);
                            $('#boq_table tr#job' + job_no).find('label.job_category_amount').text(Number(total_job_category_amount).formatMoney(2));
                            $('#boq_table tr#job' + job_no).find('label.job_category_dif_amount').text(Number(item.amount - total_job_category_amount).formatMoney(2));
                        });
                        arr_boq_detail1 = Array.from(new Set(arr_boq_detail1));
                        arr_boq_detail2 = Array.from(new Set(arr_boq_detail2));
                        arr_boq_detail3 = Array.from(new Set(arr_boq_detail3));
                        initail_table_footer(total_estimate_amount,total_amount);
                    },
                    error: function (err) {
                        alert("Fail to initial boq:"+err.statusText);
                    }
                });
            }

        });
    </script>
    <script type="text/javascript">

        var InitialJobCategoriesDropdownList=function(row_id,job_category_id) {
            $.ajax({
                url: '/JobCategory/JobCategoriesDropdownList',
                type: "get",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            $('#boq_table tbody tr#'+row_id).find('select.job_category_description').append("" +
                                    "<option value='" + item1.j_category_id + "'>" + item1.j_category_name + "</option>"
                                );
                            $('#boq_table tbody tr#' + row_id).find('select.job_category_description').val(job_category_id);
                        });
                    });
                },
                error: function (data) {
                    alert('fail');
                }
            });
        }
        var InitialProjectDropdownList, InitialJobCategories;
        var initial_job_category_row, initial_item_type_row, initial_item_row, append_job_category_row;
        var initail_table_footer;
        var category_code, category_description;

        /* start initial control */
        InitialProjectDropdownList = function (project_id) {
            $.ajax({
                url: '/Project/ProjectDropdownList',
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#project_id').empty();
                    $('#project_id').append("" +
                        "<option selected disabled>--- select Project ---</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            $('#project_id').append("" +
                                    "<option value='" + item1.project_id + "'>" + item1.project_full_name + "</option>"
                                );
                        });
                    });
                    if (project_id != undefined || project_id != null || project_id != "")
                        $('#project_id').val(project_id);

                },
                error: function (data) {
                    alert('fail');
                }
            });
        }

        InitialJobCategories = function (ind, first) {
            $.ajax({
                url: '/JobCategory/JobCategoriesDropdownList',
                type: "get",
                dataType: "json",
                success: function (data) {
                    if (first == undefined || first == null || first == "") {
                        $.each(data, function (index, item) {
                            $.each(item, function (index1, item1) {
                                $('#boq_table tbody tr').eq(ind + 1).find('select.job_category_description').append("" +
                                        "<option value='" + item1.j_category_id + "'>" + item1.j_category_name + "</option>"
                                    );
                            });
                        });
                    } else {
                        $.each(data, function (index, item) {
                            $.each(item, function (index1, item1) {
                                $('#boq_table tbody tr:first-child').find('select.job_category_description').append("" +
                                        "<option value='" + item1.j_category_id + "'>" + item1.j_category_name + "</option>"
                                    );
                            });
                        });
                    }
                },
                error: function (data) {
                    alert('fail');
                }
            });
        }

        /*  end initial control  */

        initail_table_footer = function (estimate_amount,amount) {
            $('#boq_table tbody').find('tr:last-child').after(
                    '<tr>' +
                        '<td colspan="7" style="text-align:right !important;"><label class="control-label">Grand Total</label></td>' +
                        '<td><label class="control-label" id="est_sub_total">' + Number(estimate_amount).formatMoney(2) + '</label></td>' +
                        '<td><label class="control-label" id="sub_total">' + Number(amount).formatMoney(2) + '</label></td>' +
                        '<td><label class="control-label" id="dif_sub_total">' + Number(estimate_amount - amount).formatMoney(2) + '</label></td>' +
                        '<td></td>' +
                        '<td></td>' +
                        '<td></td>' +
                        '<td></td>' +
                        '<td></td>' +
                        '<td></td>' +
                        '<td></td>' +
                    '</tr>'
                );
        }

        initial_job_category_row = function (index, row_no, id_no, job_category_code, first) {
            var roman_number = String.fromCharCode(8543 + Number(row_no));
            if (job_category_code == undefined)
                job_category_code = "";
            if (first == undefined || first == null || first == "") {
                $('#boq_table tbody').find('tr').eq(index).after(
                    "<tr class='job" + id_no + "' id='job" + id_no + "'>" +
                        "<td>" + roman_number + "</td>" +
                        "<td><input type='hidden' class='job_id' id='j" + id_no + "'/><label class='job_category_code'>" + job_category_code + "</label></td>" +
                        "<td colspan='5'><select class='form-control job_category_description'><option selected disabled value=''>Select job category</option></select></td>" +
                        "<td><input type='number' class='form-control job_category_estimate_amount' value='" + (0).formatMoney(2) + "' onchange='calculate_total_estimate_amount_by_job_category(this)'/></td>" +
                        "<td><label class='job_category_amount'>" + (0).formatMoney(2) + "</label></td>" + //added on 
                        "<td><label class='job_category_dif_amount'>" + (0).formatMoney(2) + "</label></td>" +
                        "<td>" +
                            "<select class='form-control job_remark'>" +
                                "<option selected disabled value=''>Select remark</option>" +
                                "<option value='In Source'>In Source</option>" +
                                "<option value='Out Source'>Out Source</option>" +
                            "</select>" +
                        "</td>" +
                        "<td></td>" +
                        "<td></td>" +
                        "<td></td>" +
                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,true)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_job_category_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_job_category_row(this)'><i class='fa fa-plus-circle' aria-hidden='true'></i></a></td>" +
                    "</tr>"
                );
            } else {
                $('#boq_table').append(
                    "<tr class='job" + id_no + "' id='job" + id_no + "'>" +
                        "<td>" + roman_number + "</td>" +
                        "<td><input type='hidden' class='job_id' id='j" + id_no + "'/><label class='job_category_code'>" + job_category_code + "</label></td>" +
                        "<td colspan='5'><select class='form-control job_category_description'><option selected disabled value=''>Select job category</option></select></td>" +
                        "<td><input type='number' class='form-control job_category_estimate_amount' value='" + (0).formatMoney(2) + "' onchange='calculate_total_estimate_amount_by_job_category(this)'/></td>" +
                        "<td><label class='job_category_amount'>" + (0).formatMoney(2) + "</label></td>" +
                        "<td><label class='job_category_dif_amount'>" + (0).formatMoney(2) + "</label></td>" +
                        "<td>" +
                            "<select class='form-control job_remark'>" +
                                "<option selected disabled value=''>Select remark</option>" +
                                "<option value='In Source'>In Source</option>" +
                                "<option value='Out Source'>Out Source</option>" +
                            "</select>" +
                        "</td>" +
                        "<td></td>" +
                        "<td></td>" +
                        "<td></td>" +
                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,true)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_job_category_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_job_category_row(this)'><i class='fa fa-plus-circle' aria-hidden='true'></i></a></td>" +
                    "</tr>"
                );
            }
            InitialJobCategories(index, first);
        }

        //initial_item_type_row=function(index, row_no, type_no, row_letter, first) {
        //    if (first == undefined || first == null || first == "") {
        //        $('#boq_table tbody').find('tr').eq(index + 1).after("" +
        //                "<tr class='type" + row_no + type_no + " job" + row_no + "' id='type" + row_no + type_no + "'>" +
        //                    "<td style='padding-left:25px !important;'><input type='hidden' class='item_type_id' id='" + row_no + type_no + "'>" + row_letter + "</td>" +
        //                    "<td><input type='text' class='form-control item_type_code' id='itemType"+row_no+type_no+"' onfocus='get_item_type_by_code(this)'/></td>" +
        //                    "<td><input type='text' class='form-control item_type_description' onchange='get_item_type_by_description(this)'/></td>" +
        //                    "<td colspan='4'><label class='chart-account'></label></td>" +
        //                    "<td><input type='number' class='form-control type_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/></td>" +
        //                    "<td>" +
        //                        "<select class='form-control remark' onchange='InitialRemark(this)'>" +
        //                            "<option selected disabled value=''>Select remark</option>" +
        //                            "<option value='In Source'>In Source</option>" +
        //                            "<option value='Out Source'>Out Source</option>" +
        //                        "</select>" +
        //                    "</td>" +
        //                    "<td></td>" +
        //                    "<td></td>" +
        //                    "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_type_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
        //                    "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,false)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
        //                    "<td></td>" +
        //                    "<td></td>" +
        //                "</tr>"
        //            );
        //    }
        //    else if (first == "false") {
        //        $('#boq_table').find('tr').eq(index).after("" +
        //                "<tr class='type" + row_no + type_no + " job" + row_no + "' id='type" + row_no + type_no + "'>" +
        //                    "<td style='padding-left:25px !important;'><input type='hidden' class='item_type_id' id='" + row_no + type_no + "'>" + row_letter + "</td>" +
        //                    "<td><input type='text' class='form-control item_type_code' id='itemType" + row_no + type_no + "' onfocus='get_item_type_by_code(this)'/></td>" +
        //                    "<td><input type='text' class='form-control item_type_description' onchange='get_item_type_by_description(this)'/></td>" +
        //                    "<td colspan='4'><label class='chart-account'></label></td>" +
        //                    "<td><input type='number' class='form-control type_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/></td>" +
        //                    "<td>" +
        //                        "<select class='form-control remark' onchange='InitialRemark(this)'>" +
        //                            "<option selected disabled value=''>Select remark</option>" +
        //                            "<option value='In Source'>In Source</option>" +
        //                            "<option value='Out Source'>Out Source</option>" +
        //                        "</select>" +
        //                    "</td>" +
        //                    "<td></td>" +
        //                    "<td></td>" +
        //                    "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_type_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
        //                    "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,false)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
        //                    "<td></td>" +
        //                    "<td></td>" +
        //                "</tr>"
        //            );
        //    }
        //    else {
        //        $('#boq_table').append("" +
        //                 "<tr class='type" + row_no + type_no + " job" + row_no + "' id='type" + row_no + type_no + "'>" +
        //                    "<td style='padding-left:25px !important;'><input type='hidden' class='item_type_id' id='" + row_no + type_no + "'>" + row_letter + "</td>" +
        //                    "<td><input type='text' class='form-control item_type_code' id='itemType" + row_no + type_no + "' onfocus='get_item_type_by_code(this)'/></td>" +
        //                    "<td><input type='text' class='form-control item_type_description' onchange='get_item_type_by_description(this)'/></td>" +
        //                    "<td colspan='4'><label class='chart-account'></label></td>" +
        //                    "<td><input type='number' class='form-control type_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/></td>" +
        //                    "<td>" +
        //                        "<select class='form-control remark' onchange='InitialRemark(this)'>" +
        //                            "<option selected disabled value=''>Select remark</option>" +
        //                            "<option value='In Source'>In Source</option>" +
        //                            "<option value='Out Source'>Out Source</option>" +
        //                        "</select>" +
        //                    "</td>" +
        //                    "<td></td>" +
        //                    "<td></td>" +
        //                    "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_type_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
        //                    "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,false)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
        //                    "<td></td>" +
        //                    "<td></td>" +
        //                "</tr>"
        //            );
        //    }
        //}

        initial_item_type_row = function (index, row_no, type_no, row_letter, first) {
            if (first == undefined || first == null || first == "") {
                $('#boq_table tbody').find('tr').eq(index + 1).after("" +
                        "<tr class='type" + row_no + type_no + " job" + row_no + "' id='type" + row_no + type_no + "'>" +
                            "<td style='padding-left:25px !important;'>" + row_letter + "</td>" +
                            "<td><input type='hidden' class='item_type_id' id='" + row_no + type_no + "'><input type='text' class='form-control item_type_code' id='itemType" + row_no + type_no + "' onfocus='get_item_type_by_code(this)'/></td>" +
                            "<td><input type='text' class='form-control item_type_description' onchange='get_item_type_by_description(this)'/></td>" +
                            "<td colspan='4'><label class='chart-account'></label></td>" +
                            "<td></td>" +
                            "<td><input type='number' class='form-control type_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/></td>" +
                            "<td></td>" +
                            "<td>" +
                                "<select class='form-control remark' onchange='InitialRemark(this)'>" +
                                    "<option selected disabled value=''>Select remark</option>" +
                                    "<option value='In Source'>In Source</option>" +
                                    "<option value='Out Source'>Out Source</option>" +
                                "</select>" +
                            "</td>" +
                            "<td></td>" +
                            "<td></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_type_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,false)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
                            "<td></td>" +
                            "<td></td>" +
                        "</tr>"
                    );
            }
            else if (first == "false") {
                $('#boq_table').find('tr').eq(index).after("" +
                        "<tr class='type" + row_no + type_no + " job" + row_no + "' id='type" + row_no + type_no + "'>" +
                            "<td style='padding-left:25px !important;'>" + row_letter + "</td>" +
                            "<td><input type='hidden' class='item_type_id' id='" + row_no + type_no + "'><input type='text' class='form-control item_type_code' id='itemType" + row_no + type_no + "' onfocus='get_item_type_by_code(this)'/></td>" +
                            "<td><input type='text' class='form-control item_type_description' onchange='get_item_type_by_description(this)'/></td>" +
                            "<td colspan='4'><label class='chart-account'></label></td>" +
                            "<td></td>" +
                            "<td><input type='number' class='form-control type_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/></td>" +
                            "<td></td>" +
                            "<td>" +
                                "<select class='form-control remark' onchange='InitialRemark(this)'>" +
                                    "<option selected disabled value=''>Select remark</option>" +
                                    "<option value='In Source'>In Source</option>" +
                                    "<option value='Out Source'>Out Source</option>" +
                                "</select>" +
                            "</td>" +
                            "<td></td>" +
                            "<td></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_type_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,false)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
                            "<td></td>" +
                            "<td></td>" +
                        "</tr>"
                    );
            }
            else {
                $('#boq_table').append("" +
                         "<tr class='type" + row_no + type_no + " job" + row_no + "' id='type" + row_no + type_no + "'>" +
                            "<td style='padding-left:25px !important;'>" + row_letter + "</td>" +
                            "<td><input type='hidden' class='item_type_id' id='" + row_no + type_no + "'><input type='text' class='form-control item_type_code' id='itemType" + row_no + type_no + "' onfocus='get_item_type_by_code(this)'/></td>" +
                            "<td><input type='text' class='form-control item_type_description' onchange='get_item_type_by_description(this)'/></td>" +
                            "<td colspan='4'><label class='chart-account'></label></td>" +
                            "<td></td>" +
                            "<td><input type='number' class='form-control type_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/></td>" +
                            "<td></td>" +
                            "<td>" +
                                "<select class='form-control remark' onchange='InitialRemark(this)'>" +
                                    "<option selected disabled value=''>Select remark</option>" +
                                    "<option value='In Source'>In Source</option>" +
                                    "<option value='Out Source'>Out Source</option>" +
                                "</select>" +
                            "</td>" +
                            "<td></td>" +
                            "<td></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_type_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,false)'><i class='fa fa-plus-square' aria-hidden='true'></i></a></td>" +
                            "<td></td>" +
                            "<td></td>" +
                        "</tr>"
                    );
            }
        }

        initial_item_row = function (index, row_no, type_no, item_no, row_number, first, remark) {
            if (first == undefined || first == null || first == "" || first == "false") {
                $('#boq_table').find('tr').eq(index).after("" +
                        "<tr class='type" + row_no + type_no + " job" + row_no + "' id='item" + row_no + type_no + item_no + "'>" +
                            "<td style='padding-left:50px !important;'>" + row_number + "</td>" +
                            "<td><input type='hidden' class='product_id' id='" + row_no + type_no + item_no + "' /><input type='text' class='form-control item_code' onchange='initial_item_by_item_code(this)'/></td>" +
                            "<td><label class='item_description'></label></td>" +
                            "<td></td>" +
                            "<td><label class='item_unit'></label></td>" +
                            "<td><input type='number' class='form-control item_qty' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                            "<td><input type='number' class='form-control item_unit_price' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                            "<td></td>" +
                            "<td><label class='item_amount'>" + parseFloat(0).toFixed(2) + "</lable></td>" +
                            "<td></td>" +
                            "<td><label class='item_remark'>" + remark + "</label></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_item_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_item_row(this)'><span class='glyphicon glyphicon-plus'></span></a></td>" +
                            "<td></td>" +
                            "<td></td>" +
                            "<td></td>" +
                            "<td></td>" +
                        "</tr>"
                    );
            } else {
                $('#boq_table tbody').append("" +
                        "<tr class='type" + row_no + type_no + " job" + row_no + "' id='item" + row_no + type_no + item_no + "'>" +
                            "<td style='padding-left:50px !important;'>" + row_number + "</td>" +
                            "<td><input type='hidden' class='product_id' id='" + row_no + type_no + item_no + "' /><input type='text' class='form-control item_code' onchange='initial_item_by_item_code(this)'/></td>" +
                            "<td><label class='item_description'></label></td>" +
                            "<td></td>" +
                            "<td><label class='item_unit'></label></td>" +
                            "<td><input type='number' class='form-control item_qty' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                            "<td><input type='number' class='form-control item_unit_price' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                            "<td></td>" +
                            "<td><label class='item_amount'>" + parseFloat(0).toFixed(2) + "</lable></td>" +
                            "<td></td>" +
                            "<td><label class='item_remark'>" + remark + "</label></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_item_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_item_row(this)'><span class='glyphicon glyphicon-plus'></span></a></td>" +
                            "<td></td>" +
                            "<td></td>" +
                            "<td></td>" +
                            "<td></td>" +
                        "</tr>"
                    );
            }
        }

        append_job_category_row = function (row) {
            var job_category_code;
            var index = row.parentNode.parentNode.rowIndex;
            var count_table_row = $('#boq_table tbody tr').length;
            var j_category_code = $('#boq_table tr').eq(index).find('label.job_category_code').text();
            if (j_category_code == null || j_category_code == "") {
                job_category_code = "";
            } else {
                var old_j_catagory_code = j_category_code.split('-');
                var code_number = Number(old_j_catagory_code[old_j_catagory_code.length - 1]) + 1;
                var j_category_last_split = (code_number.toString().length == 1) ? "00" + code_number : (code_number.toString().length == 2) ? "0" + code_number : code_number;
                job_category_code = old_j_catagory_code[0] + "-" + old_j_catagory_code[1] + "-" + j_category_last_split;
            }
            var arr_job_id = new Array();
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#boq_table tr').eq(i).attr('id');
                if (id != undefined && id.substr(0, 3) == "job")
                    arr_job_id.push(id);
            }
            var id_no = arr_job_id[arr_job_id.length - 1];
            id_no = Number(id_no.substr(id_no.length - 1, 1)) + 1;
            var no = Number(arr_job_id.length + 1);
            ind = Number(count_table_row) - 2;
            initial_job_category_row(ind, no, id_no, job_category_code);
            $('#boq_table tr td:nth-child(13)').eq(index - 1).html('');
        }

        function remove_job_category_row(row) {
            var arr_job_id = new Array();
            var index = row.parentNode.parentNode.rowIndex;
            var job_class = $('#boq_table tr').eq(index).attr('class');
            var job_id = $('#boq_table tr').eq(index).attr('id');
            var job_class_row = $('.' + job_class);
            var count_job_class_row = job_class_row.length;
            var is_last_child = $('#boq_table tbody tr td:nth-child(13)').eq(index - 1).find('a').length == 0 ? false : true;
            var count_table_row = $('#boq_table tbody tr').length;
            var j_category_code = $('#boq_table tr').eq(index).find('label.job_category_code').text();
            var old_j_catagory_code = j_category_code.split('-');
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#boq_table tr').eq(i).attr('id');
                if (id != undefined && id.substr(0, 3) == "job")
                    arr_job_id.push(id);
            }
            if (arr_job_id.length > 1) {

                for (var i = 0; i < count_job_class_row; i++) {
                    document.getElementById('boq_table').deleteRow(index);
                }
                if (is_last_child) {
                    $('#boq_table tbody tr#' + arr_job_id[arr_job_id.length - 2] + ' td:nth-child(13)').html("<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_job_category_row(this)'><span class='glyphicon glyphicon-plus'></span></a>");
                }
                else {
                    var deleted_index = arr_job_id.indexOf(job_id);
                    arr_job_id.splice(deleted_index, 1);
                    for (var i = 0; i < arr_job_id.length; i++) {
                        var roman_number = String.fromCharCode(8544 + Number(i));
                        $('tr#' + arr_job_id[i] + ' td:first-child').html(roman_number);
                    }
                }
            }
            calculate_total_amount_by_job_category();
            calculate_total_estimate_amount_by_job_category();
            initial_job_category_code(old_j_catagory_code[1]);
        }

        function append_type_row(row, is_job) {
            var index = row.parentNode.parentNode.rowIndex;
            var type_class, count_type_class, job_no, type_old_letter, type_new_letter, new_index, row_letter;
            if (is_job) {
                type_class = $('#boq_table tr').eq(index).attr('class');
                job_no = type_class.replace(/[^\d]/g, '');
                row_letter = type_new_letter = "A";
                new_index = index;
            }
            else {
                row_letter = $('#boq_table tr').eq(index).find('td:first-child').text();
                row_letter = String.fromCharCode(Number(row_letter.charCodeAt(0)) + 1);
                type_class = $('#boq_table tr').eq(index).attr('class').split(' ');
                count_type_class = $('.' + type_class[0]).length;
                job_no = type_class[0].replace(/[^\d]/g, '');
                type_old_letter = type_class[0].substr(type_class[0].length - 1, 1);
                type_new_letter = String.fromCharCode(Number(type_old_letter.charCodeAt(0) + 1));
                new_index = index + (count_type_class - 1);
            }
            initial_item_type_row(new_index, job_no, type_new_letter, row_letter, "false");
            if (is_job) {
                $('#boq_table tr td:nth-child(11)').eq(index - 1).html('');//add type button in job row
                //$('#boq_table tr td:nth-child(5)').eq(index - 1).html('<label class="job_category_amount">' + parseFloat(0).toFixed(2) + '</lable>');
                $('#boq_table tr td:nth-child(7)').eq(index - 1).html('<label class="job_remark"></lable>');
            }
            else
                $('#boq_table tr td:nth-child(12)').eq(index - 1).html('');
            calculate_total_amount_by_job_category();
        }

        function remove_type_row(row) {
            var arr_type_id = new Array();
            var index = row.parentNode.parentNode.rowIndex;
            var type_class_name = $('#boq_table tr').eq(index).attr('class').split(' ');
            var type_id_name = $('#boq_table tr').eq(index).attr('id');
            var type_class_ele = $('.' + type_class_name[0]);
            var count_type_class_row = type_class_ele.length;
            var job_no = type_class_name[0].replace(/[^\d]/g, '');
            var is_last_child = $('#boq_table tbody tr td:nth-child(12)').eq(index - 1).find('a').length == 0 ? false : true;
            var count_table_row = $('#boq_table tbody tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#boq_table tr').eq(i).attr('id');
                if (id != undefined && id.substr(0, 5) == "type" + job_no)
                    arr_type_id.push(id);
            }
            for (var i = 0; i < count_type_class_row; i++) {
                document.getElementById('boq_table').deleteRow(index);
            }
            if (arr_type_id.length == 1) {
                //$('#boq_table tbody tr#' + type_class_name[1] + ' td:nth-child(4)').html(
                //        "<input type='number' class='form-control job_category_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_job_category()'/>"
                //    );
                $('#boq_table tbody tr#' + type_class_name[1] + ' td:nth-child(7)').html(
                            "<select class='form-control job_remark'>" +
                                "<option selected disabled value=''>Select remark</option>" +
                                "<option value='In Source'>In Source</option>" +
                                "<option value='Out Source'>Out Source</option>" +
                            "</select>"
                    );
                $('#boq_table tbody tr#' + type_class_name[1] + ' td:nth-child(11)').html("<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this,true)'><span class='glyphicon glyphicon-plus'></span></a>");
            }
            else if (is_last_child) {
                $('#boq_table tbody tr#' + arr_type_id[arr_type_id.length - 2] + ' td:nth-child(12)').html("<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_type_row(this)'><span class='glyphicon glyphicon-plus'></span></a>");
                //var deleted_index = arr_type_id.indexOf(type_id_name);
                //arr_type_id.splice(deleted_index, 1);
                //for (var i = 0; i < arr_type_id.length; i++) {
                //    var letter = String.fromCharCode(Number(65 + i));
                //    $('tr#' + arr_type_id[i] + ' td:nth-child(1)').html(letter);
                //}
            }
            else {
                var deleted_index = arr_type_id.indexOf(type_id_name);
                arr_type_id.splice(deleted_index, 1);
                for (var i = 0; i < arr_type_id.length; i++) {
                    var letter = String.fromCharCode(Number(65 + i));
                    $('tr#' + arr_type_id[i] + ' td:nth-child(1)').html(letter);
                }
            }
            calculate_total_amount_by_type(row, arr_type_id, type_class_name[1]);
        }

        function append_item_row(row) {
            var index = row.parentNode.parentNode.rowIndex;
            var item_id_name = $('#boq_table tr').eq(index).attr('id');
            var type_class = $('#boq_table tr').eq(index).attr('class').split(' ');
            var count_type_class = $('.' + type_class[0]).length;
            var job_no = type_class[0].replace(/[^\d]/g, '');
            var type_old_letter = type_class[0].substr(type_class[0].length - 1, 1);
            var item_old_number = Number(item_id_name.substr(5, 5).replace(/[^\d]/g, '')) + 1;
            var remark = $('#boq_table tr').eq(index).find('label.item_remark').text();
            var row_number = $('#boq_table tr').eq(index).find('td:first-child').text();
            row_number = Number(row_number) + 1;
            initial_item_row(index, job_no, type_old_letter, item_old_number, row_number, "false", remark);
            $('#boq_table tr td:nth-child(13)').eq(index - 1).html('');
        }

        function remove_item_row(row) {
            var is_last_child;
            var arr_id = new Array();;
            var index = row.parentNode.parentNode.rowIndex;
            var Class = $('#boq_table tr').eq(index).attr('class').split(' ');
            var item_id = $('#boq_table tr').eq(index).attr('id');
            var count_item_type = $('.' + Class[0]).length;
            var remove_row = $('#boq_table tbody tr td:nth-child(13)').eq(index - 1).find('a').length;
            if (remove_row == 0)
                is_last_child = false;
            else {
                is_last_child = true;
            }
            var count_table_row = $('#boq_table tbody tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#boq_table tr').eq(i).attr('id');
                if (id != undefined && id.substr(0, 4) == "item")
                    arr_id.push(id);
            }
            document.getElementById('boq_table').deleteRow(index);
            if (count_item_type > 1) {
                if (arr_id.length == 1) {
                    $('#boq_table tbody tr#' + Class[0] + ' td:nth-child(6)').html(
                        "<input type='number' class='form-control type_amount' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_total_amount_by_type(this)'/>"
                    );
                } else {
                    if (is_last_child) {
                        $('#boq_table tr').eq(index - 1).find('td:nth-child(13)').html("<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_item_row(this)'><span class='glyphicon glyphicon-plus'></span></a>");
                    }
                }
                var deleted_index = arr_id.indexOf(item_id);
                arr_id.splice(deleted_index, 1);
                for (var i = 0; i < arr_id.length; i++) {
                    $('tr#' + arr_id[i] + ' td:nth-child(1)').html(Number(i + 1));
                }
                calculate_total_amount_by_item(index - 1, arr_id);
            }

        }

        //function get_item_type_by_code(row) {
        //    var category_id;
        //    var ind = row.parentNode.parentNode.rowIndex;
        //    var item_class = $('#boq_table tr').eq(ind).attr('class').split(' ');
        //    var row_id = $('#boq_table tr').eq(ind).find('input[type="text"].item_type_code').attr('id');
        //    category_code = $('#boq_table tr').eq(ind).find('input[type="text"].item_type_code').val();
        //    var remark = $('#boq_table tr').eq(ind).find('label.type_remark').text();


        //    function autocompleted(row_id) {
        //        $("#" + row_id).autocomplete({
        //            source: '/ProductCategory/GetProductCategoryCodes',
        //            select: function (event, ui) {
        //                //AutoCompleteSelectHandler(event, ui, ir_id, ind);
        //            }
        //        });
        //    }
        //    /*
        //    if (category_code != "") {
        //        $.ajax({
        //            url: '/ProductCategory/GetProductCategoryInfo',
        //            type: "get",
        //            dataType: "json",
        //            data: { category_code: category_code },
        //            success: function (data) {
        //                $.each(data, function (index, item) {
        //                    $('#boq_table tbody tr').eq(ind - 1).find('input[type="hidden"].item_type_id').val(item.p_category_id);
        //                    $('#boq_table tbody tr').eq(ind - 1).find('input[type="text"].item_type_description').val(item.p_category_name);
        //                    $('#boq_table tbody tr').eq(ind - 1).find('label.chart-account').text(item.chart_account == null ? "" : item.chart_account);
        //                    category_id = item.p_category_id;
        //                    initial_item_data_row(category_id, ind, item_class[0], remark);
        //                });
        //            },
        //            error: function (XMLHttpRequest, textStatus, errorThrown) {
        //                $('#boq_table tbody tr').eq(ind - 1).find('input[type="hidden"].item_type_id').val('');
        //                $('#boq_table tbody tr').eq(ind - 1).find('input[type="text"].item_type_description').val('');
        //                $('#boq_table tbody tr').eq(ind - 1).find('label.chart-account').text('');
        //                alert(textStatus);
        //            }
        //        });
        //    }
        //    */
        //}

        function get_item_type_by_code(row) {
            var category_id;
            var ind = row.parentNode.parentNode.rowIndex;
            var item_class = $('#boq_table tr').eq(ind).attr('class').split(' ');
            var row_id = $('#boq_table tr').eq(ind).find('input[type="text"].item_type_code').attr('id');
            category_code = $('#boq_table tr').eq(ind).find('input[type="text"].item_type_code').val();
            var remark = $('#boq_table tr').eq(ind).find('label.type_remark').text();

            autocompleted(row_id, ind, item_class[0], remark);

            function autocompleted(row_id, ind, item_class, remark) {
                $("#" + row_id).autocomplete({
                    source: '/ProductCategory/GetProductCategoryCodes',
                    select: function (event, ui) {
                        AutoCompleteSelectHandler(event, ui, ind, item_class, remark);
                    }
                });
            }

            function AutoCompleteSelectHandler(event, ui, ind, item_class, remark) {
                var selectedObj = ui.item;
                var item = (selectedObj.value).split(' ');
                category_id = selectedObj.id;
                category_code = item[0];
                GetItemTypeDataRow(ind, category_id, item_class, remark)
            }

            function GetItemTypeDataRow(ind, item_type_id, item_class, remark) {
                if (item_type_id != "") {
                    $.ajax({
                        url: '/ProductCategory/GetProductCategoryInfo',
                        type: "get",
                        dataType: "json",
                        async: false,
                        data: { category_id: item_type_id },
                        success: function (data) {
                            $.each(data, function (index, item) {
                                $('#boq_table tbody tr').eq(ind - 1).find('input[type="hidden"].item_type_id').val(item.p_category_id);
                                $('#boq_table tbody tr').eq(ind - 1).find('input[type="text"].item_type_code').val(item.p_category_code);
                                $('#boq_table tbody tr').eq(ind - 1).find('input[type="text"].item_type_description').val(item.p_category_name);
                                $('#boq_table tbody tr').eq(ind - 1).find('label.chart-account').text(item.chart_account == null ? "" : item.chart_account);
                                category_id = item.p_category_id;
                                initial_item_data_row(category_id, ind, item_class, remark);
                            });
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $('#boq_table tbody tr').eq(ind - 1).find('input[type="hidden"].item_type_id').val('');
                            $('#boq_table tbody tr').eq(ind - 1).find('input[type="text"].item_type_description').val('');
                            $('#boq_table tbody tr').eq(ind - 1).find('label.chart-account').text('');
                            alert(textStatus);
                        }
                    });
                }
            }

            function initial_item_data_row(category_id, row_index, item_class, remark) {
                if (category_id != "") {
                    var type_letter = item_class.substr(item_class.length - 2, 2);
                    var job_no = item_class.replace(/[^\d]/g, '');
                    var item_cls = $('.type' + type_letter);
                    var str_btn_add = "";
                    if (item_cls.length > 0) {
                        for (var i = 1; i < item_cls.length; i++) {
                            var idx = item_cls[i].rowIndex;
                            document.getElementById('boq_table').deleteRow(idx);
                        }
                    }
                    $.ajax({
                        url: '/Product/GetProductDataRow',
                        type: "get",
                        dataType: "json",
                        async: false,
                        data: { category_id: category_id },
                        success: function (data) {
                            $.each(data, function (index, item) {
                                if (item.length > 0) {
                                    $('#boq_table tr').eq(row_index).find('td:nth-child(6)').html('<label class="type_amount">' + parseFloat(0).toFixed(2) + '</lable>');
                                    var arr_type_id = new Array();
                                    var count_table_row = $('#boq_table tbody tr').length;
                                    for (var i = 1; i <= count_table_row; i++) {
                                        var id = $('#boq_table tr').eq(i).attr('id');
                                        if (id != undefined && id.substr(0, 5) == "type" + job_no)
                                            arr_type_id.push(id);
                                    }
                                    calculate_total_amount_by_type("", arr_type_id, job_no);
                                }
                                $.each(item, function (index1, item1) {
                                    if (index1 == item.length - 1)
                                        str_btn_add = "<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_item_row(this)'><span class='glyphicon glyphicon-plus'></span></a>";
                                    $('#boq_table').find('tr').eq(row_index + index1).after("" +
                                        "<tr class='type" + type_letter + " job" + job_no + "' id='item" + type_letter + (Number(index1) + 1) + "'>" +
                                            "<td style='padding-left:50px !important;'>" + Number(index1 + 1) + "</td>" +
                                            "<td><input type='hidden' class='product_id' value='" + item1.product_id + "' id='" + type_letter + (Number(index1) + 1) + "' /><input type='text' class='form-control item_code' value='" + item1.product_code + "' onchange='initial_item_by_item_code(this)'/></td>" +
                                            "<td><label class='item_description'>" + item1.product_name + "</label></td>" +
                                            "<td></td>" +
                                            "<td><label class='item_unit'>" + item1.product_unit + "</label></td>" +
                                            "<td><input type='number' class='form-control item_qty' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                                            "<td><input type='number' class='form-control item_unit_price' value='" + parseFloat(item1.unit_price).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                                            "<td></td>" +
                                            "<td><label class='item_amount'>" + parseFloat(0).toFixed(2) + "</lable></td>" +
                                            "<td></td>" +
                                            "<td><label class='item_remark'>" + remark + "</label></td>" +
                                            "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_item_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                                            "<td>" + str_btn_add + "</td>" +
                                            "<td></td>" +
                                            "<td></td>" +
                                            "<td></td>" +
                                            "<td></td>" +
                                        "</tr>"
                                    );
                                });
                                calculate_total_amount_by_job_category();
                            });
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert(textStatus);
                        }
                    });
                }
            }
        }

        function get_item_type_by_description(row) {

        }

        function initial_item_data_row(category_id, row_index, item_class, remark) {
            if (category_id != "") {
                var type_letter = item_class.substr(item_class.length - 2, 2);
                var job_no = item_class.replace(/[^\d]/g, '');
                var item_cls = $('.type' + type_letter);
                var str_btn_add = "";
                if (item_cls.length > 0) {
                    for (var i = 1; i < item_cls.length; i++) {
                        var idx = item_cls[i].rowIndex;
                        document.getElementById('boq_table').deleteRow(idx);
                    }
                }
                $.ajax({
                    url: '/Product/GetProductDataRow',
                    type: "get",
                    dataType: "json",
                    data: { category_id: category_id },
                    success: function (data) {
                        $.each(data, function (index, item) {
                            if (item.length > 0) {
                                $('#boq_table tr').eq(row_index).find('td:nth-child(5)').html('<label class="type_amount">' + parseFloat(0).toFixed(2) + '</lable>');
                                var arr_type_id = new Array();
                                var count_table_row = $('#boq_table tbody tr').length;
                                for (var i = 1; i <= count_table_row; i++) {
                                    var id = $('#boq_table tr').eq(i).attr('id');
                                    if (id != undefined && id.substr(0, 5) == "type" + job_no)
                                        arr_type_id.push(id);
                                }
                                calculate_total_amount_by_type("", arr_type_id, job_no);
                            }
                            $.each(item, function (index1, item1) {
                                if (index1 == item.length - 1)
                                    str_btn_add = "<a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='append_item_row(this)'><span class='glyphicon glyphicon-plus'></span></a>";
                                $('#boq_table').find('tr').eq(row_index + index1).after("" +
                                    "<tr class='type" + type_letter + " job" + job_no + "' id='item" + type_letter + (Number(index1) + 1) + "'>" +
                                        "<td style='padding-left:50px !important;'>" + Number(index1 + 1) + "</td>" +
                                        "<td><input type='hidden' class='product_id' value='" + item1.product_id + "' id='" + type_letter + (Number(index1) + 1) + "' /><input type='text' class='form-control item_code' value='" + item1.product_code + "' onchange='initial_item_by_item_code(this)'/></td>" +
                                        "<td><label class='item_description'>" + item1.product_name + "</label></td>" +
                                        "<td></td>" +
                                        "<td><label class='item_unit'>" + item1.product_unit + "</label></td>" +
                                        "<td><input type='number' class='form-control item_qty' value='" + parseFloat(0).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                                        "<td><input type='number' class='form-control item_unit_price' value='" + parseFloat(item1.unit_price).toFixed(2) + "' onchange='calculate_amount(this)'/></td>" +
                                        "<td></td>" +
                                        "<td><label class='item_amount'>" + parseFloat(0).toFixed(2) + "</lable></td>" +
                                        "<td></td>" +
                                        "<td><label class='item_remark'>" + remark + "</label></td>" +
                                        "<td><a href='javascript:void(0)' class='btn btn-default btn-sm' onclick='remove_item_row(this)'><span class='glyphicon glyphicon-trash'></span></a></td>" +
                                        "<td>" + str_btn_add + "</td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                    "</tr>"
                                );
                            });
                            calculate_total_amount_by_job_category();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            }
        }

        function initial_item_by_item_code(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var item_code = $('#boq_table tr').eq(ind).find('input[type="text"].item_code').val();
            if (item_code != null || item_code != "") {
                $.ajax({
                    url: '/Product/GetProductById',
                    type: "get",
                    dataType: "json",
                    data: { p_code: item_code },
                    success: function (data) {
                        $.each(data, function (index, item) {
                            $('#boq_table tbody tr').eq(ind - 1).find('input[type="hidden"].product_id').val(item.product_id);
                            $('#boq_table tbody tr').eq(ind - 1).find('label.item_description').text(item.product_name);
                            $('#boq_table tbody tr').eq(ind - 1).find('label.item_unit').text(item.product_unit);
                            $('#boq_table tbody tr').eq(ind - 1).find('input[type="number"].item_unit_price').val(parseFloat(item.unit_price).toFixed(2));
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $('#boq_table tbody tr').eq(ind - 1).find('input[type="hidden"].product_id').val('');
                        $('#boq_table tbody tr').eq(ind - 1).find('label.item_description').text('');
                        $('#boq_table tbody tr').eq(ind - 1).find('label.item_unit').text('');
                        $('#boq_table tbody tr').eq(ind - 1).find('input["number"].item_unit_price').val('');
                        alert(textStatus);
                    }
                });
            }
        }

        function calculate_amount(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var qty = $('#boq_table tr').eq(ind).find('input.item_qty').val();
            var unit_price = $('#boq_table tr').eq(ind).find('input.item_unit_price').val();
            var amount = Number(qty) * Number(unit_price);
            //$('#boq_table tr').eq(ind).find('label.item_amount').text(parseFloat(amount).toFixed(2));
            $('#boq_table tr').eq(ind).find('label.item_amount').text(amount.formatMoney(2));
            calculate_total_amount_by_item(ind);
        }

        function calculate_total_amount_by_item(ind, arr_item_id) {
            var total_amount = 0;
            var item_class_group = $('#boq_table tr').eq(ind).attr('class').split(' ');
            var item_class_group_name = item_class_group[0];
            var item_class_group_ele = $('.' + item_class_group_name);
            if (arr_item_id == undefined || arr_item_id == null || arr_item_id == "") {
                for (var i = 1; i < item_class_group_ele.length; i++) {
                    var amount = $(item_class_group_ele[i]).find('label.item_amount').text().replace(/[^0-9\.-]+/g, "");
                    total_amount = Number(total_amount) + Number(amount);
                }
            } else {
                for (var i = 0; i < arr_item_id.length; i++) {
                    var amount = $('#' + arr_item_id[i]).find('label.item_amount').text().replace(/[^0-9\.-]+/g, "");
                    total_amount = Number(total_amount) + Number(amount);
                }
            }
            $(item_class_group_ele[0]).find('label.type_amount').text(total_amount.formatMoney(2));

            var arr_type_id = new Array();
            var total_type_amount = 0;
            var type_class_num = item_class_group[1].replace(/[^\d]/g, '');
            var count_table_row = $('#boq_table tbody tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#boq_table tr').eq(i).attr('id');
                if (id != undefined && id.substr(0, 5) == "type" + type_class_num)
                    arr_type_id.push(id);
            }
            for (var i = 0; i < arr_type_id.length; i++) {
                var amount = 0;
                var ele_type = $('#boq_table tr#' + arr_type_id[i]).find('input.type_amount');
                var ele_type1 = $('#boq_table tr#' + arr_type_id[i]).find('label.type_amount');
                if (ele_type.length == 1) {
                    amount = $('#boq_table tr#' + arr_type_id[i]).find('input.type_amount').val().replace(/[^0-9\.-]+/g, "");
                }
                else if (ele_type1.length == 1) {
                    amount = $('#boq_table tr#' + arr_type_id[i]).find('label.type_amount').text().replace(/[^0-9\.-]+/g, "");
                }
                total_type_amount = Number(total_type_amount) + Number(amount);
            }
            $('#boq_table tr#' + item_class_group[1]).find('label.job_category_amount').text(total_type_amount.formatMoney(2));
            var job_category_estimate_amount = $('#boq_table tr#' + item_class_group[1]).find('input.job_category_estimate_amount').val();
            $('#boq_table tr#' + item_class_group[1]).find('label.job_category_dif_amount').text(Number(job_category_estimate_amount - total_type_amount).formatMoney(2));
            calculate_total_amount_by_job_category();
        }

        function calculate_total_amount_by_type(row, arr_id, job_id) {
            var arr_type_id = new Array();
            var total_amount = 0;
            if (arr_id == undefined || arr_id == null || arr_id == "") {
                var ind = row.parentNode.parentNode.rowIndex;
                var type_class_group = $('#boq_table tr').eq(ind).attr('class').split(' ');
                var type_class_group_num = type_class_group[1].replace(/[^\d]/g, '');
                var count_table_row = $('#boq_table tbody tr').length;
                for (var i = 1; i <= count_table_row; i++) {
                    var id = $('#boq_table tr').eq(i).attr('id');
                    if (id != undefined && id.substr(0, 5) == "type" + type_class_group_num)
                        arr_type_id.push(id);
                }
                for (var i = 0; i < arr_type_id.length; i++) {
                    var amount = 0;
                    var ele_type = $('#boq_table tr#' + arr_type_id[i]).find('input.type_amount');
                    var ele_type1 = $('#boq_table tr#' + arr_type_id[i]).find('label.type_amount');
                    if (ele_type.length == 1) {
                        amount = $('#boq_table tr#' + arr_type_id[i]).find('input.type_amount').val().replace(/[^0-9\.-]+/g, "");
                    }
                    else if (ele_type1.length == 1) {
                        amount = $('#boq_table tr#' + arr_type_id[i]).find('label.type_amount').text().replace(/[^0-9\.-]+/g, "");
                    }
                    total_amount = Number(total_amount) + Number(amount);
                }
                $('#boq_table tr#' + type_class_group[1]).find('label.job_category_amount').text(total_amount.formatMoney(2));
                //added jul 18 2018 by rithh
                var job_category_estimate_amount = $('#boq_table tr#' + type_class_group[1]).find('input.job_category_estimate_amount').val().replace(/[^0-9\.-]+/g, "");
                $('#boq_table tr#' + type_class_group[1]).find('label.job_category_dif_amount').text(Number(job_category_estimate_amount - total_amount).formatMoney(2));
            } else {
                for (var i = 0; i < arr_id.length; i++) {
                    var amount = 0;
                    var ele_type = $('#boq_table tr#' + arr_id[i]).find('input.type_amount');
                    var ele_type1 = $('#boq_table tr#' + arr_id[i]).find('label.type_amount');
                    if (ele_type.length == 1) {
                        amount = $('#boq_table tr#' + arr_id[i]).find('input.type_amount').val().replace(/[^0-9\.-]+/g, "");
                    }
                    else if (ele_type1.length == 1) {
                        amount = $('#boq_table tr#' + arr_id[i]).find('label.type_amount').text().replace(/[^0-9\.-]+/g, "");
                    }
                    total_amount = Number(total_amount) + Number(amount);
                }
                $('#boq_table tr#' + job_id).find('label.job_category_amount').text(total_amount.formatMoney(2));
                var job_category_estimate_amount = $('#boq_table tr#' + job_id).find('input.job_category_estimate_amount').val();//.replace(/[^0-9\.-]+/g, "");
                $('#boq_table tr#' + job_id).find('label.job_category_dif_amount').text(Number(job_category_estimate_amount - total_amount).formatMoney(2));
            }
            calculate_total_amount_by_job_category();
        }

        function calculate_total_amount_by_job_category() {
            var total_amount = 0, vat = 0, total = 0;
            var arr_job_category_id = new Array();
            var count_table_row = $('#boq_table tbody tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#boq_table tr').eq(i).attr('id');
                if (id != undefined && id.substr(0, 3) == "job")
                    arr_job_category_id.push(id);
            }
            for (var i = 0; i < arr_job_category_id.length; i++) {
                var amount = 0;
                var ele_type = $('#boq_table tr#' + arr_job_category_id[i]).find('input.job_category_amount');
                var ele_type1 = $('#boq_table tr#' + arr_job_category_id[i]).find('label.job_category_amount');
                if (ele_type.length == 1) {
                    amount = $('#boq_table tr#' + arr_job_category_id[i]).find('input.job_category_amount').val().replace(/[^0-9\.-]+/g, "");
                }
                else if (ele_type1.length == 1) {
                    amount = $('#boq_table tr#' + arr_job_category_id[i]).find('label.job_category_amount').text().replace(/[^0-9\.-]+/g, "");
                }
                total_amount = Number(total_amount) + Number(amount);
            }
            vat = (Number(total_amount) * 10) / 100;
            total = Number(total_amount) - Number(vat);
            $('#sub_total').text(total_amount.formatMoney(2));

            //added jul 18 2018
            var total_estimate_amount = $('#est_sub_total').text().replace(/[^0-9\.-]+/g, "");
            $('#dif_sub_total').text(Number(total_estimate_amount - total_amount).formatMoney(2));

        }

        function InitialRemark(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            var remark = $('#boq_table tr').eq(ind).find('select.remark').val();
            var id = $('#boq_table tr').eq(ind).attr('id');
            var count_table_row = $('#boq_table tbody tr').length;
            for (var i = 1; i <= count_table_row; i++) {
                $('#boq_table tr.' + id).eq(i).find('label.item_remark').text(remark);
                $('#boq_table tr.' + id).eq(i).find('label.type_remark').text(remark);
            }
        }

        function initial_job_category_code(project_short_name) {
            var count_table_row = $('#boq_table tbody tr').length;
            var arr_job_id = new Array();
            for (var i = 1; i <= count_table_row; i++) {
                var id = $('#boq_table tr').eq(i).attr('id');
                if (id != undefined && id.substr(0, 3) == "job")
                    arr_job_id.push(id);
            }
            for (var i = 0; i < arr_job_id.length; i++) {
                var row_no = Number(i + 1);
                var j_category_last_split = (row_no.toString().length == 1) ? "00" + row_no : (row_no.toString().length == 2) ? "0" + row_no : row_no;
                var job_category_code = "J-" + project_short_name + "-" + j_category_last_split;
                $('#boq_table tr#' + arr_job_id[i]).find('label.job_category_code').text(job_category_code);
            }
        }
        function calculate_total_estimate_amount_by_job_category(row) {
            if (row != undefined) {
                var ind = row.parentNode.parentNode.rowIndex;
                var total_job_category_amount = $('#boq_table tr').eq(ind).find('label.job_category_amount').text().replace(/[^0-9\.-]+/g, "");
                var total_job_category_estimate_amount = $('#boq_table tr').eq(ind).find('input.job_category_estimate_amount').val().replace(/[^0-9\.-]+/g, "");
                var dif_job_category_amount = Number(total_job_category_estimate_amount) - Number(total_job_category_amount);
                $("#boq_table tr").eq(ind).find('label.job_category_dif_amount').text(dif_job_category_amount.formatMoney(2));
            }
            var total_estimate_amount = 0;
            var job_category_amounts = $('.job_category_estimate_amount');
            for (var i = 0; i < job_category_amounts.length; i++) {
                if (job_category_amounts[i].value)
                    total_estimate_amount = total_estimate_amount + Number(job_category_amounts[i].value);

            }
            var sub_total = $('#sub_total').text().replace(/[^0-9\.-]+/g, "");
            $('#est_sub_total').text(total_estimate_amount.formatMoney(2));
            $("#dif_sub_total").text(Number(total_estimate_amount - sub_total).formatMoney(2));
        }

        

        function removeAttachmentRow(row) {
            var index = row.parentNode.parentNode.rowIndex;
            document.getElementById('tableAttachment').deleteRow(index);
            var rowCount = $('#tableAttachment tr').length;
            if (rowCount == 0) {
                $("#attachment_block").empty();
                $("#attachment_block").append("" +
                    '<input type="file" class="form-control" name="attachment_reference" id="attachment_reference" multiple />'
                    );
            }
        }

        function convertNumberToRoman(num) {
            var lookup = {
                ↈ: 100000,
                ↂↈ: 90000,
                ↇ: 50000,
                ↂↇ: 40000,
                ↂ: 10000,
                Ⅿↂ: 9000,
                ↁ: 5000,
                Ⅿↁ: 4000,
                Ⅿ: 1000,
                ⅭⅯ: 900,
                Ⅾ: 500,
                ⅭⅮ: 400,
                Ⅽ: 100,
                ⅩⅭ: 90,
                Ⅼ: 50,
                ⅩⅬ: 40,
                Ⅹ: 10,
                Ⅸ: 9,
                Ⅷ: 8,
                Ⅶ: 7,
                Ⅵ: 6,
                Ⅴ: 5,
                Ⅳ: 4,
                Ⅲ: 3,
                Ⅱ: 2,
                Ⅰ: 1
            }, roman = '', i;
            if (num.length > 6) {
                roman = num.substr(0, 6);
                return roman;
            }
            /*
            if (num <= 399999) {
                roman = num;
            } else {
                roman = "399999";
            }
            */
            for (i in lookup) {
                while (num >= lookup[i]) {
                    roman += i;
                    num -= lookup[i];
                }
            }
            return roman;
        }

    </script>
    }

