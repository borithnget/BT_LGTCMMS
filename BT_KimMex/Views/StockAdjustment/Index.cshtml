@using BT_KimMex.Class;
@model IEnumerable<BT_KimMex.Models.StockAdjustmentViewModel>
@{
    ViewBag.Title = "Index";
    bool isAdmin = false;
    bool isMainStockController = false;
    bool isCFO = false;
    if (User.IsInRole(Role.SystemAdmin))
    {
        isAdmin = true;
    }
    if (User.IsInRole(Role.SiteStockKeeper))
    {
        isMainStockController = true;
    }
    if (User.IsInRole(Role.QAQCOfficer))
    {
        isCFO = true;
    }

}
<style type="text/css">
    #stock_adjustment_table tr td:nth-child(6), #stock_adjustment_table tr td:nth-child(7), #stock_adjustment_table tr td:nth-child(8), #stock_adjustment_table tr td:nth-child(9) {
        text-align: center !important;
    }
</style>

<h3 class="title">Stock Adjustment List</h3>
@*<div class="row">
    <div class="form-group">
        <label class="control-label col-md-3">Stock Adjustment Status:</label>
        <div class="col-md-9">
            <select class="form-control" id="p_status">
                <option value="All" selected>All</option>
                <option value="Pending">Pending</option>
                <option value="Pending Feedback">Pending Feedback</option>
                <option value="Feedbacked">Feedbacked</option>
                <option value="Completed">Completed</option>
            </select>
        </div>
    </div>
</div>*@
<table class="table table-bordered" id="stock_adjustment_table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Date</th>
            <th>Adj. No</th>
            <th>Warehouse</th>
            <th>Requester</th>
            <th>Status</th>
            <th>View</th>
            @*<th>Approve/ Feedback</th>
            <th>View</th>
            <th>Edit/ Prepare</th>
            <th>Delete</th>*@
        </tr>
    </thead>
    <tbody>
        @{ 
            int count = 1;
            foreach (var item in Model)
            {
                <tr>
                    <td>@count</td>
                    <td>@Convert.ToDateTime(item.created_date).ToString("dd/MM/yyyy")</td>
                    <td><a href="@Url.Action("Details", "StockAdjustment", new { id = item.stock_adjustment_id })">@item.stock_adjuctment_code</a></td>
                    <td>@item.warehouse_name</td>
                    <td>@BT_KimMex.Class.CommonFunctions.GetUserFullnamebyUserId(item.created_by)
                    </td>
                    <td>
                    @{
                        if (string.Compare(item.stock_adjustment_status, Status.Pending) == 0)
                        {
                            <label class="label w3-red">@ShowStatus.Created</label>
                        }
                        else if (string.Compare(item.stock_adjustment_status, Status.Approved) == 0)
                        {
                            <label class="label w3-yellow">@ShowStatus.Checked</label>
                        }
                        else if (string.Compare(item.stock_adjustment_status, Status.Checked) == 0)
                        {
                            <label class="label w3-blue">@ShowStatus.Approved</label>
                        }
                        else if (string.Compare(item.stock_adjustment_status, Status.Completed) == 0)
                        {
                            <label class="label w3-green">@ShowStatus.Completed</label>
                        }
                        else
                        {
                            <label class="label w3-grey">@item.stock_adjustment_status</label>
                        }
                    }
                    </td>
                    <td class="text-center"><a href="@Url.Action("Details","StockAdjustment",new { id = item.stock_adjustment_id })" class="w3-button w3-tiny w3-green">View Detail</a></td>
                </tr>
                count++;
            }
        }
    </tbody>
</table>
<!-- delete project modal popup-->
<div class="modal fade" id="myModal" tabindex="=-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-danger">
                <h4 class="modal-title" id="myModalLabel">Comfirmation</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure to delete this item?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default delete-confirm">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    No
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(function () {
            var stockAdjustmentId;
            var isAdmin = false;
            var isMainStockController = false;
            var isCFO = false;

            $('#stock_adjustment_table').DataTable({});
            @if (User.IsInRole(Role.SystemAdmin))
            {
                <text>
            $('#stock_adjustment_table_filter').append('<a href="@Url.Action("ImportStockBalance", "WareHouse")" class="btn btn-success pull-left" style="margin-right:10px !important;">Import Stock Balance</a> <a href="@Url.Action("Create","StockAdjustment")" class="btn btn-success pull-left" style="margin-right:10px !important;">Add New</a>');
        </text>
            }

            @if (User.IsInRole(Role.SystemAdmin))
            {
                <text>isAdmin = true;</text>
            }
            @if (User.IsInRole(Role.SiteStockKeeper))
            {
                <text>isMainStockController = true;
            $('#stock_adjustment_table_filter').append('<a href="@Url.Action("Create","StockAdjustment")" class="btn btn-success pull-left" style="margin-right:10px !important;">Add New</a>');
            </text>

            }
            @if (User.IsInRole(Role.QAQCOfficer))
            {
                <text>isCFO = true;</text>
            }

            //initialStockAdjustmentList(isAdmin, isMainStockController, isCFO);

            $('#p_status').change(function (e) {
                e.preventDefault();
                var status = $(this).val();
                initialStockAdjustmentList(isAdmin, isMainStockController, isCFO, status);
            });

            $('#stock_adjustment_table tbody').on('click', 'td a.delete-promp', function () {
                stockAdjustmentId = $(this).attr('id');
                $('#myModal').modal('show');
            });
            $('.delete-confirm').click(function () {
                if (stockAdjustmentId != '') {
                    $.ajax({
                        url: "@Url.Action("Delete","StockAdjustment")",
                        data: { 'id': stockAdjustmentId },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('#myModal').modal('hide');
                            if (da.result == "success") {
                                alert('Your data has been deleted successfully.');
                                window.location.href = '@Url.Action("Index", "StockAdjustment")';
                            }
                            else if (da.Message == "fail")
                                alert('Your data has been error while deleting.');
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                            alert('Your data has been error while deleting.');
                        }
                    });
                }
            });
        });
        function initialStockAdjustmentList(isAdmin, isMSC, isCFO, status) {
            var t;

            if (isAdmin || (isMSC && isCFO)) {
                t = $('#stock_adjustment_table').DataTable({
                    "bDestroy": true,
                    "ajax": {
                        "url": "@Url.Action("GetAllStockAdjustments", "StockAdjustment")",
                        "type": "GET",
                        "dataType": "json",
                        "data": { status: status },
                    },
                    "columns": [
                        { "data": "stock_adjustment_id" },
                        {
                            "data": "created_date", render: function (data, type, full, meta) {
                                return getFormattedDateMMDDYYYY(new Date(parseInt(data.replace("/Date(", "").replace(")/", ""), 10)));
                            }
                        },
                        //{ "data": "stock_adjuctment_code" },
                                                {
                                                    "render": function (data, type, full, meta) {
                                                        return '<a href="/StockAdjustment/Details/' + full.stock_adjustment_id + '">' + full.stock_adjuctment_code + '</a>';
                                                    }
                                                },
                        { "data": "warehouse_name" },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "pending" || full.stock_adjustment_status == "pending feedback")
                                    return '<label style="color:orange !important;">' + full.stock_adjustment_status + '</label>';
                                else if (full.stock_adjustment_status == "feedbacked")
                                    return '<label style="color:green !important;">' + full.stock_adjustment_status + '</label>';
                                else if (full.stock_adjustment_status == "approved")
                                    return '<label style="color:blue !important;">' + full.stock_adjustment_status + '</label>';
                            }
                        },
                        //{
                        //    "render": function (data, type, full, meta) {
                        //        if (full.stock_adjustment_status == "Pending" || full.stock_adjustment_status == "Feedbacked")
                        //            return '<a href="/StockAdjustment/ApproveFeedback/' + full.stock_adjustment_id + '">Approve/ Feedback</a>';
                        //        return '';
                        //    }
                        //},
                        //{
                        //    "render": function (data, type, full, meta) {
                        //        return '<a href="/StockAdjustment/Details/' + full.stock_adjustment_id + '">View Detail</a>';
                        //    }
                        //},
                        //{
                        //    "render": function (data, type, full, meta) {
                        //        if (full.stock_adjustment_status == "Pending")
                        //            return '<a href="/StockAdjustment/Edit/' + full.stock_adjustment_id + '">Edit</a>';
                        //        else if (full.stock_adjustment_status == "Pending Feedback")
                        //            return '<a href="/StockAdjustment/PrepareFeedback/' + full.stock_adjustment_id + '">Prepare</a>';
                        //        else
                        //            return '';
                        //    }
                        //},
                        //{
                        //    "render": function (data, type, full, meta) {
                        //        if (full.stock_adjustment_status == "Pending")
                        //            return '<a href="javascript:void(0)" id="' + full.stock_adjustment_id + '" class="delete-promp">Delete</a>';
                        //        else return '';
                        //    }
                        //},
                    ],
                    "order": [[2, "desc"]],
                });
                $('#stock_adjustment_table_filter').append('<a href="@Url.Action("ImportStockBalance", "WareHouse")" class="btn btn-default pull-left" style="margin-right:10px !important;">Import Stock Balance</a> <a href="@Url.Action("Create","StockAdjustment")" class="btn btn-default pull-left" style="margin-right:10px !important;">Add New</a>');
            } else if (isMSC) {
                t = $('#stock_adjustment_table').DataTable({
                    "bDestroy": true,
                    "ajax": {
                        "url": "@Url.Action("GetAllStockAdjustments", "StockAdjustment")",
                        "type": "GET",
                        "dataType": "json",
                        "data": { status: status },
                    },
                    "columns": [
                        { "data": "stock_adjustment_id" },
                        {
                            "data": "created_date", render: function (data, type, full, meta) {
                                return getFormattedDateMMDDYYYY(new Date(parseInt(data.replace("/Date(", "").replace(")/", ""), 10)));
                            }
                        },
                        { "data": "stock_adjuctment_code" },
                        { "data": "warehouse_name" },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending" || full.stock_adjustment_status == "Pending Feedback")
                                    return '<label style="color:orange !important;">' + full.stock_adjustment_status + '</label>';
                                else if (full.stock_adjustment_status == "Feedbacked")
                                    return '<label style="color:green !important;">' + full.stock_adjustment_status + '</label>';
                                else if (full.stock_adjustment_status == "Completed")
                                    return '<label style="color:blue !important;">' + full.stock_adjustment_status + '</label>';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending")
                                    return '<a href="/StockAdjustment/ApproveFeedback/' + full.stock_adjustment_id + '">Approve/ Feedback</a>';
                                return '';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                return '<a href="/StockAdjustment/Details/' + full.stock_adjustment_id + '">View Detail</a>';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending")
                                    return '<a href="/StockAdjustment/Edit/' + full.stock_adjustment_id + '">Edit</a>';
                                else if (full.stock_adjustment_status == "Pending Feedback")
                                    return '<a href="/StockAdjustment/PrepareFeedback/' + full.stock_adjustment_id + '">Prepare</a>';
                                else
                                    return '';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending")
                                    return '<a href="javascript:void(0)" id="' + full.stock_adjustment_id + '" class="delete-promp" > Delete</a > ';
                                else return '';
                            }
                        },
                    ],
                    "order": [[2, "desc"]],
                    "columnDefs": [
                                {
                                    "targets": [5],
                                    "visible": false,
                                },
                    ]
                });
                $('#stock_adjustment_table_filter').append('<a href="@Url.Action("ImportStockBalance", "WareHouse")" class="btn btn-default pull-left" style="margin-right:10px !important;">Import Stock Balance</a> <a href="@Url.Action("Create","StockAdjustment")" class="btn btn-default pull-left" style="margin-right:10px !important;">Add New</a>');
            } else if (isCFO) {
                t = $('#stock_adjustment_table').DataTable({
                    "bDestroy": true,
                    "ajax": {
                        "url": "@Url.Action("GetAllStockAdjustments", "StockAdjustment")",
                        "type": "GET",
                        "dataType": "json",
                        "data": { status: status },
                    },
                    "columns": [
                        { "data": "stock_adjustment_id" },
                        {
                            "data": "created_date", render: function (data, type, full, meta) {
                                return getFormattedDateMMDDYYYY(new Date(parseInt(data.replace("/Date(", "").replace(")/", ""), 10)));
                            }
                        },
                        { "data": "stock_adjuctment_code" },
                        { "data": "warehouse_name" },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending" || full.stock_adjustment_status == "Pending Feedback")
                                    return '<label style="color:orange !important;">' + full.stock_adjustment_status + '</label>';
                                else if (full.stock_adjustment_status == "Feedbacked")
                                    return '<label style="color:green !important;">' + full.stock_adjustment_status + '</label>';
                                else if (full.stock_adjustment_status == "Completed")
                                    return '<label style="color:blue !important;">' + full.stock_adjustment_status + '</label>';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending" || full.stock_adjustment_status == "Feedbacked")
                                    return '<a href="/StockAdjustment/ApproveFeedback/' + full.stock_adjustment_id + '">Approve/ Feedback</a>';
                                return '';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                return '<a href="/StockAdjustment/Details/' + full.stock_adjustment_id + '">View Detail</a>';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending")
                                    return '<a href="/StockAdjustment/Edit/' + full.stock_adjustment_id + '">Edit</a>';
                                else if (full.stock_adjustment_status == "Pending Feedback")
                                    return '<a href="/StockAdjustment/Edit/' + full.stock_adjustment_id + '">Prepare</a>';
                                else
                                    return '';
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                if (full.stock_adjustment_status == "Pending")
                                    return '<a href="javascript:void(0)" id="' + full.stock_adjustment_id + '" class="delete-promp">Delete</a>';
                                else return '';
                            }
                        },
                    ],
                    "order": [[2, "desc"]],
                    "columnDefs": [
                                {
                                    "targets": [7],
                                    "visible": false,
                                },
                                {
                                    "targets": [8],
                                    "visible": false,
                                },
                    ]
                });
            }
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
            $('select[name="stock_adjustment_table_length"]').addClass('datatable-control');
            $('input[aria-controls="stock_adjustment_table"]').addClass('datatable-control');
        }
    </script>
}
