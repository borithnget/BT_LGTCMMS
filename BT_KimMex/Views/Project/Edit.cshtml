@model BT_KimMex.Models.ProjectViewModel
@using BT_KimMex.Class
@{
    ViewBag.Title = "Edit";
}

<style type="text/css">
    .jumbotron {
        padding: 10px !important;
        font-size: 14px !important;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3 class="title">Edit Project</h3>
        <div class="jumbotron">
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.project_id)
            <div class="row">
                <div class="col-md-6">
                    @*<div class="form-group">
                        <h3 class="control-label col-md-4" >Edit Project</h3>
                    </div>*@
                    <div class="form-group">
                        <label class="control-label col-md-4">Date:</label>
                        <label class="col-md-8" id="current_date">@Convert.ToDateTime(Model.created_date).ToString("dd/MM/yyyy")</label>
                    </div>
                    

                    @*<div class="form-group">
                        <label class="control-label col-md-4">Project No.:</label>
                        <label class="col-md-8" id="project_no"></label>
                    </div>*@
                </div>
                <div class="col-md-6">
                    <div class="form-group ">
                        <label class="control-label col-md-4">SO No:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.project_no, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.project_no, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label col-md-4">Project Short Name <strong style="color:red !important">*</strong>:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.project_short_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.project_short_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.project_start_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group date" data-provide="datepicker" style="width:280px !important;">
                                @Html.EditorFor(model => model.project_start_date, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.project_end_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group date" data-provide="datepicker" style="width:280px !important;">
                                @Html.EditorFor(model => model.project_end_date, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="form-group">
                        <label class="control-label col-md-4">Project Engineer:</label>
                        <div class="col-md-8">
                            <select class="form-control" id="project_manager" style="display:inline-block !important;">
                                <option selected disabled value="">--- Select Project Engineer ---</option>
                            </select>
                            <button type="button" class="btn btn-default" id="project_manager_promp"><span class='glyphicon glyphicon-plus'></span></button>
                        </div>
                    </div>*@
                    <div class="form-group">
                        <label class="control-label col-md-4">Site Name <strong style="color:red !important">*</strong>:</label>
                        <div class="col-md-8">
                            <select class="form-control" id="site_id" style="display:inline-block !important;">
                                <option selected disabled value="">Select Site</option>
                            </select>
                            <button type="button" class="btn btn-default" id="side_promp"><span class='glyphicon glyphicon-plus'></span></button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-4">Warehouse <strong style="color:red !important">*</strong>:</label>
                        <div class="col-md-8">
                            <select class="form-control" id="warehouse_project_id" style="display:inline-block !important;">
                                <option selected disabled value="">Select Warehouse</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Project Manager:", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @*@if (Model.projectProjectManagers.Count() == 0)
                            {
                                @Html.DropDownList("project_pm_id", new SelectList(BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.ProjectManager), "UserId", "user_first_name"), "Selete Project Manager", new { @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownList("project_pm_id", new SelectList(BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.ProjectManager), "UserId", "user_first_name",Model.projectProjectManagers[0].project_manager_id), new { @class = "form-control" })
                            }*@

                            <select class="form-control js-example-basic-multiple" id="project_pm_id" name="project_pm_id" multiple="multiple">
                                @foreach(var pm in BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.ProjectManager))
                                {
                                    var isexist = Model.projectProjectManagers.Where(s => string.Compare(s.project_manager_id, pm.UserId) == 0).FirstOrDefault();
                                    if (isexist == null)
                                    {
                                        <option value="@pm.UserId">@pm.user_first_name</option>
                                    }
                                    else
                                    {
                                        <option value="@pm.UserId" selected>@pm.user_first_name</option>
                                    }

                                }
                            </select>
                            <span><b class="text-danger">(**multiple)</b></span>
                            @*@Html.DropDownList("project_pm_id", new SelectList(BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.ProjectManager), "UserId", "user_first_name"), new { @class = "form-control js-example-basic-multiple", multiple = "multiple" })*@
                            @Html.ValidationMessageFor(model => model.project_pm_id, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Site Manager:", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @*<a href="javascript:" id="site_manager_promp">New Site Manager</a>*@
                            @*<table style="width:100% !important;" id="siteManagerTable"></table>*@
                            <select class="form-control js-example-basic-multiple site_manager" id="site_manager" name="site_manager" multiple="multiple">
                                @foreach (var pm in BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.SiteManager))
                                {
                                    var isexist = Model.project_site_managers.Where(s => string.Compare(s.site_manager, pm.UserId) == 0).FirstOrDefault();
                                    if (isexist == null)
                                    {
                                        <option value="@pm.UserId">@pm.user_first_name</option>
                                    }
                                    else
                                    {
                                        <option value="@pm.UserId" selected>@pm.user_first_name</option>
                                    }

                                }
                            </select>
                            <span><b class="text-danger">(**multiple)</b></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Spacemen Signature:</label>
                        <div class="col-md-8" id="spacemen_attachment_block">
                            @*<input type="file" class="form-control" name="spacemen_signature" id="spacemen_signature" />*@
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label col-md-4">Project Full Name <strong style="color:red !important">*</strong>:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.project_full_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.project_full_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.project_actual_start_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group date" data-provide="datepicker" style="width:280px !important;">
                                @Html.EditorFor(model => model.project_actual_start_date, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.project_actual_end_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group date" data-provide="datepicker" style="width:280px !important;">
                                @Html.EditorFor(model => model.project_actual_end_date, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.project_telephone, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.project_telephone, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.project_address, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.project_address, new { @class = "form-control",rows="4" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4">Project Status:</label>
                        <div class="col-md-8">
                            <select class="form-control" id="p_status">
                                <option value="Active">Active</option>
                                <option value="Inactive">Inactive</option>
                                <option value="Completed">Completed</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4">Site Supervisor <span style="color:red !important;">*</span>:</label>
                        <div class="col-md-8">
                            @*<table style="width:100% !important;" id="table_sitesup"></table>*@
                            <select class="form-control js-example-basic-multiple sitesupervisors" id="sitesupervisors" name="sitesupervisors" multiple="multiple">
                                @foreach (var pm in BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.SiteSupervisor))
                                {
                                    var isexist = Model.siteSupervisors.Where(s => string.Compare(s.site_supervisor_id, pm.UserId) == 0).FirstOrDefault();
                                    if (isexist == null)
                                    {
                                        <option value="@pm.UserId">@pm.user_first_name</option>
                                    }
                                    else
                                    {
                                        <option value="@pm.UserId" selected>@pm.user_first_name</option>
                                    }

                                }
                            </select>
                            <span><b class="text-danger">(**multiple)</b></span>
                        </div>
                    </div>
                    <!-- New Enhancement 2022 Sep 12 -->
                    <div class="form-group">
                        <label class="control-label col-md-4">Site Admin <span style="color:red !important;">*</span>:</label>
                        <div class="col-md-8">
                            @if (Model.siteAdmin == null)
                            {
                                @Html.DropDownList("site_admin_id", new SelectList(BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.SiteAdmin), "UserId", "user_first_name"), "Selete Admin", new { @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownList("site_admin_id", new SelectList(BT_KimMex.Class.GlobalMethod.GetUserListItemsbyRole(BT_KimMex.Class.Role.SiteAdmin), "UserId", "user_first_name", Model.siteAdmin.site_admin_id), new { @class = "form-control" })
                            }


                            @Html.ValidationMessageFor(model => model.site_admin_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="jumbotron">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label col-md-4">Customer :</label>
                        <div class="col-md-8">
                            <select class="form-control" id="cutomer_id" style="display:inline-block !important;">
                                <option selected disabled value="">--- Select Customer ---</option>
                            </select>
                            <button type="button" class="btn btn-default" id="customer_promp"><span class='glyphicon glyphicon-plus'></span></button>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.cutomer_signatory, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.cutomer_signatory, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cutomer_project_manager, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.cutomer_project_manager, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.customer_telephone, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.customer_telephone, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="button" value="Save" id="btnSave" class="btn btn-default" />
                <a href="@Url.Action("Index","Project")" class="btn btn-default">Cancel</a>
            </div>
        </div>
    </div>
}

<!-- Site modal popup-->
<div class="modal fade" id="site_modal" tabindex="=-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <h2>Create new Site</h2>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="control-label col-md-4">Date:</label>
                            <label class="col-md-8" id="side_current_date"></label>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Site Name <span style="color:red;">*</span>:</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="site_name" />
                                @Html.ValidationMessageFor(model => model.site_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Address:</label>
                            <div class="col-md-8">
                                <textarea class="form-control" id="site_address" rows="5"></textarea>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6"></div>
                            <div class="col-md-6 ">
                                <button class="btn btn-default site-confirm">Save</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- customer modal popup-->
<div class="modal fade" id="customer_modal" tabindex="=-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <h2>Create new Customer</h2>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="control-label col-md-4">Date:</label>
                            <label class="col-md-8" id="customer_current_date"></label>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Customer Name <span style="color:red;">*</span>:</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="customer_name" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Telephone:</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="cus_telephone" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Email:</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="customer_email" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Address:</label>
                            <div class="col-md-8">
                                <textarea class="form-control" id="customer_address" rows="5"></textarea>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6"></div>
                            <div class="col-md-6 ">
                                <button class="btn btn-default customer-confirm">Save</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- project manager modal popup-->
<div class="modal fade" id="user_modal" tabindex="=-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <h2>Create new Project Manager</h2>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="control-label col-md-5">Date:</label>
                            <label class="col-md-7" id="user_current_date"></label>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label">First Name:</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="user_first_name" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label">Last Name:</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="user_last_name" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label">Telephone:</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="user_telephone" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label">Email:</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="user_email" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6"></div>
                            <div class="col-md-6 ">
                                <button class="btn btn-default user-confirm">Save</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Site Manager Modal -->
<div class="modal fade" id="site_manager_modal" tabindex="=-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <h2>Create New Site Manager</h2>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="col-md-5 control-label">First Name <strong style="color:red;">*</strong>: </label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="site_manager_first_name" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label">Last Name <strong style="color:red;">*</strong>:</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="site_manager_last_name" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label">Telephone:</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="site_manager_telephone" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label">Email:</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="site_manager_email" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6"></div>
                            <div class="col-md-6 ">
                                <button class="btn btn-default site-manager-confirm">Save</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
        $(function () {

            var spacemen_att_id;

            InitialCustomerDropDownList();
            InitialSiteDropDownList();
            InitialProjectManager();
            //InitialSiteManager();

            $('.js-example-basic-multiple').select2({
                //placeholder: "Select Project Managers"
            });

            var project_id='@Model.project_id';
            var project_date = new Date('@Model.created_date');
            var project_start_date, project_actual_start_date, project_end_date, project_actual_end_date,spacemen_id;
            var cutomer_id, project_manager, site_id, site_manager_1, site_manager_2;
            project_start_date = '@Model.project_start_date';
            project_actual_start_date = '@Model.project_actual_start_date';
            project_end_date = '@Model.project_end_date';
            project_actual_end_date = '@Model.project_actual_end_date';
            cutomer_id = '@Model.cutomer_id';
            //project_manager = '@Model.project_manager';
            site_id = '@Model.site_id';

            //$('#current_date').text(getFormattedDateMMDDYYYY(project_date));
            //$('#project_no').text("@Model.project_no");

            if (project_start_date == null || project_start_date == "")
                $('#project_start_date').val("");
            else
                $('#project_start_date').val(getFormattedDateMMDDYYYY(new Date(project_start_date)));

            if (project_actual_start_date == null || project_actual_start_date == "")
                $('#project_actual_start_date').val("");
            else
                $('#project_actual_start_date').val(getFormattedDateMMDDYYYY(new Date(project_actual_start_date)));

            if (project_end_date == null || project_end_date == "")
                $('#project_end_date').val("");
            else
                $('#project_end_date').val(getFormattedDateMMDDYYYY(new Date(project_end_date)));

            if (project_actual_end_date==null||project_actual_end_date=="")
                $('#project_actual_end_date').val("");
            else
                $('#project_actual_end_date').val(getFormattedDateMMDDYYYY(new Date(project_actual_end_date)));

            $('#cutomer_id').val(cutomer_id);
            $('#project_manager').val(project_manager);
            $('#site_id').val(site_id);
            $('#p_status').val('@Model.p_status')

            initialWarehousebySitewithDefault(site_id,'@Model.warehouse_project_id');

            @*@if (!string.IsNullOrEmpty(Model.warehouse_project_id))
            {
                <text>
            $('#warehouse_project_id').val('@Model.warehouse_project_id');
            </text>
            }*@

            var count=0;
            @*@foreach(var item in Model.project_site_managers){
                <text>
                    $('#siteManagerTable').append(""+
                        "<tr>"+
                            "<td width='285px'>"+
                                "<select class='form-control site_manager'>"+
                                    "<option selected disabled value=''>--- select site manager ---</option>"+
                                "</select>"+
                            "</td>"+
                            "<td style='width:40px !important;'>"+
                                "<button type='button' class='btn btn-default btn-sm' onclick='RemoveSiteManagerRow(this)'><span class='glyphicon glyphicon-trash'></span></button>" +
                            "</td>"+
                            "<td style='width:40px !important;'>"+

                            "</td>"+
                        "</tr>"
                    );
                    InitialSiteManager(count, '@item.site_manager');
                    count++;
                </text>
            }
            $('#siteManagerTable tbody tr:last-child td:nth-child(3)').html("<button type='button' class='btn btn-default btn-sm' onclick='AddSiteManagerRow(this)'><span class='glyphicon glyphicon-plus'></span></button>");

            @if (Model.project_site_managers.Count == 0)
            {
                <text>
            InitailSiteManagerTable();
            </text>
            }*@
            @*var count1 = 0;
            //Start initial site sup
            @if (Model.siteSupervisors.Count() > 0)
            {
                foreach(var sitesup in Model.siteSupervisors)
                {
                    <text>
                    $('#table_sitesup').append("" +
                        "<tr>" +
                            "<td width='280px'>" +
                                "<select class='form-control sitesupervisors' name='sitesupervisors'>" +
                                    "<option selected disabled value=''>Select Site Supervisor</option>" +
                                "</select>" +
                            "</td>" +
                            "<td style='width:40px !important;'>" +
                                "<button type='button' class='btn btn-default btn-sm' onclick='RemoveSiteSupervisorRow(this)'><span class='glyphicon glyphicon-trash'></span></button>" +
                            "</td>" +
                            "<td style='width:40px !important;'>" +
                                //"<button type='button' class='btn btn-default btn-sm' onclick='AddSiteManagerRow(this)'><span class='glyphicon glyphicon-plus'></span></button>" +
                            "</td>" +
                        "</tr>"
                    );
                    InitialSiteSupervisor1(count1, '@sitesup.site_supervisor_id');
            count1++;
                    </text>
                }
            }
            $('#table_sitesup tbody tr:last-child td:nth-child(3)').html("<button type='button' class='btn btn-default btn-sm' onclick='AddSiteSupervisorRow(this)'><span class='glyphicon glyphicon-plus'></span></button>");*@
            //end initial site sup 

            spacemen_id='@Model.spacemen_att_id';
            if (spacemen_id == null || spacemen_id == "") {
                $("#spacemen_attachment_block").append("" +
                    '<input type="file" class="form-control" name="spacemen_signature" id="spacemen_signature" />'
                    );
            } else {
                $('#spacemen_attachment_block').append("" +
                        '<a class="title" href="/Project/Download/?p=@(Model.spacemen_att_id + Model.spacemen_extension)&d=@Model.spacemen_filename">@Model.spacemen_filename</a>' +
                        '<a href="javascript:void(0);" class="btn btn-default delete-spacemen-att" data-id="@Model.spacemen_att_id">X</a>'
                    );
            }

            $('.delete-spacemen-att').click(function (e) {
                e.preventDefault();
                spacemen_att_id = $(this).data('id');
                $("#spacemen_attachment_block").empty();
                $("#spacemen_attachment_block").append(""+
                    '<input type="file" class="form-control" name="spacemen_signature" id="spacemen_signature" />'
                    );
            });

            $('#btnSave').click(function () {
                var element = {};
                var project_site_managers = [];
                var spacement_attachment_id;
                var project_managers = [];

                //project manager section
                $.each($('#project_pm_id').select2('data'), function (index, item) {
                    //console.log(item);
                    project_managers.push(item.id);

                });
                //console.log(project_managers);
                //return;

                //var site_managers = $('.site_manager');
                //for (var i = 0; i < site_managers.length; i++) {
                //    if (site_managers[i].value != null || site_managers[i].value != "") {
                //        element = {};
                //        element.site_manager = site_managers[i].value;
                //        project_site_managers.push(element);
                //    }
                //}
                $.each($('#site_manager').select2('data'), function (index, item) {
                    element = {};
                    element.site_manager = item.id;
                    project_site_managers.push(element);
                });

                var project_short_name = $('#project_short_name').val();
                var project_full_name = $('#project_full_name').val();
                var project_manager = $('#project_manager').val();
                var site_id = $('#site_id').val();
                var customer_id = $('#cutomer_id').val();
                if (project_short_name == null || project_short_name == "") {
                    alert("Project short name is required.");
                    return;
                }
                if (project_full_name == null || project_full_name == "") {
                    alert("Project full name is required.")
                }
                //if (project_manager == null || project_manager == "") {
                //    alert("Project manager is required.");
                //    return;
                //}
                else if (site_id == null || site_id == "") {
                    alert("Site name is required.");
                    return;
                }

                //var siteSupervisors = $('.sitesupervisors');
                var projectSiteSupervisors = [];
                //for (var i = 0; i < siteSupervisors.length; i++) {
                //    if (siteSupervisors[i].value != null || siteSupervisors[i].value != "") {
                //        element = {};
                //        element.site_supervisor_id = siteSupervisors[i].value;
                //        projectSiteSupervisors.push(element);
                //    }
                //}
                $.each($('#sitesupervisors').select2('data'), function (index, item) {
                    element = {};
                    element.site_supervisor_id = item.id;
                    projectSiteSupervisors.push(element);
                });
                if (projectSiteSupervisors.length == 0) {
                    alert("Please assign site supervisor to project.");
                    return;
                }

                /* delete spacemen attachment */
                if (spacemen_att_id == null || spacemen_att_id == "") {
                    var form_data = new FormData();
                    var file_input = document.getElementById('spacemen_signature');
                    if (file_input != undefined || file_input != null) {
                        if (file_input.files.length > 0) {
                            for (var i = 0; i < file_input.files.length; i++) {
                                form_data.append(file_input.files[i].name, file_input.files[i]);
                            }
                            $.ajax({
                                url: '@Url.Action("UploadAttachment","Project")',
                                type: "POST",
                                data: form_data,
                                async: false,
                                cache: false,
                                contentType: false,
                                processData: false,
                                success: function (data) {
                                    spacement_attachment_id = data.attachment_id;
                                },
                                error: function (xhr, error, status) {
                                    console.log(error, status);
                                }
                            });
                        }
                    }
                }
                    /* end delete spacemen attachment */
                else {
                    /* start upload spacemen signature attachment */
                    $.ajax({
                        url: '@Url.Action("DeleteSpacemenAttachment","Project")',
                        type: 'POST',
                        data: { id: spacemen_att_id }
                    }).done(function (data) {
                        if (data.Result == "OK") {

                        }
                        else if (data.Result.Message) {
                            alert(data.Result.Message);
                        }
                    }).fail(function () {
                        alert("There is something wrong. Please try again.");
                    })


                }
                /* end upload spacemen signature attachment */
                var model = {
                    project_id:project_id,
                    project_no: $('#project_no').val(),
                    project_short_name: $('#project_short_name').val(),
                    project_full_name: $('#project_full_name').val(),
                    project_start_date: $('#project_start_date').val(),
                    project_actual_start_date: $('#project_actual_start_date').val(),
                    project_end_date: $('#project_end_date').val(),
                    project_actual_end_date: $('#project_actual_end_date').val(),
                    project_address: $('#project_address').val(),
                    cutomer_id: $('#cutomer_id').val(),
                    cutomer_signatory: $('#cutomer_signatory').val(),
                    cutomer_project_manager: $('#cutomer_project_manager').val(),
                    site_id: $('#site_id').val(),
                    //project_manager: $('#project_manager').val(),
                    project_site_managers: project_site_managers,
                    spacemen_att_id: spacement_attachment_id,
                    p_status: $('#p_status').val(),
                    project_pm_id: $('#project_pm_id').val(),
                    warehouse_project_id: $('#warehouse_project_id').val(),
                    siteSupervisors: projectSiteSupervisors,
                    site_admin_id: $('#site_admin_id').val(),
                    projectManagers: project_managers,
                }
                $.ajax({
                    url: "@Url.Action("EditProject", "Project")",
                    type: "post",
                    dataType: "json",
                    data: { projectVM:model,id:project_id  },
                    success: function (da) {
                        if (da.Message == "Success"){
                            if ('@TempData["message"]' != null) {
                                $.notify('@TempData["message"]', { className: 'success' });
                            }
                            window.location.href = '@Url.Action("Index", "Project")';
                        }
                        else if(da.Message=="fail")
                        {
                            if ('@TempData["message"]' != null) {
                                $.notify('@TempData["message"]', { className: 'error' });
                            }
                        }

                    },
                    error: function (err) {
                        $.notify('Your data is error while saving!', { className: 'error' });
                    }
                });
            });

            $('#site_id').click(function (e) {
                e.preventDefault();
                initialWarehousebySite($(this).val());
            })

            $('#side_promp').click(function () {
                $('#side_current_date').text(getFormattedDateMMDDYYYY(new Date()));
                $('#site_modal').modal('show');
            });

            $('#customer_promp').click(function () {
                $('#customer_current_date').text(getFormattedDateMMDDYYYY(new Date()));
                $('#customer_modal').modal('show');
            });

            $('#project_manager_promp').click(function () {
                $('#user_current_date').text(getFormattedDateMMDDYYYY(new Date()));
                $('#user_modal').modal('show');
            });

            $('#site_manager_promp').click(function (e) {
                $('#site_manager_modal').modal('show');
            });

            $('.site-confirm').on("click", function (e) {
                e.preventDefault();
                var site_name = $('#site_name').val();
                var site_address = $('#site_address').val();
                if (site_name == "" || site_name == null) {
                    alert("Site name is required.");
                }
                else {
                    $.ajax({
                        url: "/Site/CreateJson",
                        data: {
                            site_name: site_name,
                            site_address: site_address
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('#site_modal').modal('hide');
                            if (da.Message == "Success"){
                                InitialSiteDropDownList();
                            }
                            else if (da.Message == "Fail") {
                                if (!$('.modal-header').hasClass('alert-danger')) {
                                    $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                    $('.delete-confirm').css('display', 'none');
                                }
                                $('.success-message').html('Your data is error while saving!');
                            }
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html('Your data is error while saving!');

                        }
                    });
                }
            });

            $(".customer-confirm").on("click", function (e) {
                e.preventDefault();
                var customer_name = $('#customer_name').val();
                var customer_telephone = $('#cus_telephone').val();
                var customer_email = $("#customer_email").val();
                var customer_address = $('#customer_address').val();
                if (customer_name == null || customer_name == "") {
                    alert("Customer name is required.");
                } else {
                    $.ajax({
                        url: "/Customer/CreateJson",
                        data: {
                            customer_name: customer_name,
                            customer_telephone: customer_telephone,
                            customer_email: customer_email,
                            customer_address: customer_address
                        },
                        type: 'GET',
                        success: function (da) {
                            if ($('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('#customer_modal').modal('hide');
                            if (da.Message == "Success") {
                                InitialCustomerDropDownList();
                                $('#cutomer_id').val(da.cus_id);
                            }
                            else if (da.Message == "Fail") {
                                if (!$('.modal-header').hasClass('alert-danger')) {
                                    $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                    $('.delete-confirm').css('display', 'none');
                                }
                                $('.success-message').html('Your data is error while saving!');
                            }
                        },
                        error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html('Your data is error while saving!');

                        }
                    });
                }
            });

            $('.user-confirm').on("click", function (e) {
                e.preventDefault();
                var user_name=$('#user_login_name').val();
                var password=$('#user_password').val();
                var confirm_password=$('#user_confirm_password').val();
                var user_role=$('#user_group').val();
                var email = $('#user_email').val();
                var first_name = $('#user_first_name').val();
                var last_name = $('#user_last_name').val();
                var position_id = $('#user_position').val();
                var telephone = $('#user_telephone').val();

                var model = {
                    UserName: user_name,
                    Password: password,
                    ConfirmPassword: confirm_password,
                    UserRoles: user_role,
                    Email: email
                }

                $.ajax({
                    url: "@Url.Action("RegisterUser", "Account")",
                    type: "post",
                    dataType: "json",
                    data: {
                        model: model,
                        user_first_name: first_name,
                        user_last_name: last_name,
                        position_id: position_id,
                        user_telephone: telephone
                    },
                    success: function (da) {
                        if ($('.modal-header').hasClass('alert-danger')) {
                            $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                            $('.delete-confirm').css('display', 'none');
                        }
                        $('#user_modal').modal('hide');
                        if (da.Message == "Success") {
                            //InitialProjectManager();
                        }
                        else if (da.Message == "Fail") {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html('Your data is error while saving!');
                        }
                    },
                    error: function (err) {
                        if (!$('.modal-header').hasClass('alert-danger')) {
                            $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                            $('.delete-confirm').css('display', 'none');
                        }
                        $('.success-message').html('Your data is error while saving!');
                    }
                });

            });

            $('.site-manager-confirm').click(function (e) {
                e.preventDefault();

                var firstName = $('#site_manager_first_name').val();
                var lastName = $('#site_manager_last_name').val();
                var contactPhone = $('#site_manager_telephone').val();
                var email = $('#site_manager_email').val();

                if (firstName == '' || firstName == null || lastName == null || lastName == '') {
                    alert('Please fill all required field.');
                    return;
                }

                $.ajax({
                    url: "/User/CreateNewSiteManager",
                    type: "post",
                    dataType: "json",
                    data: {
                        firstName: firstName,
                        lastName: lastName,
                        contactPhone: contactPhone,
                        email: email,
                    },
                    success: function (da) {
                        if ($('.modal-header').hasClass('alert-danger')) {
                            $('.modal-header').removeClass('alert-danger').addClass('alert-success');
                            $('.delete-confirm').css('display', 'none');
                        }
                        $('#site_manager_modal').modal('hide');
                        if (da.Message == "Success") {
                            InitialSiteManager();
                        }
                        else if (da.Message == "Fail") {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                                $('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html('Your data is error while saving!');
                        }
                    },
                    error: function (err) {
                        if (!$('.modal-header').hasClass('alert-danger')) {
                            $('.modal-header').removeClass('alert-success').addClass('alert-danger');
                            $('.delete-confirm').css('display', 'none');
                        }
                        $('.success-message').html('Your data is error while saving!');
                    }
                });
            });

        } );
    </script>
    <script type="text/javascript">

        function initialWarehousebySite(id) {
            $.ajax({
                url:"@Url.Action("GetWarehouseBySiteJSON", "Warehouse")",
                type: "get",
                dataType: "json",
                data:{id:id},
                success: function (data) {
                    $('#warehouse_project_id').empty().append("" +
                        "<option selected disabled>Select Warehouse</option>"
                    );
                    $.each(data, function (index, item) {
                        console.log(item);

                        $.each(item, function (index1, item1) {
                            $('#warehouse_project_id').append("" +
                                "<option value='" + item1.warehouse_id + "'>" + item1.warehouse_name + "</option>"
                            );
                            //('#cutomer_id').val('@Model.cutomer_id');
                        });
                    });
                },
                error: function (data) {

                }
            });
        }
        function initialWarehousebySitewithDefault(id,warehouseId) {
            $.ajax({
                url:"@Url.Action("GetWarehouseBySiteJSON", "Warehouse")",
                type: "get",
                dataType: "json",
                data:{id:id},
                success: function (data) {
                    $('#warehouse_project_id').empty().append("" +
                        "<option selected disabled>Select Warehouse</option>"
                    );
                    $.each(data, function (index, item) {
                        var selectedwarehouse='@Model.warehouse_project_id';
                        $.each(item, function (index1, item1) {
                            if (item1.warehouse_id == selectedwarehouse) {
                                $('#warehouse_project_id').append("" +
                                    "<option value='" + item1.warehouse_id + "' selected>" + item1.warehouse_name + "</option>"
                                );
                            } else {
                                $('#warehouse_project_id').append("" +
                                    "<option value='" + item1.warehouse_id + "'>" + item1.warehouse_name + "</option>"
                                );
                            }
                            

                        });

                    });
                },
                error: function (data) {

                }
            });
        }

        function InitialCustomerDropDownList() {
            $.ajax({
                url:"@Url.Action("CustomerDropDown", "Customer")",
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#cutomer_id').empty();
                    $('#cutomer_id').append("" +
                        "<option selected disabled>--- Select Customer ---</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            $('#cutomer_id').append("" +
                                    "<option value='" + item1.customer_id + "'>" + item1.customer_name + "</option>"
                                );
                            $('#cutomer_id').val('@Model.cutomer_id');
                        });
                    });
                },
                error: function (data) {

                }
            });
        }

        function InitialSiteDropDownList() {
            $.ajax({
                url:"@Url.Action("SiteDropDown", "Site")",
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#site_id').empty();
                    $('#site_id').append("" +
                        "<option selected disabled>--- Select Site ---</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            $('#site_id').append("" +
                                    "<option value='" + item1.site_id + "'>" + item1.site_name + "</option>"
                                );
                            $('#site_id').val('@Model.site_id');
                        });
                    });
                },
                error: function (data) {
                    //alert('fail');
                }
            });
        }

        function InitialProjectManager() {
            $.ajax({
                url:"@Url.Action("ProjectManagerDropdownList", "Project")",
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#project_manager').empty();
                    $('#project_manager').append("" +
                        "<option selected disabled>--- Select Project Manager ---</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            var full_name = item1.user_first_name + " " + item1.user_last_name;
                            $('#project_manager').append("" +
                                    "<option value='" + full_name + "'>" + full_name + "</option>"
                                );
                            $('#project_manager').val('@Model.project_manager');
                        });
                    });
                },
                error: function (data) {
                    alert('fail');
                }
            });
        }

        function InitialSiteManager(i,site_manager){
            $.ajax({
                url:"@Url.Action("SiteManagerDropDown", "Project")",
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#siteManagerTable tr:last-child select.site_manager').empty();
                    $('#siteManagerTable tr:last-child select.site_manager').append("" +
                        "<option selected disabled>--- select site manager ---</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            var full_name = item1.user_first_name + " " + item1.user_last_name;
                            $('#siteManagerTable tr select.site_manager').eq(i).append("" +
                                    "<option value='" + item1.user_id + "'>" + full_name + "</option>"
                                );
                        });
                    });
                    $('#siteManagerTable tr select.site_manager').eq(i).val(site_manager);
                },
                error: function (data) {
                    alert('fail');
                }
            });
        }

        function InitialSiteManagerDropDown() {
            $.ajax({
                url:"@Url.Action("SiteManagerDropDown", "Project")",
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#siteManagerTable tr:last-child select.site_manager').empty();
                    $('#siteManagerTable tr:last-child select.site_manager').append("" +
                        "<option selected disabled>--- Select Site Manager ---</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            var full_name = item1.user_first_name + " " + item1.user_last_name;
                            $('#siteManagerTable tr:last-child select.site_manager').append("" +
                                    "<option value='" + item1.user_id + "'>" + full_name + "</option>"
                                );
                        });
                    });
                },
                error: function (data) {
                    alert('fail');
                }
            });
        }

        function AddSiteManagerRow(Row) {
            var index = Row.parentNode.parentNode.rowIndex;
            InitailSiteManagerTable();
            $('#siteManagerTable tbody tr td:nth-child(3)').eq(index).html('');
        }

        function RemoveSiteManagerRow(Row) {
            var index = Row.parentNode.parentNode.rowIndex;
            var numberOfRow = $('#siteManagerTable tbody tr').length;
            if (numberOfRow > 1) {
                document.getElementById('siteManagerTable').deleteRow(index);
                if (Number(index + 1) == numberOfRow)
                    $('#siteManagerTable tbody tr td:nth-child(3)').eq(index - 1).html("<button type='button' class='btn btn-default btn-sm' onclick='AddSiteManagerRow(this)'><span class='glyphicon glyphicon-plus'></span></button>");
            }
        }

        function InitailSiteManagerTable() {
            $('#siteManagerTable').append("" +
                    "<tr>" +
                        "<td width='280px'>" +
                            "<select class='form-control site_manager'>" +
                                "<option selected disabled value=''>--- select site manager ---</option>" +
                            "</select>" +
                        "</td>" +
                        "<td style='width:40px !important;'>" +
                            "<button type='button' class='btn btn-default btn-sm' onclick='RemoveSiteManagerRow(this)'><span class='glyphicon glyphicon-trash'></span></button>" +
                        "</td>" +
                        "<td style='width:40px !important;'>" +
                            "<button type='button' class='btn btn-default btn-sm' onclick='AddSiteManagerRow(this)'><span class='glyphicon glyphicon-plus'></span></button>" +
                        "</td>" +
                    "</tr>"
                );
            InitialSiteManagerDropDown();
        }

        //Site Supervisor
        function initialSiteSupervisorTable() {
            $('#table_sitesup').append("" +
                    "<tr>" +
                        "<td width='280px'>" +
                            "<select class='form-control sitesupervisors' name='sitesupervisors'>" +
                                "<option selected disabled value=''>Select Site Supervisor</option>" +
                            "</select>" +
                        "</td>" +
                        "<td style='width:40px !important;'>" +
                            "<button type='button' class='btn btn-default btn-sm' onclick='RemoveSiteSupervisorRow(this)'><span class='glyphicon glyphicon-trash'></span></button>" +
                        "</td>" +
                        "<td style='width:40px !important;'>" +
                            "<button type='button' class='btn btn-default btn-sm' onclick='AddSiteSupervisorRow(this)'><span class='glyphicon glyphicon-plus'></span></button>" +
                        "</td>" +
                    "</tr>"
                );
            InitialSiteSupervisor();
        }

        function InitialSiteSupervisor1(i,siteSupervisor) {
            $.ajax({
                url:"@Url.Action("SiteSupervisorDropDownJSON", "Site")",
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#table_sitesup tr:last-child select.sitesupervisors').empty();
                    $('#table_sitesup tr:last-child select.sitesupervisors').append("" +
                        "<option selected disabled> Select Site Supervisor</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            var full_name = item1.Username;
                            $('#table_sitesup tr select.sitesupervisors').eq(i).append("" +
                                    "<option value='" + item1.UserId + "'>" + full_name + "</option>"
                                );
                        });
                    });
                    $('#table_sitesup tr select.sitesupervisors').eq(i).val(siteSupervisor);
                },
                error: function (data) {
                    alert('fail');
                }
            });
        }

        function InitialSiteSupervisor() {
            $.ajax({
                url:"@Url.Action("SiteSupervisorDropDownJSON", "Site")",
                type: "get",
                dataType: "json",
                success: function (data) {
                    $('#table_sitesup tr:last-child select.sitesupervisors').empty();
                    $('#table_sitesup tr:last-child select.sitesupervisors').append("" +
                        "<option selected disabled> Select Site Supervisor</option>"
                    );
                    $.each(data, function (index, item) {
                        $.each(item, function (index1, item1) {
                            var full_name = item1.Username;
                            $('#table_sitesup tr:last-child select.sitesupervisors').append("" +
                                    "<option value='" + item1.UserId + "'>" + full_name + "</option>"
                                );
                        });
                    });
                },
                error: function (data) {
                    alert('fail');
                }
            });
        }
        function AddSiteSupervisorRow(Row) {
            var index = Row.parentNode.parentNode.rowIndex;
            initialSiteSupervisorTable();
            $('#table_sitesup tbody tr td:nth-child(3)').eq(index).html('');
        }
        function RemoveSiteSupervisorRow(Row) {
            var index = Row.parentNode.parentNode.rowIndex;
            var numberOfRow = $('#table_sitesup tbody tr').length;
            if (numberOfRow > 1) {
                document.getElementById('table_sitesup').deleteRow(index);
                if (Number(index + 1) == numberOfRow)
                    $('#table_sitesup tbody tr td:nth-child(3)').eq(index - 1).html("<button type='button' class='btn btn-default btn-sm' onclick='AddSiteManagerRow(this)'><span class='glyphicon glyphicon-plus'></span></button>");
            }
        }

        //End Site Supervisor

    </script>
    }
